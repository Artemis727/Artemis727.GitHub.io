<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syaoran :)</title>
  
  
  <link href="https://artemis727.github.io/atom.xml" rel="self"/>
  
  <link href="https://artemis727.github.io/"/>
  <updated>2023-03-08T00:51:10.978Z</updated>
  <id>https://artemis727.github.io/</id>
  
  <author>
    <name>Syaoran Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DAU下降分析</title>
    <link href="https://artemis727.github.io/2023/03/08/DAU%E4%B8%8B%E9%99%8D%E5%88%86%E6%9E%90/"/>
    <id>https://artemis727.github.io/2023/03/08/DAU%E4%B8%8B%E9%99%8D%E5%88%86%E6%9E%90/</id>
    <published>2023-03-08T00:17:09.000Z</published>
    <updated>2023-03-08T00:51:10.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="产品日活-DAU-下降，该如何分析"><a href="#产品日活-DAU-下降，该如何分析" class="headerlink" title="产品日活(DAU)下降，该如何分析"></a>产品日活(DAU)下降，该如何分析</h1><blockquote><p>案例：例如网易新闻APP日活突然下降5%，需要尽快排查一下数据下跌的原因。</p></blockquote><h2 id="分析框架和逻辑思维"><a href="#分析框架和逻辑思维" class="headerlink" title="分析框架和逻辑思维"></a>分析框架和逻辑思维</h2><p>![image-20230308082432891](&#x2F;Users&#x2F;xiaoyu&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230308082432891.png)</p><h2 id="1-对数据异常原因做出假设，利用数据验证"><a href="#1-对数据异常原因做出假设，利用数据验证" class="headerlink" title="1. 对数据异常原因做出假设，利用数据验证"></a>1. 对数据异常原因做出假设，利用数据验证</h2><p>影响DAU因素较多，对所有维度直接拆解耗时耗力。所以需要<strong>结合以往经验及各种信息，对数据异常的原因做出假设</strong>，然后对数据<strong>从不同维度拆分来验证假设</strong>。可能随着之前的假设的验证不断进行新的假设，直到<strong>定位原因</strong>。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-22a204d699aa50233b3dee6f2264545e_1440w.jpg"                      alt="img"                ></p><h2 id="2-确认数据真实性"><a href="#2-确认数据真实性" class="headerlink" title="2. 确认数据真实性"></a>2. 确认数据真实性</h2><ul><li>将时间轴拉长(3个月)，做同比和环比，看近期异常还是历史异常；</li><li>查看与该指标关联的其他指标是否异常；</li><li>找数据流相关产品和研发确实数据真实性。</li></ul><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-9244e21224593a51db9eefab77969a2c_1440w.webp"                      alt="img"                ></p><h2 id="3-常见拆分维度"><a href="#3-常见拆分维度" class="headerlink" title="3. 常见拆分维度"></a>3. 常见拆分维度</h2><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-86283af0164e49c1459e33431baa3c65_1440w.webp"                      alt="img"                ></p><p><strong>根据以上维度拆分之后，每项数据都需要和历史数据做对比，计算影响系数。</strong></p><p>影响系数&#x3D;(今日数据−昨日数据)&#x2F;(今日总量−昨日总量)</p><p><strong>影响系数越大，说明此处为主要原因所在。</strong></p><p>通过上述维度进行初步拆分，可以<strong>大致定位数据异常范围</strong>。</p><h2 id="4-外部原因分析"><a href="#4-外部原因分析" class="headerlink" title="4. 外部原因分析"></a>4. 外部原因分析</h2><p>外部：外部原因分析可以根据<strong>PEST（政治、经济、社会、技术）模型</strong>进行分析。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-cc5ad446c4efa076975b2fbaafb3ea54_1440w.webp"                      alt="img"                ></p><h2 id="5-内部原因分析"><a href="#5-内部原因分析" class="headerlink" title="5. 内部原因分析"></a>5. 内部原因分析</h2><p>通过初步分析定位范围之后，需要进行进一步的排查，一般从三个维度来分析：<strong>产品、技术、运营</strong>；<strong>可以和这几个人一起拉一个会讨论一下</strong>。同时应注意<strong>数据统计口径</strong>是否发生变化。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-c820282ce239ee9ae366cabcb5cc950c_1440w.webp"                      alt="img"                ></p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>所以我们整个的分析流程大致为：</p><p><strong>先结合以往数据异常进行假设 —— 在一个假设得到验证之后 —— 从不同维度进行拆解，确定异常范围 —— 从产品、运营、技术侧逐一排查，最终找到原因。</strong></p><p>以上分析框架不仅局限于DAU波动，对于数据异常类问题即可根据以上模型进行分析。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;产品日活-DAU-下降，该如何分析&quot;&gt;&lt;a href=&quot;#产品日活-DAU-下降，该如何分析&quot; class=&quot;headerlink&quot; title=&quot;产品日活(DAU)下降，该如何分析&quot;&gt;&lt;/a&gt;产品日活(DAU)下降，该如何分析&lt;/h1&gt;&lt;blockquote&gt;
</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>SQL 复习1</title>
    <link href="https://artemis727.github.io/2023/03/06/SQL-%E5%A4%8D%E4%B9%A01/"/>
    <id>https://artemis727.github.io/2023/03/06/SQL-%E5%A4%8D%E4%B9%A01/</id>
    <published>2023-03-06T12:38:18.000Z</published>
    <updated>2023-03-06T12:42:45.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对于-join，如果不写-left-inner-right-，默认是什么联接呢？"><a href="#对于-join，如果不写-left-inner-right-，默认是什么联接呢？" class="headerlink" title="对于 join，如果不写 left, inner, right ，默认是什么联接呢？"></a>对于 join，如果不写 left, inner, right ，默认是什么联接呢？</h1><p>是<code>inner join</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a <span class="keyword">join</span> b <span class="keyword">on</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a <span class="keyword">inner</span> <span class="keyword">join</span> b <span class="keyword">on</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a, b <span class="keyword">where</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"># 上面的三个是相等的.</span><br><span class="line"></span><br><span class="line"># 剩下的<span class="keyword">join</span>类型有:</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">cross</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span></span><br><span class="line"></span><br><span class="line"># <span class="number">2005</span>新加</span><br><span class="line"><span class="keyword">cross</span> apply</span><br><span class="line"><span class="keyword">outer</span> apply</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;对于-join，如果不写-left-inner-right-，默认是什么联接呢？&quot;&gt;&lt;a href=&quot;#对于-join，如果不写-left-inner-right-，默认是什么联接呢？&quot; class=&quot;headerlink&quot; title=&quot;对于 join，如果不写</summary>
      
    
    
    
    
    <category term="SQL" scheme="https://artemis727.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>六级翻译</title>
    <link href="https://artemis727.github.io/2023/03/04/%E5%85%AD%E7%BA%A7%E7%BF%BB%E8%AF%91/"/>
    <id>https://artemis727.github.io/2023/03/04/%E5%85%AD%E7%BA%A7%E7%BF%BB%E8%AF%91/</id>
    <published>2023-03-04T09:39:44.000Z</published>
    <updated>2023-03-07T04:38:02.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023-x2F-03"><a href="#2023-x2F-03" class="headerlink" title="2023&#x2F;03"></a>2023&#x2F;03</h1><p>华北平原是中国第二大平原，位于黄河下游。华北平原西邻太行山，东至海岸，北起燕山，南接淮河，面积31万平方公里。这里地势低平，多在海拔50米以下。它由黄河、淮河和海河的冲积物形成，也被称为黄河淮海平原。平原地势平坦，河湖众多，交通便利，经济发达，自古即为中国政治、经济、文化中心。</p><p><strong>The North China Plain</strong> is the second largest plain in China, located at the <strong>lower reaches of the Yellow River</strong>. <strong>Bordering</strong> on the Taihang Mountains in the west, the coast in the east, Yanshan Mountain in the north and Huaihe River in the south, it <strong>covers</strong> 310,000 square km. It has a <strong>smooth</strong> <strong>terrain</strong> with an <strong>elevation</strong> of lower than 50 meters. Formed of <strong>alluvial</strong> <strong>deposits</strong> from the Yellow, Huaihe and Haihe rivers, it is also known as the Yellow River-Huaihe-Haihe Plain. With its <strong>flat</strong> terrain, many rivers and lakes, convenient <strong>transportation</strong> and developed economy, the plain has been the political, economic and cultural center of China <strong>since ancient times</strong>.</p><hr><p>华北平原（The North China Plain）是中国最大的冲积（alluvial）平原。华北平原是世界上人口最密集的区域之一。它的面积约为40.95万平方公里，延绵覆盖着河南、河北和山东省的大部分地区。它是中国重要的农作物产区之一。首都北京坐落在华北平原的东北边缘位置。此外，天津，这所重要的工业城市和商业港口，也临近其东北海岸。传统意义上，华北平原的南部被称之为“中原”，“中原”是中华文明的摇篮。</p><p>The North China Plain, the largest alluvial plain in China, is <strong>one of the regions with the densest population in the world</strong>. It covers an area of about 409.5 thousand square kilometers, and it <strong>extends over</strong> much of Henan, Hebei and Shandong provinces. It is one of China’s most important <strong>agricultural regions</strong>. The plain is <strong>one of the most densely populated regions in the world</strong>. Beijing, the <strong>national capital</strong>, is located <strong>on</strong> the northeast edge of the plain. In addition, Tianjin, as an important industrial city and commercial port, is near its northeast coast. Its southern part is traditionally referred to as the Central Plain, which formed the <strong>cradle</strong> of <strong>Chinese civilization</strong>.</p><hr><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-d73ec90dfd7c3a056408d8c9b8752981_1440w.webp"                      alt="img"                ></p><p>Currently, the whole society is gaining a better understanding of the issue of population. It is agreed that the growth of population is beneficial to a <strong>coordinated</strong> and <strong>sustained</strong> development between population and economy, society, resources and environment. To solve the population problem, <strong>emphasis</strong> should be <strong>laid</strong> <strong>on</strong> the improvement of the population quality, health level and quality of life so as to realize the <strong>all-round development</strong> of all <strong>humanity</strong>. The issue of population is <strong>essentially</strong> a problem of development and could only be solved through economic, social and cultural development.</p><p>Ò【翻译热词】</p><p>四六级考场阅卷老师全喜欢的高分短语!</p><p>1.issue of population人口问题</p><p>2.gain a better understanding of更好地理解</p><p>3.the growth of population人口增长</p><p>4.a coordinated and sustained development协调和可持续发展</p><p>5.population quality 人口素质</p><p>6.all-round development全面发展</p><p>7.health level健康水平</p><p>8.cultural development文化发展</p><p>【高频词汇】</p><ol><li>coordinate[kau’5:dinert] v.协同动作;协调(7次)</li><li>sustain[sa’stein] v.维持，保持（14次)</li><li>essentially[I’senJoli] adv.本质上;根本上(11次)</li></ol><hr><p>翻译题目方言</p><p>方言(dialect)是指只在局部地区使用的语言。形成方言的原因很多，如人口的迁移、山川地理的阻隔、不同语言的相互接触和影响等。方言之间的差异表现在语音(phonetics)、词汇、语法各个方面，语音方面尤为突出。据说中国十大最难懂方言中，温州话排名第一，广东话紧随其后。普通话作为人与人之间交流沟通的工具，普及固然重要，而方言作为地方文化的一种，是民族文化不可缺少的组成部分，也应被保护和传承。</p><p>参考译文</p><p>A <strong>dialect</strong> is a language spoken only in a local area. There are many reasons for the formation of dialects, such as the <strong>migration</strong> of population, the <strong>barrier</strong> of mountains and rivers and the <strong>mutual</strong> contact and influence of different languages. The differences between dialects are <strong>manifested</strong> in <strong>phonetics</strong>, <strong>vocabulary</strong> and grammar, especially phonetic aspects. It is said that Wenzhou dialect is the most difficult one to understand in China, followed by Cantonese. <strong>Mandarin</strong>, as a tool of <strong>interpersonal</strong> communication, is of course important to be <strong>popularized</strong>, <strong>while</strong> dialects, as a kind of local culture, are an <strong>indispensable</strong> part of national culture and should also be protected and <strong>inherited</strong>.</p><hr><p><strong>2023年3月四六级翻译预测| 二十四节气：</strong></p><p>24节气(24 solarterms)是统称，包括 12节气（12 majorsolar terms)和 12中气 (12 minorsolar terms),它们彼此之间相互关联。24节气反映了天气变化，指导农业耕作，也影响着人们的生活。春秋战国时期，人们开始使用节气作为补充历法 (calendar)。公元前104年，24节气最终确立。众所周知，中国是个有着悠久农业发展史的国家。农业生产受自然规律影响极大。在古代，农民根据太阳的运动安排农业生产活动。24节气考虑到了太阳的位置，这就是我们重视它的原因。</p><p>参考译文：</p><p>The 24 solar terms <strong>are the whole name of the system that</strong> consists of 12 major solar terms and 12 minor solar terms <strong>linked</strong> with each other. It reflects climate change, guides agriculture <strong>arrangements</strong>, and also affects people’s life. In the Spring and Autumn Period and the Warring States Period, people began to use solar terms as the <strong>supplementary</strong> calendar. It was in 104 B, C. that the 24 solar terms were finally set down. As we all know, China is a country with a long history of agriculture. Agricultural production is largely influenced by <strong>the laws of nature</strong>. In ancient times, farmers arranged their agricultural activities according to the move of the sun. It is the fact that the 24 solar terms <strong>take into account</strong> the position of the sun that makes us attach importance to it.</p><hr><p><strong>四六级翻译|中国朝代</strong></p><p>中国有4000多年的历史，是世界最古老的文明之一。从公元前21世纪的夏朝开始至清朝结束，中国历史上经历过几十个朝代的变更。每个朝代在政治、经济、文化、科技领域等都有独特的成就。汉朝是当时世界上最先进的帝国。”汉族“（the Han Nationality）这一名称就得名于汉朝。唐朝因统一时间长、国力强盛而被国人铭记，因此在海外的中国人自称为“唐人”（Tang people）。宋朝和明朝是经济、文化、教育与科学高度繁荣的时代。但朝代的更替一般会导致连年战争，给人民大众带来了难以言表的痛苦。</p><p><strong>参考译文：</strong></p><p>With a history of more than 4,000 years,China is one of the oldest <strong>ancient civilizations</strong> of the world. From Xia Dynasty in the 21st century BC to Qing Dynasty, China experienced <strong>dozens of</strong> dynasties in history. Each dynasty achieved unique accomplishments in the <strong>fields</strong> of politics, economy, culture, science and technology, etc. Han Dynasty was the most <strong>advanced empire</strong> at that time, which contributes to the formation of the name “the Han Nationality . Tang Dynasty impressed Chinese for its long time <strong>unification</strong> and powerful national strength, because of which overseas Chinese call themselves “Tang people” abroad. Song Dynasty and Ming Dynasty were periods when economy, culture, education and science were highly <strong>prosperous</strong>. But the change from one dynasty to another usually led to <strong>long-lasting wars</strong>, which brought <strong>unspeakable</strong> <strong>suffering</strong> for <strong>the masses</strong>.</p><hr><p>2023年3月四六级翻译预测| 清明节</p><p>清明节是中国重要的传统节日，通常在阳历4月5日左右。它始于周朝，有2500多年的历史。清明节是中国人祭祀（offer sacrifices to）祖先的日子。在清明节祭祀逝去的先祖亲人实际上体现了生者对逝者的思念与敬爱，由于清明节与中国另一个传统节日“寒食节”（Cold Food Day）临近，所以吃寒食也成为清明节的习俗之一。除了扫墓，清明节还有荡秋千等风俗活动。如今，清明节已经成为中国重要的非物质文化遗产（intangible cultural heritage）。</p><p>参考译文：</p><p>The Qing Ming Festival is an important traditional Chinese festival which usually <strong>falls around</strong> April 5 <strong>in the solar calendar</strong>. It started from Zhou Dynasty, with a history of over 2,500 years. The Qing Ming Festival is an <strong>occasion</strong> for Chinese people to <strong>offer sacrifices to ancestors</strong>. Offering sacrifices to <strong>the departed</strong> on the Qing Ming festival actually shows that <strong>the living miss</strong>, respect and love <strong>the dead</strong>. The Qing Ming Festival is close to another Chinese traditional festival “Cold Food Day”; therefore, eating cold food has turned into one of the customs of the day. Besides <strong>tomb-sweeping</strong>，there are also other customs and activities like <strong>swinging</strong> on that day. At present, the Qing Ming Festival has become an important <strong>intangible</strong> <strong>cultural heritage</strong> in China.</p><h1 id="2022-x2F-09"><a href="#2022-x2F-09" class="headerlink" title="2022&#x2F;09"></a>2022&#x2F;09</h1><p>贴春 联 (Spring Festival couplets)是中国人欢度春节的一个重要习俗。春联由一对诗句 和四字横 批 (horizontal scroll)组成，诗句和横批用金色或黑色写在红纸上，红色代表幸运， 金色代表财富。春联贴在大门左右两侧和门框上方。春联的诗句体现中国传统诗词的特点， 两句诗的字数相同、内容相关。横批凸显春联的主题，更是锦上添花。春联以简洁的文字 描绘生动的形象，抒发美好的愿望。当家家户户贴春联时，人们就会意识到春节己经正式拉 开序幕。</p><p><strong>Pasting</strong> the Spring Festival couplets is an important custom for Chinese people to celebrate the Spring Festival. The Spring Festival couplets <strong>consist of</strong> <strong>a pair of poems and a four-character horizontal scroll</strong> <strong>written in gold or black</strong> on red paper, <strong>with</strong> red representing luck and gold representing wealth. The Spring Festival couplets are pasted on the left and right sides of the <strong>gate</strong> and <strong>above</strong> the door <strong>frame</strong>. The <strong>lines</strong> of the Spring Festival couplets <strong>embody</strong> the <strong>characteristics</strong> of traditional Chinese <strong>poetry</strong>, with two lines having the same number of characters and related content. The <strong>horizontal scroll</strong> highlighting the theme of the Spring Festival couplets is even <strong>the icing on the cake</strong>. People <strong>depict</strong> vivid images in simple words in the Spring Festival couplets, expressing a beautiful vision. When every household puts up the Spring Festival couplets, people will realize that the Spring Festival has officially <strong>kicked off</strong>.</p><h1 id="2022-x2F-09-1"><a href="#2022-x2F-09-1" class="headerlink" title="2022&#x2F;09"></a>2022&#x2F;09</h1><p>自古以来， 印章在中国就是身份的凭证和权力的象征。 印章不仅具有实用性， 而且也 是一种艺术形式， 是一门集书法与雕刻于一体的古老艺术， 经常被看作与书画并列的独立 艺术品。 印章从材料的选择、制作的工艺到字体的设计， 都具有极其丰富的美学表现。 其 他国家的艺术家通常在其绘画作品上签名， 而中国艺术家则往往在其书画作品上盖上印章 代替签名。 这样， 印章也就成为作品的组成部分， 是体现作品独特性的一种方式。</p><p>From ancient times, the seal has been <del>a</del> certification of identity and a symbol of power. The seal is not only practical, bus also a kind of artistic form. It is a kind of time-honored art that mixes caligraph and sculpture, being regarded as an independant artwork that is comparable with painting and caligraphy. The seal has an extremely rich aesthetic performance from the choice of materials, the technique of producing and the design of fonts. Artists from other countries usually sign on their paintings, while Chinese artists always print their seals on their works instead of signing by hand. Therefore, the seal is going to become an intergral part of the works and a way to present the uniqueness of works. </p><p><font color  = "red"> <strong>Since</strong> ancient times, the seal has been <strong>proof</strong> of <strong>identity</strong> and a symbol of power in China. The seal is not only practical, but also an <strong>art</strong> form and an <strong>ancient</strong> art that <strong>combines</strong> <strong>caligraphy</strong> and <strong>sculpture</strong>. It is often <strong>seen</strong> as an independent work of art alongside caligraphy and painting. The seal is extremely rich in aesthetic <strong>expression</strong>, from the <strong>selection</strong> of materials, the <strong>craftsmanship</strong> to the design of the <strong>typeface</strong>. Arstists in other countries usually <strong>sign their paintings</strong>, while Chinese artists often use seals <strong>instead of</strong> <strong>signitures</strong> on their aintings and caligraphy. In this way, the seal also becomes an <strong>integral</strong> part of the <strong>work</strong> and is a way to <strong>reflect its uniqueness</strong>. </font></p><ul><li><p><strong>proof前面没有冠词</strong>；symbol前面有冠词</p></li><li><p><strong>ancient</strong> 古代的；<strong>古老的</strong></p></li><li><p>书法是<strong>calligraphy</strong>不是caligraph，雕刻是<strong>sculpture</strong></p></li><li><p><strong>typeface &amp; font</strong>: </p><ul><li>A typeface is the underlying visual design that can exist in many different typesetting technologies, and a font is one of these implementations. In other words, <strong>a typeface is what you see and a font is what you use</strong>.</li></ul></li><li><p><strong>selection &amp; choice</strong>: </p><ul><li>When used as <strong>nouns</strong>, <strong>choice</strong> means an option, whereas <strong>selection</strong> means the process or act of selecting.</li><li>“Do I have a choice of what color to paint it?”</li><li>“The large number of good candiadtes made selection difficult.”</li></ul></li><li><p><strong>certification &amp; certificate &amp; proof:</strong> </p><ul><li><p><strong>certification</strong>强调的是出具证明的动作 act&#x2F;process，为不可数名词；而<strong>certificate</strong>强调的是一份证明 <strong>document&#x2F;paper</strong>，为可数名词。</p><ul><li><p>the medical <strong>certification</strong> of the cause of death</p><p>为死因出具医学鉴定</p></li><li><p><strong>certification</strong> of competence</p><p>颁发技能证书</p></li><li><p>a birth <strong>certificate</strong></p><p>出生证明</p></li><li><p>a degree <strong>certificate</strong></p><p>学位证书</p></li><li><p>a certificate course 认证课程; the certification exam 证书考试</p></li></ul></li><li><p>A certificate is a <strong>official</strong> document stating that information is true for example a birth or marriage certificate.</p></li><li><p>Proof is evidence&#x2F;a piece of information that shows that something exists or is true.</p></li></ul></li></ul><h1 id="2022-x2F-09-2"><a href="#2022-x2F-09-2" class="headerlink" title="2022&#x2F;09"></a>2022&#x2F;09</h1><p>中央电视台总部大楼位于北京市朝阳区，总建筑面积约55万平方米。主楼由两座塔楼组成，因其独特的造型，成为这座城市的一个热门景点，每天都吸引众多游客前来参观。大楼的创新结构是中外建筑师长期合作的成果，不仅体现了环保意识，而且大大节约了建筑材料。中央电视台总部设有一条穿过大楼的专用通道，向公众展示各个工作室以及中央电视台的历史。在那里，参观者还可以看到故宫和北京其他地方的壮观景色。</p><p>The CCTV headquarters building is located in Chaoyang district, Beijing and has an area of 550 thousand square metres. The major building consists of two towers that becomes a hot spot in Beijing because of its distinct character, attracting a largr number of tourists to visit everyday. The innovative structure of the building results from the long-term cooperation of  Chinese and foreign architects. It not only refelcts environmental awareness, but slao saves a lot of constructing materials. The CCTV headquarter has a specific access that is used to present history of all kinds of studios and CCTV to the public. There, the visitors can also witness the spectacular sceneries of the Imperial Palace and other places in Beijing. </p><p><font color = 'red'>China Central Television (CCTV) headquarters Building is located in Chaoyang District, Beijing, with a <strong>toal floor area</strong> of about 550,000 <strong>square meters</strong>. The <strong>main</strong> building <strong>consisting of</strong> two <strong>towers</strong> has become a popular <strong>attraction</strong> of the city because of its <strong>unique shape</strong>, attracting many tourists every day. The innovative structure of the building <strong>is attributed to</strong> the <strong>long-term collaboration</strong> between <strong>Chinese and foreign architects</strong>, which not only reflects <strong>environmental awareness</strong>, but also greatly saves <strong>building materials</strong>. CCTV headquarters <strong>set up a dedicated passage</strong> through the building to show the public the various studios anf the history of CCTV. <strong>From there</strong>, visitors can also <strong>enjoy</strong> the spectacular <strong>views</strong> of <strong>the Forbidden City</strong> and other places in Beijing.</font></p><ul><li><strong>cooperation &amp; collaboration:</strong> <ul><li>cooperate 艰苦地干活、努力，<strong>很多人一起合作共同创造或实现一个目标，不分彼此的合作</strong></li><li>collaborate（operate）操作、运作，<strong>长期的一种关系，单纯的合作&#x2F;配合对方</strong></li></ul></li></ul><h1 id="2022-x2F-06"><a href="#2022-x2F-06" class="headerlink" title="2022&#x2F;06"></a>2022&#x2F;06</h1><p>卢沟桥位于天安门广场西南 15 公里处，横跨永定河， 是北京现存最古老的多拱石桥。 卢 沟 桥 最 初 建 成 于 1192 年 ， 1698 年重建， 由 281 根柱子支撑。 每根柱子上都有一头石狮。 这些石狮的头、背、腹部或爪子上都藏着更多的狮子。 这些石狮生动逼真、千姿百态， 是 卢沟桥石刻艺术的精品。桥上的石狮不计其数，因而北京地区流传着“卢沟桥上的石狮子——数不清”的说法。</p><p>卢沟桥不仅以其美学特征闻名于世，还被公认为石桥建筑史上的一座丰碑。</p><p>Lugou Bridge is 15 kilometers southeastern far from the Tiananmen Square, across the Yongding River and is the present oldest multi-arch stone bridge. Lugou bridge is originally built in 1192 and is reconstructed in 1682, supported by 281 pillars that each has a stone lion on them. More lions are hided on their head, back, belly and claw. These stone lions are very vivid and have a variety of gestures, are miracles of Lugou Bridge’s stone-sculpture art. The stone lions on the bridge are hard to count, hence there is a folk statement that “the lions on the Lugou Bridge - countless”.</p><p>Lugou Bridge is not only famous for its aesthetic characteristic, but also regarded as a milestone in the stone bridge history.</p><p><u><strong>Located 15 km southwest of</strong> Tian’anmen Square, Lugou Bridge <strong>stretches over</strong> the Yongding River and is the oldest <strong>existing</strong> <strong>multi-arched</strong> stone bridge in Beijing.</u> The <strong>original construction</strong> of the bridge was <strong>completed</strong> in 1192 and then in 1698 the bridge was reconstructed. The bridge is <strong>supported</strong> by 281 <strong>pillars</strong>, and <strong>on</strong> each pillar <strong>stands</strong> a stone lion. <u>More lions <strong>hide themselves on</strong> the head and back, <strong>under</strong> the belly <strong>or on</strong> the <strong>paws</strong> of each lion.</u> The lions are vivd with various <strong>postures</strong> and differrent <strong>expressions</strong>, and they are known as the <strong>fine work</strong> of the <strong>stone carving art</strong>. As there are <strong>numorous</strong> stone lions on the bridge, there is a saying in Beijing <strong>echoing</strong>, “The lions are too numerous to count.”</p><p>Lugou Bridge is not only well-known in the world for its <strong>aesthetic features</strong>, but also <strong>well recognized</strong> as a <strong>monument</strong> in the <strong>architectural</strong> history of stone bridge. </p><h1 id="2022-x2F-06-1"><a href="#2022-x2F-06-1" class="headerlink" title="2022&#x2F;06"></a>2022&#x2F;06</h1><p>南京长江大桥是长江上首座由中国设计、采用国产材料建造的铁路、公路两用桥，上层 的 4 车道公路桥长 4589 米， 下层的双轨道铁路桥长 6772 米。铁路桥连接原来的天津一浦口 和上海一南京两条铁路线，使火车过江从过去一个半小时缩短为现在的 2 分钟。 大桥是南北 交通的重要枢纽， 也是南京的著名景点之一。</p><p>南京长江大桥的建成标志着中国桥梁建设的一个飞跃， 大大方便了长江两岸的物资交流 和人员来往， 对促进经济发展和改善人民生活起到了巨大作用。</p><p>Nanjing Long River Bridge is the first double-used bridge by both rail road and highway that  is designed by Chinese and constructed with China-made materials. The upper-level four-car road is 4589 meters in length and the lower-level two-rails road is 6772 meters in length. The rail-road beidge connects two rail lines, the previous Tianjin-Pukou and Shanghai-Nanjing, which shortens the time that trains need to pass the river from half an hour to 2 minutes. The bridge is not only an important hinge of transportation between north and south, but also a famous spot in Nanjing.</p><p>The completion of the construction of Nanjing Long River Road symbolizes a huge leap of Chinese bridge constructing techniques, making the items’ exchange and people’s interaction far more convenient than before, making a huge effect on promoting the development of the economy and people’s quality of life.</p><img                       lazyload                     alt="image"                     data-src="/Users/xiaoyu/Library/Application Support/typora-user-images/image-20230306115222574.png"                      alt="image-20230306115222574" style="zoom:30%;"                 ><h1 id="2022-x2F-06-2"><a href="#2022-x2F-06-2" class="headerlink" title="2022&#x2F;06"></a>2022&#x2F;06</h1><p>赵州桥建于隋朝，公元 605 年左右，长 50.82 米，宽 9.6 米，跨度 37.37 米。天才建筑 师李春设计并监督了桥的建设。赵州桥结构新颖、造型优美。桥有一个大拱，在大拱的两 端有两个小拱，帮助排泄洪水、减轻桥梁重量并节省石材。建成以来，该桥经受了多次洪 水和地震，但其主体结构仍然完好无损，至今仍在使用。</p><p>赵州桥是世界桥梁建筑史上的一次创举，是中国古代文明史上的一项杰出成就。类似 设计的桥梁直到14 世纪才在欧洲出现，比赵州桥晚了 700 多年。</p><p>Zhaozhou Bridge was built in Sui Dynasty, about BC 605. It is 50.82 meters long, 9.6 meters wide, crossing over 37.37 meters. The genius architect, Li Chun, designed and supervised the construction of the bridge. Zhaozhou Bridge has an innovative structure and beautiful shape. The bridge has a big arch, with two small arches in both sides of it that can help with discharging flood, reducing the weight og the bridge and saving stone materials. Since the bridge was built, it experienced flood and earthquake for several times, but its main structure is still in good condition and under used.</p><p>Zhaozhou Bridge is a great work in the world’s bridge construction history and an outstanding achievement in Chinese history of civilization. Bridges with similar design did not appear until 14 centuries in Europe and were later than Zhaozhou Bridge for mroe than 700 years.</p><p><strong>The</strong> Zhaozhou Bridge, which was built in the Sui Dynasty around 605 AD, is 50.82 metres long and 9.6 metres wide with a span of 37.37 meters. Li Chun,a genius architect, designed and supervised its construction. The bridge boasts a novel structure and a graceful appearance, with a major arch in the middle and two minor ones on its ends which help discharge floods, reduce the weight of the bridge and save stones. Since the completion, the bridge has withstood floods and earthquakes, but remains intact in its main structure and stil available in use. The Zhaozhou Bridge is a pioneering undertaking in the world history of bridge construction and a masterpiece of the Chinese ancient civilization for the simple reason that its similar bridge did not appear in Europe until the 14th century,700 years later than the Zhaozhou Bridge.</p><ul><li><p>公元前 <strong>BC（Before Christ 基督前）</strong> 公元后 <strong>AD（Anno Domini 主后）</strong></p></li><li><p>a pioneering undertaking <img                       lazyload                     alt="image"                     data-src="/Users/xiaoyu/Library/Application Support/typora-user-images/image-20230306122428471.png"                      alt="image-20230306122428471" style="zoom:50%;"                 ></p></li><li><p>remain in use&#x2F; be in use</p></li><li><p>the history of the CHinese ancient civilization 文明史</p></li></ul><h1 id="2021-x2F-12"><a href="#2021-x2F-12" class="headerlink" title="2021&#x2F;12"></a>2021&#x2F;12</h1><p><strong>2021.12英语<a class="link"   href="http://class.hujiang.com/category/12348436634/p21_121?ch_source=ipo_qbmh_0_gjcdlwj" >六级<i class="fas fa-external-link-alt"></i></a><a class="link"   href="http://class.hujiang.com/category/12368437945?ch_source=ipo_qbmh_0_gjcdlwj" >翻译<i class="fas fa-external-link-alt"></i></a>真题(一)</strong></p><p>延安位于陕西省北部，地处黄河中游，是中国革命的圣地。毛泽东等老一辈革命家曾在这里生活战斗了十三个春秋，领导了抗日战争和解放战争，培育了延安精神，为中国革命做出了巨大贡献。延安的革命旧址全国数量最 大、分布最 广、级别最 高。延安是全国爱国主义、革命传统和延安精神教育基地。延安有9个革命纪念馆，珍藏着中共中央和老一辈革命家在延安时期留存下来的大量重要物品，因此享有“中国革命博物馆城”的美誉。</p><p>Located in the northern part of Shanxi Province and <strong>in the middle reaches</strong> of the Yellow River，Yan’an is the <strong>sacred land</strong> of the Chinese <strong>Revolution</strong>. <strong>The old generation of revolutionaries</strong> such as Mao Zedong lived and <strong>fought</strong> here for thirteen years, leading the <strong>War of Resistance against Japanese Aggression</strong> and <strong>the War of Liberation</strong>, <strong>cultivating</strong> the spirit of Yan’an, and making great contribution to the Chinese revolution. With the largest number of <strong>revolutionary sites</strong> that are distributed widest and have the highest level in the country，Yan’an is a national <strong>base</strong> for <strong>patriotism</strong>, <strong>revolutionary tradition</strong> and <strong>spiritual education</strong>. There are nine revolutionary <strong>memorial halls</strong>, which hold a large number of important <strong>items</strong> left by the <strong>Central Committee of the Communist Party of China</strong> and the old generation of revolutionaries during the Yan’an period, so it enjoys the <strong>reputation</strong> of the museum city of Chinese revolution.</p><p><strong>2021.12英语<a class="link"   href="http://www.hjenglish.com/liujidaan/liujifanyiti/" >六级翻译<i class="fas fa-external-link-alt"></i></a>真题(二)</strong></p><p>井冈山地处湖南江西两省交界处，因其辉煌的革命历史被誉为“中国革命红色摇篮”。1927年10月，毛泽 东、朱德等老一辈革命家率领中国工农红军来到这里，开展了艰苦卓绝的斗争，创建了第 一个农村革命根据地，点燃了中国革命的星星之火，开辟了“农村包围(besiege)城市，武装夺取政权”这一具有中国特色的革命道路，中国革命从这里迈向胜利。井冈山现有100多处革命日址，成为一个“没有围墙的革命历史博物馆”，是爱国主义和革命传统教育的重要基地。</p><p>Jinggangshan is located at the <strong>boundary</strong> of Hunan Province and Jiangxi Province, which is <strong>honored</strong> as “the red <strong>cradle</strong> of Chinese revolution” <strong>for</strong> its <strong>glorious revolutionary history</strong>. In October 1927, the old generation like Mao Zedong and Zhu De led the <strong>Chinese Workers’ and Peasants’ Army</strong> here, <strong>where</strong> they created the first <strong>rural revolutionary base</strong> with much extremely <strong>hard and bitter struggle</strong> and <strong>light the sparks of</strong> Chinese revolution, <strong>breaking a revolutionary path</strong> with Chinese <strong>characteristic</strong> to <strong>besiege the city from the countryside</strong> and to <strong>seize power by armed force</strong>. It is here that the revolution moves toward success. There are <strong>over</strong> 100 revolutionary sites in Jinggangshan, a <strong>vital</strong> base for <strong>patriotism</strong> and education of revolutionary traditions, which has become a revolutionary history museum without <strong>any</strong> walls.</p><p><strong>2021.12英语六级翻译真题(三)</strong></p><p>中国共产党第 一次全国代表大会会址位于上海兴业路76号，是一栋典型的上海式住宅，建于1920年秋。1921年7月23日，中国共产党第 一次全国代表大会在此召开，大会通过了中国共产党的第 一个纲领和第 一个决议，选举产生了中央领导机构，宣告了中国共产党的诞生。1952年9月，中共一大会址修复，立纪念馆并对外开放。纪念馆除了介绍参加一大的代表之外，还介绍党的历史发展进程，现已成为了解党史、缅怀革命先烈的爱国主义教育基地。</p><p>Situated at No.76 Xingye Road, Shanghai, the Site of the First <strong>National Congress of the Communist Party of China</strong> is a typical <strong>Shanghai-style residence</strong> built in the fall of 1920. On July 23, 1921, the First <strong>National Congress of the CPC</strong> was held here, where the first <strong>programme</strong> and <strong>resolution</strong> of the CPC were passed, and the <strong>collective central leadership</strong> was <strong>elected</strong>, thus <strong>announcing</strong> the <strong>birth</strong> of <strong>the Communist Party of China</strong>. In September 1952, the site was <strong>renovated</strong>, and a <strong>Memorial Hall</strong> was established and opened to the public. In addition to introducing the representatives who participated in the First Congress, the Memorial Hall also introduced the <strong>historical development</strong> of the party, which has become a <strong>patriotic</strong> education <strong>base</strong> to know party’s history and <strong>commemorate</strong> the memory of revolutionary <strong>martyrs</strong>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023-x2F-03&quot;&gt;&lt;a href=&quot;#2023-x2F-03&quot; class=&quot;headerlink&quot; title=&quot;2023&amp;#x2F;03&quot;&gt;&lt;/a&gt;2023&amp;#x2F;03&lt;/h1&gt;&lt;p&gt;华北平原是中国第二大平原，位于黄河下游。华北平原西邻太行山，东至</summary>
      
    
    
    
    <category term="六级" scheme="https://artemis727.github.io/categories/%E5%85%AD%E7%BA%A7/"/>
    
    
    <category term="英语" scheme="https://artemis727.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Kaggle|房价预测</title>
    <link href="https://artemis727.github.io/2023/02/28/HousePricing2/"/>
    <id>https://artemis727.github.io/2023/02/28/HousePricing2/</id>
    <published>2023-02-28T07:38:14.000Z</published>
    <updated>2023-02-28T09:23:27.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h1><h2 id="ProfileReport-1"><a href="#ProfileReport-1" class="headerlink" title="ProfileReport [1]"></a>ProfileReport [1]</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ydata_profiling <span class="keyword">as</span> ppf</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df_train = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>)</span><br><span class="line">ppf.ProfileReport(df_train)</span><br></pre></td></tr></table></figure><p>👧🏻 ydata_profiling 和 pandas_profiling?</p><p>👧🏻 ProfileReport() 运行卡顿？</p><p>🤖 这可能与不同浏览器对于 Jupyter Notebook 的支持和性能优化有关。Jupyter Notebook 是一个基于 Web 的应用程序，它的性能和稳定性可能会受到不同浏览器的影响。</p><p>Safari 浏览器在运行 Jupyter Notebook 时可能会更加流畅，这可能是因为 Safari 浏览器具有更好的 Web 技术支持和性能优化。同时，Safari 浏览器在 Mac OS X 系统中是默认的浏览器，可能与操作系统之间的兼容性更好。</p><p>另一方面，Chrome 浏览器在运行 Jupyter Notebook 时可能会出现卡顿问题，这可能是因为 Chrome 浏览器具有更高的系统资源占用率，以及更多的插件和扩展功能，导致其在运行 Jupyter Notebook 时更容易出现性能问题。</p><p>如果你在使用 Chrome 浏览器时遇到了性能问题，你可以尝试优化浏览器的设置或减少浏览器插件和扩展的使用，或者使用其他浏览器来运行 Jupyter Notebook，例如 Safari、Firefox 等等。同时，你也可以考虑在本地使用 Jupyter Notebook，而不是在浏览器中运行 Jupyter Notebook，这可以提供更好的性能和稳定性。</p><h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><blockquote><p>数据预处理阶段，object类的特征会根据类别使用不同的编码方式处理（label encoding和One-hot encoding）</p></blockquote><h3 id="Label-encoding"><a href="#Label-encoding" class="headerlink" title="Label encoding"></a>Label encoding</h3><h3 id="One-hot-encoding"><a href="#One-hot-encoding" class="headerlink" title="One-hot encoding"></a>One-hot encoding</h3><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>[1] <a class="link"   href="https://zhuanlan.zhihu.com/p/109924294" >kaggle案例-Python实现房价预测-完整分析流程<i class="fas fa-external-link-alt"></i></a></p><p>[2] [Kaggle竞赛丨房价预测（House Prices）][<a class="link"   href="https://zhuanlan.zhihu.com/p/137076292]" >https://zhuanlan.zhihu.com/p/137076292]<i class="fas fa-external-link-alt"></i></a></p><p>[3] </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Notes&quot;&gt;&lt;a href=&quot;#Notes&quot; class=&quot;headerlink&quot; title=&quot;Notes&quot;&gt;&lt;/a&gt;Notes&lt;/h1&gt;&lt;h2 id=&quot;ProfileReport-1&quot;&gt;&lt;a href=&quot;#ProfileReport-1&quot; class=&quot;he</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://artemis727.github.io/tags/Python/"/>
    
    <category term="kaggle" scheme="https://artemis727.github.io/tags/kaggle/"/>
    
    <category term="data prediction" scheme="https://artemis727.github.io/tags/data-prediction/"/>
    
  </entry>
  
  <entry>
    <title>Kaggle|House Pricing|Comprehensive data exploration with python</title>
    <link href="https://artemis727.github.io/2023/02/23/HousePricing/"/>
    <id>https://artemis727.github.io/2023/02/23/HousePricing/</id>
    <published>2023-02-23T08:46:06.000Z</published>
    <updated>2023-02-28T08:53:28.603Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From kaggle: <a class="link"   href="https://www.kaggle.com/code/pmarcelino/comprehensive-data-exploration-with-python/notebook#5.-Getting-hard-core" >Comprehensive data exploration with python<i class="fas fa-external-link-alt"></i></a></p></blockquote><h1 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h1><h2 id="偏度-skewness-和峰度-kurtosis）"><a href="#偏度-skewness-和峰度-kurtosis）" class="headerlink" title="偏度(skewness)和峰度(kurtosis）"></a>偏度(skewness)和峰度(kurtosis）</h2><ul><li>skewness 衡量数据分布的非对称程度<ul><li>正态分布 skewness &#x3D; <strong>0</strong></li><li>右偏分布 skewness &gt; 0</li><li>左偏分布 skewness &lt; 0</li></ul></li></ul><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdn.net/20170405214815843?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGJtYXRyaXg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"                      alt="img"                ></p><ul><li><p>kurtosis 表示概率密度曲线的峰值高低（峰的尖度）</p><ul><li>正态分布（&#x3D; <strong>3</strong>）</li><li>厚尾（&gt; 3）最低</li><li>瘦尾（&lt; 3）最尖</li></ul><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdn.net/20170405215819279?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGJtYXRyaXg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"                      alt="img"                ></p></li></ul><h2 id="heaptmap怎么看相关性"><a href="#heaptmap怎么看相关性" class="headerlink" title="heaptmap怎么看相关性"></a><a class="link"   href="https://www.jianshu.com/p/bb3c55abafe4" >heaptmap怎么看相关性<i class="fas fa-external-link-alt"></i></a></h2><p>中间对角线永远是最相关的</p><h2 id="标准化"><a href="#标准化" class="headerlink" title="标准化"></a>标准化</h2><p><code>from sklearn.preprocessing import StandardScaler</code></p><p>🤖️ 当进行单个变量的标准化处理时，我们通常需要将其转换为一个二维数组。这是因为，对于单个变量来说，它只有一个维度，而进行标准化处理时需要在某个轴上进行运算，因此需要将其转换为一个具有多个维度的数组，以便进行运算。</p><p>可以使用 <code>print()</code> 函数输出 <code>area_2d</code> 的值，例如:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a 1D numpy array with 5 values</span></span><br><span class="line">area = np.array([<span class="number">1000</span>, <span class="number">1500</span>, <span class="number">1200</span>, <span class="number">1800</span>, <span class="number">2000</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># reshape the 1D array to a 2D array with 5 rows and 1 column</span></span><br><span class="line">area_2d = area.reshape(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(area_2d)</span><br></pre></td></tr></table></figure><p>输出结果应该是：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1000</span>]</span><br><span class="line"> [<span class="number">1500</span>]</span><br><span class="line"> [<span class="number">1200</span>]</span><br><span class="line"> [<span class="number">1800</span>]</span><br><span class="line"> [<span class="number">2000</span>]]</span><br></pre></td></tr></table></figure><p>可以看到，这个二维数组包含5行1列，每一行代表一个样本，每一列代表一个特征（在这个例子中，只有一个特征）。</p><h2 id="如何解释probplot的结果"><a href="#如何解释probplot的结果" class="headerlink" title="如何解释probplot的结果"></a><strong>如何解释probplot的结果</strong></h2><p>红色线条表示正态分布，蓝色线条表示样本数据，蓝色越接近红色参考线，说明越符合预期分布（正态分布）。这个图通常与<code>sns.distplot</code><a class="link"   href="https://www.cnblogs.com/cgmcoding/p/13384535.html" >直方图与连续概率密度估计图一起使用<i class="fas fa-external-link-alt"></i></a>。![image-20230224124152190](&#x2F;Users&#x2F;xiaoyu&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230224124152190.png)</p><h2 id="禁止日志信息"><a href="#禁止日志信息" class="headerlink" title="禁止日志信息"></a>禁止日志信息</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.axes._axes <span class="keyword">import</span> _log <span class="keyword">as</span> matplotlib_axes_logger</span><br><span class="line">matplotlib_axes_logger.setLevel(<span class="string">&#x27;ERROR&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这段代码的作用是禁止 <code>matplotlib</code> 输出一些不必要的日志信息，这些信息可能会干扰我们的结果。在这段代码中，我们将 <code>matplotlib.axes._axes</code> 模块的日志级别设置为 <code>ERROR</code>，这样 <code>matplotlib</code> 就不会输出该模块的日志信息了。具体来说，该代码会禁止 <code>matplotlib</code> 输出一些与对数轴有关的警告信息，这些信息通常在我们对数据进行可视化时出现。</p><h2 id="图像输出前空白"><a href="#图像输出前空白" class="headerlink" title="图像输出前空白"></a>图像输出前空白</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.axes._axes <span class="keyword">import</span> _log <span class="keyword">as</span> matplotlib_axes_logger</span><br><span class="line">matplotlib_axes_logger.setLevel(<span class="string">&#x27;ERROR&#x27;</span>)</span><br><span class="line">var = <span class="string">&#x27;GrLivArea&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis = <span class="number">1</span>)</span><br><span class="line">data.plot.scatter(x = var, y = <span class="string">&#x27;SalePrice&#x27;</span>, ylim = (<span class="number">0</span>,<span class="number">800000</span>))</span><br></pre></td></tr></table></figure><p>👧🏻 <strong>为什么我运行完这一段代码之后在图像输出之前会有一大段空白，并且显示<code>&lt;AxesSubplot:xlabel=&#39;GrLivArea&#39;ylabel=&#39;SalePrice&#39;&gt; No results.</code>呢？</strong></p><p>🤖️ 这段代码的输出包括两个部分：第一部分是图像，第二部分是输出的对象类型和空结果。输出对象类型的信息是因为 <code>data.plot.scatter()</code> 函数返回了一个 <code>AxesSubplot</code> 对象，而空结果是因为在代码的最后没有加上 <code>plt.show()</code> 函数。</p><p>因此，你可以将代码修改为如下形式来避免输出空结果：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.axes._axes <span class="keyword">import</span> _log <span class="keyword">as</span> matplotlib_axes_logger</span><br><span class="line">matplotlib_axes_logger.setLevel(<span class="string">&#x27;ERROR&#x27;</span>)</span><br><span class="line">var = <span class="string">&#x27;GrLivArea&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis = <span class="number">1</span>)</span><br><span class="line">ax = data.plot.scatter(x=var, y=<span class="string">&#x27;SalePrice&#x27;</span>, ylim=(<span class="number">0</span>, <span class="number">800000</span>))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>在这里，我们使用了 <code>plt.show()</code> 函数来显示图像，并且将 <code>data.plot.scatter()</code> 的输出赋值给了一个变量 <code>ax</code>，以便我们可以对图像进行更多的操作。</p><h2 id="corrcoef-转置"><a href="#corrcoef-转置" class="headerlink" title="corrcoef() + 转置"></a>corrcoef() + 转置</h2><p><code>cm = np.corrcoef(df_train[cols].values.T)</code></p><p>🤖️ 在Numpy中，<code>corrcoef</code>函数用于计算两个或多个变量之间的相关系数矩阵，该矩阵中的每个元素代表两个变量之间的相关性。如果有两个变量，那么corrcoef返回一个2x2的矩阵，其中第(i,j)个元素为第i个变量和第j个变量之间的相关系数。如果有多个变量，则返回一个n×n的矩阵，其中n为变量的个数。<code>corrcoef</code>函数的参数是需要计算相关系数的变量矩阵或数组，这些变量可以存储在Numpy数组或者Pandas的DataFrame或Series中。其中，参数<code>rowvar</code>默认为<code>True</code>，表示对每一行进行变量之间的相关性计算，参数<code>bias</code>默认为<code>False</code>，表示无偏估计。</p><p>示例代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line">corr_matrix = np.corrcoef(x)</span><br><span class="line"><span class="built_in">print</span>(corr_matrix)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]]</span><br></pre></td></tr></table></figure><p>上述代码中，x是一个3x3的矩阵，表示三个变量之间的相关系数矩阵。<code>corr_matrix</code>为<code>corrcoef</code>函数计算出的相关系数矩阵，由于每个变量与自身的相关性系数都为1，因此返回的结果为一个由1组成的矩阵。</p><p>🤖️ <code>df_train[cols]</code>表示在DataFrame对象<code>df_train</code>中挑选出相关性最高的10个变量对应的列，其中<code>cols</code>是一个包含这些列名的列表。<code>values</code>将这些列转换为一个二维数组，其每一行代表一个样本，每一列代表一个变量。<code>.T</code>表示对这个二维数组进行转置，即将行与列交换，变成每一行代表一个变量，每一列代表一个样本的形式。这样的结果是一个10行n列的二维数组，其中n是训练数据集中的样本数。</p><p>例如，如果有以下数据集：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#scatterplot</span></span><br><span class="line">sns.<span class="built_in">set</span>()</span><br><span class="line">cols = [<span class="string">&#x27;SalePrice&#x27;</span>, <span class="string">&#x27;OverallQual&#x27;</span>, <span class="string">&#x27;GrLivArea&#x27;</span>, <span class="string">&#x27;GarageCars&#x27;</span>, <span class="string">&#x27;TotalBsmtSF&#x27;</span>, <span class="string">&#x27;FullBath&#x27;</span>, <span class="string">&#x27;YearBuilt&#x27;</span>]</span><br><span class="line">sns.pairplot(df_train[cols], size = <span class="number">2.5</span>)</span><br><span class="line">plt.show();</span><br></pre></td></tr></table></figure><p>如果选择相关性最高的3个变量’A’, ‘B’, ‘C’，则<code>df_train[cols]</code>将返回一个包含3个列的DataFrame对象，即：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    A   B   C</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   <span class="number">4</span>   <span class="number">7</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   <span class="number">5</span>   <span class="number">8</span></span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   <span class="number">6</span>   <span class="number">9</span></span><br></pre></td></tr></table></figure><p>通过<code>.values</code>转换成Numpy数组，即为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]])</span><br></pre></td></tr></table></figure><p>在此基础上进行<code>.T</code>操作，将得到一个3行的二维数组，即：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">       [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br></pre></td></tr></table></figure><p>这个二维数组包含了3个变量的取值，每一行代表一个变量，每一列代表一个样本。这个数组可用于计算相关系数矩阵。</p><p>❗️ 🤖️不转置也可以生成相关系数矩阵和相关性热图，但是在数据集较大的情况下，由于相关系数矩阵是一个方阵，如果样本数很多，则相关系数矩阵的大小将非常大，计算量也会变得很大，因此运行速度会变慢。</p><p>&#x3D;&#x3D;而转置操作可以将变量数作为矩阵的行数，这样就避免了矩阵非常大的问题，提高了计算效率，所以在处理大型数据集时，进行转置操作是一种有效的优化方式，可以加快计算速度。同时，转置后的热图可以更直观地展示变量之间的相关性，更便于观察和分析。&#x3D;&#x3D;</p><h2 id="heaatmap-绘制"><a href="#heaatmap-绘制" class="headerlink" title="heaatmap 绘制"></a>heaatmap 绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#correlation matrix</span></span><br><span class="line">corrmat = df_train.corr()</span><br><span class="line">f, ax = plt.subplots(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">sns.heatmap(corrmat, vmax=<span class="number">.8</span>, square=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p>👧🏻 <em><strong>f和ax代表什么？</strong></em></p><p>🤖️ 在代码 <code>f, ax = plt.subplots(figsize=(12, 9))</code> 中，<code>f</code> 和 <code>ax</code> 是两个变量名，分别表示图形画布和图形轴对象。</p><p>具体来说，<code>plt.subplots()</code> 函数返回了一个包含画布和轴对象的元组 <code>(fig, ax)</code>，其中 <code>fig</code> 表示整个图形画布对象，而 <code>ax</code> 表示坐标轴对象。这个元组可以通过 Python 的解构赋值语法来拆分成单独的变量。</p><p>在这段代码中，通过设置 <code>figsize=(12, 9)</code> 参数，指定画布大小为 12x9，然后将返回的元组分配给变量 <code>f</code> 和 <code>ax</code>，以便在后续代码中使用它们来绘制热力图。</p><p>👧🏻 <em><strong>vmax &#x3D; .8是什么意思？</strong></em></p><p>🤖️ <code>vmax = .8</code> 是指在绘制热力图时，将数据映射到颜色图谱的最大值为 0.8。具体来说，这个参数用于设置热力图中颜色的亮度范围，最大值为 0.8 表示数据中最大值对应的颜色在颜色图谱中的亮度为 0.8，而其他值对应的颜色亮度将根据数据的分布情况自动调整。</p><p>通过设置 <code>vmax</code> 参数，可以在热力图中强调数据中的极端值和重要特征。如果不设置这个参数，颜色图谱的最大值将自动匹配数据中的最大值，这可能会导致颜色映射范围太大或太小，影响热力图的可读性。</p><h2 id="删除原来dataframe中的某些行（2种方式）"><a href="#删除原来dataframe中的某些行（2种方式）" class="headerlink" title="删除原来dataframe中的某些行（2种方式）"></a>删除原来dataframe中的某些行（2种方式）</h2><p>🤖️ 这种情况下直接drop，必须写inplace &#x3D; True才会修改原数据框：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top_2_index = df_train.sort_values(by=<span class="string">&#x27;GrLivArea&#x27;</span>, ascending=<span class="literal">False</span>)[:<span class="number">2</span>].index</span><br><span class="line">df_train.drop(top_2_index, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>🤖 也可以不使用 <code>inplace=True</code> 参数来修改 <code>df_train</code>，而是将 <code>drop()</code> 函数的返回值赋给一个新的 DataFrame：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_train = df_train.drop(df_train[df_train[<span class="string">&#x27;Id&#x27;</span>] == <span class="number">1299</span>].index)</span><br></pre></td></tr></table></figure><p>这样，将删除 Id 为 1299 的行之后的 DataFrame 赋值给了 <code>df_train</code>。需要注意的是，这种方法会返回一个修改后的副本，而不会直接修改原始 DataFrame。</p><p>👧🏻 <em><strong>修改后的副本和原来的dataframe不是都叫df_train吗？这样跟直接修改原来的dataframe有什么区别呢？</strong></em></p><p>🤖️ 确实，修改后的副本和原始的 DataFrame 都叫做 <code>df_train</code>，它们的名称是一样的，但它们的内存地址不同，它们是两个不同的对象。当你执行 <code>df_train = df_train.drop(df_train[df_train[&#39;Id&#39;] == 1299].index)</code> 时，<code>drop()</code> 函数返回一个新的 DataFrame 对象，然后将这个新的对象赋值给原始的 <code>df_train</code>，因此这个语句会改变原始的 <code>df_train</code>。而如果你在 <code>drop()</code> 函数中使用 <code>inplace=True</code> 参数，就会直接修改原始的 DataFrame，不会返回新的对象。这两种方法的最终效果是一样的，但是修改副本和直接修改原始 DataFrame 的方式可能对代码的可读性和维护性有一定的影响。</p><p>🤖 如果使用了赋值操作符 “&#x3D;”，将原始数据框赋值给副本，那么它们的变量名会相同，很容易让人混淆。为了避免混淆，可以在变量名上添加后缀或前缀以示区别，例如在副本的变量名中加入”_copy”或”_modified”等后缀。在实际应用中，需要根据具体情况决定如何命名变量以便更好地区分它们。</p><h2 id="四种assumptions"><a href="#四种assumptions" class="headerlink" title="四种assumptions"></a>四种assumptions</h2><p>最终得出结果要看因变量是否符合多变量分析中的假设。</p><ul><li><strong>Normality</strong> <strong>正态分布</strong>：用 <strong><u>histogram + normal probability plot</u></strong><ul><li>Remember that &#x3D;&#x3D;univariate normality doesn’t ensure multivariate normality&#x3D;&#x3D;.</li><li>In big samples (&gt;200 observations) normality is not such an issue. However, if we solve normality, we avoid a lot of other problems (e.g. heteroscedacity) so that’s the main reason why we are doing this analysis.<ul><li>异质性就是说研究的样本的重要属性上存在差异，比如人和人之间的消费习惯可能大相径庭，这样你记录1000个人10年的月消费数据，即便他们收入流和资产完全相同，消费流也可能截然不同。在统计性质上，这种不同表现为异方差。所以在计量模型上，横截面数据和面板数据经常出现，也可以说总会存在异质性问题。</li></ul></li></ul></li><li><strong>Homoscedasticity 同方差性</strong>：用 <strong><u>graphically</u></strong><ul><li>Homoscedasticity refers to the ‘assumption that dependent variable(s) exhibit equal levels of variance across the range of predictor variable(s)’ <a class="link"   href="https://amzn.to/2uC3j9p" >(Hair et al., 2013)<i class="fas fa-external-link-alt"></i></a>. </li><li>Homoscedasticity is desirable because we want the error term to be the same across all values of the independent variables.</li></ul></li><li><strong>Linearity 线性</strong><ul><li>The most common way to assess linearity is to &#x3D;&#x3D;examine scatter plots and search for linear patterns&#x3D;&#x3D;. If patterns are not linear, it would be worthwhile to explore data transformations.</li></ul></li><li><strong>Absence of correlated errors 无相关错误</strong><ul><li>Correlated errors, like the definition suggests, happen when one error is correlated to another. For instance, if one positive error makes a negative error systematically, it means that there’s a relationship between these variables. This occurs often in time series, where some patterns are &#x3D;&#x3D;time related&#x3D;&#x3D;. We’ll also not get into this. </li><li>However, &#x3D;&#x3D;if you detect something, try to add a variable that can explain the effect you’re getting&#x3D;&#x3D;. That’s the most common solution for correlated errors.</li></ul></li></ul><h2 id="pyplot和matplotlib的关系"><a href="#pyplot和matplotlib的关系" class="headerlink" title="pyplot和matplotlib的关系"></a>pyplot和matplotlib的关系</h2><p>🤖 <code>pyplot</code> 是 Matplotlib 库中的一个<strong>模块</strong>，用于<strong>创建图形和图表</strong>。在 Matplotlib 中，&#x3D;&#x3D;pyplot 模块被用作绘图工具的接口&#x3D;&#x3D;，提供了一些方便的函数和方法来创建和操作图形、轴、图例和注释等元素。</p><p>Matplotlib 是一个数据可视化库，提供了各种各样的绘图函数和工具，可以用于创建折线图、散点图、柱状图、饼图等各种类型的图表。而 pyplot 模块则是 Matplotlib 中最常用的绘图工具之一，它提供了很多方便的函数和方法，使得绘制各种类型的图表变得更加简单易用。因此，pyplot 可以被认为是 Matplotlib 库中最主要的一个模块。</p><h2 id="同方差性-Homoskedasticity-和异方差性-Heteroskedasticity"><a href="#同方差性-Homoskedasticity-和异方差性-Heteroskedasticity" class="headerlink" title="同方差性(Homoskedasticity)和异方差性(Heteroskedasticity)"></a>同方差性(Homoskedasticity)和异方差性(Heteroskedasticity)</h2><p>👦 写一个通俗的解释：比如说 $income&#x3D;b*education+e$ 这个计量模型,描述了教育水平与收入的关系，e为<a class="link"   href="https://www.zhihu.com/search?q=%E6%AE%8B%E5%B7%AE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >残差<i class="fas fa-external-link-alt"></i></a>，OLS等传统计量框架要求残差e不与任何变量相关,即: <a class="link"   href="https://www.zhihu.com/search?q=E(e%7Cx)=0&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >$E(e|x)&#x3D;0$<i class="fas fa-external-link-alt"></i></a>。</p><p>一种常见的残差e与x相关的方式是: 残差e的<a class="link"   href="https://www.zhihu.com/search?q=%E6%96%B9%E5%B7%AE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >方差<i class="fas fa-external-link-alt"></i></a>与变量x相关，这时候，残差e的方差会随着x变动而变动，因此方差是异质性的. 这被称为<a class="link"   href="https://www.zhihu.com/search?q=%E5%BC%82%E6%96%B9%E5%B7%AE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >异方差<i class="fas fa-external-link-alt"></i></a>问题。</p><p><em><strong>异方差问题会导致什么?</strong></em></p><p>拿上边那个教育-工资的例子来看，一般来说，受教育水平越高的人群收入变动越大，而教育水平较低的人群收入相差不会太大 (比如说，有<a class="link"   href="https://www.zhihu.com/search?q=%E6%9C%80%E4%BD%8E%E5%B7%A5%E8%B5%84%E6%B3%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >最低工资法<i class="fas fa-external-link-alt"></i></a>)，这时就出现异方差问题了, 因为e的方差会随着教育水平x的增大而增大。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-8ed91721ff3eb9a61872c9936c76ac29_1440w.webp?source=1940ef5c"                      alt="img"                ></p><p><strong>异方差存在的时候,大多数情况下,<strong>OLS估计出的方差会比实际的方差要小(当然, 小部分情况下估计值会比实际的大)，</strong>&#x3D;&#x3D;因此会过高地估计系数b的显著性&#x3D;&#x3D;</strong> (因为, 系数的t值&#x3D;系数&#x2F;<a class="link"   href="https://www.zhihu.com/search?q=%E6%A0%87%E5%87%86%E5%B7%AE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:398539763%7D" >标准差<i class="fas fa-external-link-alt"></i></a>)，**&#x3D;&#x3D;而不会影响系数估计值的大小&#x3D;&#x3D;**(考虑异方差影响系数大小的问题是近几年的焦点和难点，略过不提)。</p><p>👨 同方差性是我们对OLS回归残差的一个要求，即 &#x3D;&#x3D;$\epsilon \sim N(0, \sigma^2)$&#x3D;&#x3D; 。简单的说就是<strong>残差必须是随机的</strong>，这个分布是我们用来描述随机分布的一种方法 – 均值为0，方差为sigma方。</p><p>异方差则说明残差不满足这个正态分布。</p><p>概括而言，同方差说明回归的残差项是随机的，<strong>异方差说明残差项不随机，你的回归设置或者变量的选取有问题，需要修正</strong>。</p><h2 id="get-dummies"><a href="#get-dummies" class="headerlink" title="get_dummies()"></a>get_dummies()</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#convert categorical variable into dummy</span></span><br><span class="line">df_train = pd.get_dummies(df_train)</span><br></pre></td></tr></table></figure><p>🤖 这段代码使用了<code>get_dummies()</code>函数将数据框中的分类变量转换成了虚拟变量（dummy variable）。</p><p>虚拟变量是指将一个分类变量拆分成多个二元变量的过程。例如，如果有一个名为color的分类变量，其中包括红色、蓝色和绿色三个类别，那么将color转换成虚拟变量的过程就是创建三个新的二元变量，分别代表红色、蓝色和绿色，如果样本属于红色类别，则对应的红色虚拟变量值为1，其余两个虚拟变量的值为0，以此类推。</p><p><code>get_dummies()</code>函数会自动识别出所有的分类变量，并将它们转换成虚拟变量。它还有一些其他的参数，例如<code>drop_first</code>可以指定是否要删除每个变量的第一个虚拟变量，以避免多重共线性问题。</p><h1 id="Procedure"><a href="#Procedure" class="headerlink" title="Procedure"></a>Procedure</h1><p><strong>“理解问题 -&gt; 单变量分析 -&gt; 多变量分析 -&gt; 数据清洗 -&gt; 验证假设”</strong></p><p>1⃣️ <strong>Understand the problem</strong>. We’ll look at each variable and do a philosophical analysis about their meaning and importance for this problem.</p><ul><li>观察 columns</li></ul><p>2⃣️ <strong>Univariable study</strong>. We’ll just focus on the dependent variable (‘SalePrice’) and try to know a little bit more about it.</p><ul><li>使用 describe</li><li>使用直方图</li><li>分析偏度和峰度</li><li>使用散点图和箱图观察目标变量和其他变量之间的关系</li></ul><p>3⃣️ <strong>Multivariate study</strong>. We’ll try to understand how the dependent variable and independent variables relate.</p><ul><li>热图看所有变量之间的关系</li><li>热图看跟目标变量最相关的变量之间的关系</li><li>scatterplot 看目标变量及最相关的变量之间的关系</li></ul><p>4⃣️ <strong>Basic cleaning</strong>. We’ll clean the dataset and handle the <u>missing data</u>, outliers and categorical variables.</p><ul><li><p>缺失值</p><ul><li><p>看所有的变量中缺失值占比</p></li><li><p>剔除缺失变量：对因变量不重要的可以直接剔除整个变量；有替代变量的可以直接剔除整个变量；不剔除整个变量的可以仅将包含缺失值的单个样本剔除</p></li><li><p>检查无缺失值</p></li></ul></li><li><p>离群值</p><ul><li>[数据标准化][4]，设置一个阈值来判断离群值，输出过高&#x2F;过低的离群值</li><li>使用散点图观察某个自变量和因变量的关系，有了上一步得到的离群值，我们可以在散点图中一眼看出离群值在哪</li><li>保留遵循趋势的离群值，删除违背趋势的离群值</li></ul></li></ul><p>5⃣️ <strong>Test assumptions</strong>. We’ll check if our data meets the assumptions required by most multivariate techniques.</p><ul><li>正态分布<ul><li>看histogram：偏度和峰度</li><li>看常态机率图：数据分布应紧跟代表正态分布的对角线</li></ul></li><li>异方差性<ul><li>散点图可视化，一头紧凑一头分散，或中间紧凑两头分散，或中间分散两头紧凑</li></ul></li><li>虚拟化变量</li></ul><h2 id="Step1-Understand-our-data"><a href="#Step1-Understand-our-data" class="headerlink" title="Step1: Understand our data"></a>Step1: Understand our data</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#check the decoration</span></span><br><span class="line">df_train.columns</span><br></pre></td></tr></table></figure><blockquote><p> Look as each variable and try to understand their meaning and relvance to this problem. Although it’s time-comsuming, it gives us the flavour of our dataset.</p></blockquote><ol><li><p>We should focus 5 aspects. Create an Excel spreadsheet with following columns:</p><ul><li><strong>Variable</strong></li><li><strong>Type</strong> -&gt; ‘numerical’ or ‘categorical’</li><li><strong>Segment</strong> -&gt; Define the segments of all variables then identify them. (eg. building&#x2F; space &#x2F;location)</li><li><strong>Expectation</strong> -&gt; the variable infulence on the dependent variable. (high&#x2F; medium&#x2F; low)</li><li><strong>Conclusion</strong> -&gt; the importance of the variable </li><li><strong>Comments</strong> -&gt; any general comments that occured to us</li></ul></li><li><p>Expectation will give us ‘sixth sense’. In order to fill it, we should read the description of all the variables one by one, ask ourselves:</p><ul><li>Do we <strong>care</strong> this variable when we are buying a house?</li><li>How <strong>important</strong> would this variable is?</li><li>Is this information <strong>already</strong> decribed in any other variable?</li></ul></li><li><p>Focus the variables with <u>‘high’ expectation</u>. Generate some <strong>scatter plots</strong> between those variables and the dependant variable(SalePrice), filling the <strong>conclusion</strong> column which is the correction of our expectations.</p><blockquote><p>You may give up some of your expecting variables after vasualizing them.</p></blockquote></li></ol><h2 id="Step2-Univariable-analysis-‘SalePrice’"><a href="#Step2-Univariable-analysis-‘SalePrice’" class="headerlink" title="Step2: Univariable analysis: ‘SalePrice’"></a>Step2: Univariable analysis: ‘SalePrice’</h2><ul><li>describe()</li><li>histogram- normal distribution? (positive) skewness? peakedness?</li><li>[skewness and kurtosis][1]</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#data</span></span><br><span class="line"><span class="comment">#descriptive statistics summary</span></span><br><span class="line">df_train[<span class="string">&#x27;SalePrice&#x27;</span>].describe()</span><br><span class="line"></span><br><span class="line"><span class="comment">#graph</span></span><br><span class="line"><span class="comment">#histogram</span></span><br><span class="line">sns.distplot(df_train[<span class="string">&#x27;SalePrice&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">#data</span></span><br><span class="line"><span class="comment">#skewness and kurtosis</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Skewness: %f&quot;</span> % df_train[<span class="string">&#x27;SalePrice&#x27;</span>].skew())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Kurtosis: %f&quot;</span> % df_train[<span class="string">&#x27;SalePrice&#x27;</span>].kurt())</span><br></pre></td></tr></table></figure><h3 id="Relationship-with-numerical-variables"><a href="#Relationship-with-numerical-variables" class="headerlink" title="Relationship with numerical variables"></a>Relationship with numerical variables</h3><ul><li>scatter plots - if there is a linear (exponential) reaction</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#graph</span></span><br><span class="line"><span class="comment">#scatter plot grlivarea/saleprice</span></span><br><span class="line">var = <span class="string">&#x27;GrLivArea&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis=<span class="number">1</span>)</span><br><span class="line">data.plot.scatter(x=var, y=<span class="string">&#x27;SalePrice&#x27;</span>, ylim=(<span class="number">0</span>,<span class="number">800000</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#scatter plot totalbsmtsf/saleprice</span></span><br><span class="line">var = <span class="string">&#x27;TotalBsmtSF&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis=<span class="number">1</span>)</span><br><span class="line">data.plot.scatter(x=var, y=<span class="string">&#x27;SalePrice&#x27;</span>, ylim=(<span class="number">0</span>,<span class="number">800000</span>));</span><br></pre></td></tr></table></figure><h3 id="Relationship-with-categorical-fratures"><a href="#Relationship-with-categorical-fratures" class="headerlink" title="Relationship with categorical fratures"></a>Relationship with categorical fratures</h3><ul><li>box plots</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#box plot overallqual/saleprice</span></span><br><span class="line">var = <span class="string">&#x27;OverallQual&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis=<span class="number">1</span>)</span><br><span class="line">f, ax = plt.subplots(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">fig = sns.boxplot(x=var, y=<span class="string">&quot;SalePrice&quot;</span>, data=data)</span><br><span class="line">fig.axis(ymin=<span class="number">0</span>, ymax=<span class="number">800000</span>);</span><br><span class="line"></span><br><span class="line">var = <span class="string">&#x27;YearBuilt&#x27;</span></span><br><span class="line">data = pd.concat([df_train[<span class="string">&#x27;SalePrice&#x27;</span>], df_train[var]], axis=<span class="number">1</span>)</span><br><span class="line">f, ax = plt.subplots(figsize=(<span class="number">16</span>, <span class="number">8</span>))</span><br><span class="line">fig = sns.boxplot(x=var, y=<span class="string">&quot;SalePrice&quot;</span>, data=data)</span><br><span class="line">fig.axis(ymin=<span class="number">0</span>, ymax=<span class="number">800000</span>);</span><br><span class="line">plt.xticks(rotation=<span class="number">90</span>);</span><br></pre></td></tr></table></figure><p>🤖️ 这段代码使用了Python中的Pandas和Seaborn库，用于绘制房价数据集中整体质量（OverallQual）与房价（SalePrice）之间的箱型图。具体解释如下：</p><ul><li><code>var = &#39;OverallQual&#39;</code>：将变量名OverallQual赋值给变量var，表示要绘制的x轴变量是整体质量。</li><li><code>data = pd.concat([df_train[&#39;SalePrice&#39;], df_train[var]], axis=1)</code>：将训练数据集df_train中的SalePrice和OverallQual列拼接在一起，并存储在名为data的变量中。这里使用了Pandas库中的concat函数。</li><li><code>f, ax = plt.subplots(figsize=(8, 6))</code>：创建一个8x6英寸大小的绘图对象，并将其存储在名为f的变量中，将其轴对象存储在名为ax的变量中。这里使用了Matplotlib库。</li><li><code>fig = sns.boxplot(x=var, y=&quot;SalePrice&quot;, data=data)</code>：使用Seaborn库中的boxplot函数绘制箱型图，x轴为OverallQual，y轴为SalePrice，数据来源为data。将绘制结果存储在名为fig的变量中。</li><li><code>fig.axis(ymin=0, ymax=800000)</code>：将y轴的范围设定为0到800000，使得箱型图的纵坐标范围更加合适。这里使用了Matplotlib库中的axis函数。</li></ul><h2 id="Step3-Multivariable-analysis"><a href="#Step3-Multivariable-analysis" class="headerlink" title="Step3: Multivariable analysis"></a>Step3: Multivariable analysis</h2><ul><li>[heatmap][2] style - from a universla perspective</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#correlation matrix</span></span><br><span class="line">corrmat = df_train.corr()</span><br><span class="line">f, ax = plt.subplots(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">sns.heatmap(corrmat, vmax=<span class="number">.8</span>, square=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p>🤖️ 这段代码用于绘制数据集中的相关性矩阵的热力图。以下是每一行的解释：</p><ol><li><code>corrmat = df_train.corr()</code>: 计算数据集 <code>df_train</code> 中所有数值型变量之间的相关性矩阵，其中 <code>corr()</code> 是 pandas 库中计算相关系数的函数。</li><li><code>f, ax = plt.subplots(figsize=(12, 9))</code>: 创建一个大小为 12x9 的图形画布，并将其保存在变量 <code>f</code> 和 <code>ax</code> 中，用于绘制相关性矩阵的热力图。这里用到了 matplotlib 库中的 <code>subplots()</code> 函数。</li><li><code>sns.heatmap(corrmat, vmax=.8, square=True)</code>: 使用 seaborn 库中的 <code>heatmap()</code> 函数将相关性矩阵绘制成热力图，其中 <code>corrmat</code> 是相关性矩阵的数据，<code>vmax</code> 是热力图中颜色的最大值，<code>square</code> 参数用于指定热力图的形状是否为正方形。</li></ol><p>通过绘制相关性矩阵的热力图，可以更直观地了解数据集中各个变量之间的相关性，以便进行数据分析和建模。</p><p>&#x3D;&#x3D;❗️Notice if some of the independent variables have a similar color distribution in the heat map! This proves that they play a similar role in the overall model, and perhaps it is possible to keep only the one variable with the least missing values in the cleaning.&#x3D;&#x3D;</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#saleprice correlation matrix</span></span><br><span class="line">k = <span class="number">10</span> <span class="comment">#number of variables for heatmap</span></span><br><span class="line">cols = corrmat.nlargest(k, <span class="string">&#x27;SalePrice&#x27;</span>)[<span class="string">&#x27;SalePrice&#x27;</span>].index</span><br><span class="line">cm = np.corrcoef(df_train[cols].values.T)</span><br><span class="line">sns.<span class="built_in">set</span>(font_scale=<span class="number">1.25</span>)</span><br><span class="line">hm = sns.heatmap(cm, cbar=<span class="literal">True</span>, annot=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">&#x27;.2f&#x27;</span>, annot_kws=&#123;<span class="string">&#x27;size&#x27;</span>: <span class="number">10</span>&#125;, yticklabels=cols.values, xticklabels=cols.values)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>🤖️ 这段代码使用了Python中的Numpy、Pandas和Seaborn库，用于绘制房价数据集中各变量之间的相关系数热图。具体解释如下：</p><ul><li><code>k = 10</code>：将热图中展示的相关系数最高的10个变量挑选出来。</li><li><code>cols = corrmat.nlargest(k, &#39;SalePrice&#39;)[&#39;SalePrice&#39;].index</code>：从相关系数矩阵corrmat中选择SalePrice列与其他列的相关系数最高的10个变量，将其索引存储在cols变量中。</li><li><code>cm = np.corrcoef(df_train[cols].values.T)</code>：从训练数据集df_train中挑选出相关系数最高的10个变量，计算其相关系数矩阵，并将其存储在cm变量中。这里使用了Numpy库中的[corrcoef函数][3]。</li><li><code>sns.set(font_scale=1.25)</code>：设置Seaborn库中的字体大小。</li><li><code>hm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt=&#39;.2f&#39;, annot_kws=&#123;&#39;size&#39;: 10&#125;, yticklabels=cols.values, xticklabels=cols.values)</code>：绘制热图。其中，参数cm是一个相关系数矩阵，参数cbar表示是否显示颜色条，参数annot表示是否显示每个格子中的数值，参数square表示是否将每个格子设置为正方形，参数fmt表示显示数值时保留两位小数，参数annot_kws表示注释的参数，这里设置字体大小为10，yticklabels和xticklabels表示行和列的标签名，这里都为cols.values。将绘制结果存储在名为hm的变量中。</li><li><code>plt.show()</code>：显示绘制出的热图。这里使用了Matplotlib库中的show函数。</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.<span class="built_in">set</span>()</span><br><span class="line">cols = corrmat.nlargest(k, <span class="string">&#x27;SalePrice&#x27;</span>)[<span class="string">&#x27;SalePrice&#x27;</span>].index.tolist()</span><br><span class="line">sns.pairplot(df_train[cols], height = <span class="number">2.5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="Step4-Missing-data"><a href="#Step4-Missing-data" class="headerlink" title="Step4: Missing data"></a>Step4: Missing data</h2><h3 id="Missing-data"><a href="#Missing-data" class="headerlink" title="Missing data"></a>Missing data</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#missing data</span></span><br><span class="line">total = df_train.isnull().<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">False</span>)</span><br><span class="line">percent = (df_train.isnull().<span class="built_in">sum</span>()/df_train.isnull().count()).sort_values(ascending=<span class="literal">False</span>)</span><br><span class="line">missing_data = pd.concat([total, percent], axis=<span class="number">1</span>, keys=[<span class="string">&#x27;Total&#x27;</span>, <span class="string">&#x27;Percent&#x27;</span>])</span><br><span class="line">missing_data.head(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>🤖️</p><ol><li><code>df_train.isnull()</code>：判断数据集 <code>df_train</code> 中每个元素是否为缺失值，返回一个与 <code>df_train</code> 大小相同的布尔矩阵，内容是True&#x2F;False。</li><li><code>df_train.isnull().sum()</code>：将布尔矩阵中每列（变量）中的缺失值数量相加，得到每列缺失值的总数。</li><li><code>df_train.isnull().count()</code>：将布尔矩阵中每列（变量）中的元素（无论是否缺失）数量相加，得到每列元素的总数。</li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dealing with missing data</span></span><br><span class="line">df_train = df_train.drop((missing_data[missing_data[<span class="string">&#x27;Total&#x27;</span>] &gt; <span class="number">1</span>]).index, axis = <span class="number">1</span>)</span><br><span class="line">df_train = df_train.drop(df_train.loc[df_train[<span class="string">&#x27;Electrical&#x27;</span>].isnull()].index)</span><br><span class="line">df_train.isnull().<span class="built_in">sum</span>().<span class="built_in">max</span>() <span class="comment">#just checking that there&#x27;s no missing data missing...</span></span><br></pre></td></tr></table></figure><h3 id="Outliers"><a href="#Outliers" class="headerlink" title="Outliers"></a>Outliers</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#standardizing data</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">saleprice_scaled = StandardScaler().fit_transform(np.array(df_train[<span class="string">&#x27;SalePrice&#x27;</span>])[:, np.newaxis]);</span><br><span class="line">low_range = saleprice_scaled[saleprice_scaled[:, <span class="number">0</span>].argsort()][:<span class="number">10</span>]</span><br><span class="line">high_range = saleprice_scaled[saleprice_scaled[:, <span class="number">0</span>].argsort()][-<span class="number">10</span>:]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;outer range (low) of the distrubution:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(low_range)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n outer range (high) of the distribution:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(high_range)</span><br></pre></td></tr></table></figure><h2 id="Step5-Getting-hard-core"><a href="#Step5-Getting-hard-core" class="headerlink" title="Step5: Getting hard core"></a>Step5: Getting hard core</h2><h3 id="Normality-histogram-normal-probability-plot"><a href="#Normality-histogram-normal-probability-plot" class="headerlink" title="Normality: histogram + normal probability plot"></a>Normality: histogram + normal probability plot</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#histogram and normal probability plot</span></span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> norm</span><br><span class="line">sns.distplot(df_train[<span class="string">&#x27;SalePrice&#x27;</span>], kde = <span class="literal">True</span>,fit = norm);</span><br><span class="line">fig = plt.figure()</span><br><span class="line">res = stats.probplot(df_train[<span class="string">&#x27;SalePrice&#x27;</span>], plot = plt)</span><br></pre></td></tr></table></figure><blockquote><p> 🤖️ histplot不支持直接显示拟合的正态分布曲线。如果要同时显示正态分布曲线，可以使用displot。</p></blockquote><p>&#x3D;&#x3D;In case of positive skewness, log transformations usually works well.&#x3D;&#x3D;</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dist_probplot</span>(<span class="params">x</span>):</span><br><span class="line">    sns.distplot(df_train[x], fit = norm)</span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    res = stats.probplot(df_train[x], plot = plt)</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___59_0.png"                      alt="img"                ><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___59_1.png"                      alt="img"                ></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#applying log transformation</span></span><br><span class="line">df_train[<span class="string">&#x27;SalePrice&#x27;</span>] = np.log(df_train[<span class="string">&#x27;SalePrice&#x27;</span>])</span><br><span class="line"></span><br><span class="line">dist_probplot(<span class="string">&#x27;SalePrice&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___62_0.png"                      alt="img"                ><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___62_1.png"                      alt="img"                ></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist_probplot(<span class="string">&#x27;TotalBsmtSF&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___69_0.png"                      alt="img"                ><img                       lazyload                     alt="image"                     data-src="https://www.kaggleusercontent.com/kf/94433095/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..jj5WpOZsDvVZEWzi0y0ptw.qDI9P1mwEk5Orq36IwiMcohva_mLA0WDbHjgZNSUyQkJdyFwPcPNk7cSy2yRkMv8WYZFLBAAAqRVCl1eJispV4uFF2jSXWxrHKwKBUJVE6_mvgPdZRRi3zQkIUTKFTTOXQaifvAiMVNzEW6oJB2YtOQp9ZrE-uNwYDvHBoWCubjU7M_zlxhLhLTqeEhXe24uaBn2EJTUcOSQKeFau2IYvWvkkwlVaTcN5DAlGrDkX839qCVHIcI4sRKRSuqKSJ3N-Ofa1Ntu872AudxrCuu-NnQ2KwQjhY6OQNztztO-ed54QFcPP33aQOOrLTrn4bhLfNELAREWIi-pRB793shNer31_07A4ksQiGlD3HN_E8FDV-FODeRdGPoy4MZzLQD8Pw_DF3XXUoMxGJhbBdQSZWTRpLq5ChapQsU26qY3VKYre4y0noPt3FggpAM3sViwZGqIFVRZ-xx74jkWPlgR2R0hQo0hwxg4X8Ne_BxjV3GLPee9fpebFTJ-jmGE2iJ6r4ZKT1AHkS5rD-48qkXip0SC7kzlTCzNIqn-GcGv8b4CPAPukmzcG4lVBLrCrSqxKVbo5_1ZO0mHFm3pwhUDaA9vpkRXW-7DodquON0ztYwIVCOfy7yzL2BeqTQZaTHVYjlrY-mJBytAMz8kfWKLZpfH-Wczqo08Rc33DWwhH5YXXzaNIbxanOOGHE9ojJMe.Q-jSGE6rz_nIR3vbBw4sbg/__results___files/__results___69_1.png"                      alt="img"                ></p><blockquote><p>Ok, now we are dealing with the big boss. What do we have here?</p><ul><li>Something that, in general, presents skewness.</li><li>A significant number of observations with value zero (houses without basement).</li><li>A big problem because the value zero doesn’t allow us to do log transformations.</li></ul></blockquote><p>处理方法：将非零值做对数转换，零值还是零，但是若执行：</p><p>![image-20230228093921098](&#x2F;Users&#x2F;xiaoyu&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230228093921098.png)</p><p>会出现以上报错。</p><p>🤖️ 出现<code>RuntimeWarning: divide by zero encountered in log</code>的原因是在对数变换时遇到了 0，因为 log(0) 是没有定义的，所以会产生警告。可以将值为 0 的观测在变换前用一个极小的数代替，比如可以用 1e-6 代替 0。</p><p><strong>👧🏻 但是这段代码不是说只有不等于0时才会进行对数变换吗？为什么还会遇到log(0)的情况呢？</strong></p><p>🤖️ 这是由于浮点数的精度问题导致的。可能有一些值在处理之后非常接近0，但实际上并不等于0，因此在进行np.log()函数计算时，会返回一个非常大的负无穷值，比如-log(1e-15)&#x3D;-34.538776394910684。这也就是报错中提到的“divide by zero encountered in log”错误，其实并非是真正意义上的除零操作，而是一个数学上的约定。</p><p>🤖️ 为了解决这个问题，一种常见的方法是在对数变换前，先对数据中的所有非零值加上一个极小的常数，比如1e-8，避免出现log(0)的情况，同时由于这个常数值非常小，对整体数据的统计特征影响也非常小。因此可以将代码修改为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">epsilon = <span class="number">1e-8</span>  <span class="comment"># 定义一个极小值</span></span><br><span class="line">df_train.loc[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>, <span class="string">&#x27;TotalBsmtSF&#x27;</span>] = np.log(df_train.loc[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>, <span class="string">&#x27;TotalBsmtSF&#x27;</span>] + epsilon)</span><br></pre></td></tr></table></figure><p>👧🏻 <em><strong>所以其实应该是这样：</strong></em></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#transform data</span></span><br><span class="line">df_train.loc[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>, <span class="string">&#x27;TotalBsmtSF&#x27;</span>] = np.log(df_train.loc[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>, <span class="string">&#x27;TotalBsmtSF&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#histogram and normal probability plot</span></span><br><span class="line">sns.distplot(df_train[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>][<span class="string">&#x27;TotalBsmtSF&#x27;</span>], fit = norm)</span><br><span class="line">fig = plt.figure()</span><br><span class="line">res = stats.probplot(df_train[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>] &gt; <span class="number">0</span>][<span class="string">&#x27;TotalBsmtSF&#x27;</span>], plot = plt)</span><br></pre></td></tr></table></figure><p><strong>👧🏻 plot &#x3D; plt是什么意思？</strong></p><p>🤖 <code>plot=plt</code>是将&#x3D;&#x3D;Matplotlib库的当前<code>pyplot</code>对象&#x3D;&#x3D;传递给<code>probplot</code>函数中的参数<code>plot</code>。这样做是为了让<code>probplot</code>函数能够在当前的Matplotlib图形对象中绘制概率图。通常，我们在创建一个新的Matplotlib图形对象时会使用<code>plt.figure()</code>函数，并为其指定一个新的名称或编号。但是，如果我们已经有了一个现有的图形对象，我们可以将其传递给<code>plot</code>参数，使得<code>probplot</code>函数在该对象中绘制图形。</p><p><strong>👧🏻 我应该怎么获取Matplotlib库的当前pyplot对象？</strong></p><p>🤖 你可以使用<code>matplotlib.pyplot.gcf()</code>函数来获取当前图形对象。<code>gcf()</code>代表“get current figure”，它将返回最近创建的Figure对象（如果没有现有Figure，则会创建一个新的）。</p><h3 id="Homoscedasticity-graphically"><a href="#Homoscedasticity-graphically" class="headerlink" title="Homoscedasticity: graphically"></a>Homoscedasticity: graphically</h3><blockquote><p>Departures from an equal dispersion are shown by such shapes as <strong>&#x3D;&#x3D;cones (small dispersion at one side of the graph, large dispersion at the opposite side)&#x3D;&#x3D;</strong> or &#x3D;&#x3D;<strong>diamonds (a large number of points at the center of the distribution)</strong>&#x3D;&#x3D;.</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#scatter plot</span></span><br><span class="line">plt.scatter(df_train[<span class="string">&#x27;GrLivArea&#x27;</span>], df_train[<span class="string">&#x27;SalePrice&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#scatter plot</span></span><br><span class="line">plt.scatter(df_train[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>]&gt;<span class="number">0</span>][<span class="string">&#x27;TotalBsmtSF&#x27;</span>], df_train[df_train[<span class="string">&#x27;TotalBsmtSF&#x27;</span>]&gt;<span class="number">0</span>][<span class="string">&#x27;SalePrice&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="Dummy-variables"><a href="#Dummy-variables" class="headerlink" title="Dummy variables"></a>Dummy variables</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#convert categorical variable into dummy</span></span><br><span class="line">df_train = pd.get_dummies(df_train)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;From kaggle: &lt;a class=&quot;link&quot;   href=&quot;https://www.kaggle.com/code/pmarcelino/comprehensive-data-exploration-with-python/noteb</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://artemis727.github.io/tags/Python/"/>
    
    <category term="kaggle" scheme="https://artemis727.github.io/tags/kaggle/"/>
    
    <category term="data exploration" scheme="https://artemis727.github.io/tags/data-exploration/"/>
    
  </entry>
  
  <entry>
    <title>Data Science R Basic</title>
    <link href="https://artemis727.github.io/2023/02/09/Data-Science-R-Basic/"/>
    <id>https://artemis727.github.io/2023/02/09/Data-Science-R-Basic/</id>
    <published>2023-02-09T02:14:17.000Z</published>
    <updated>2023-03-07T09:43:31.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Words-amp-Expressions"><a href="#Words-amp-Expressions" class="headerlink" title="Words &amp; Expressions"></a>Words &amp; Expressions</h1><ul><li><p>in a <strong>nested</strong> way 嵌套</p></li><li><p><strong>concatenate</strong> 连接 c() -&gt; all items in ‘()’ to a <strong>vector</strong></p></li></ul><h1 id="Why-use-‘-’-instead-of-‘-’-to-access-variables"><a href="#Why-use-‘-’-instead-of-‘-’-to-access-variables" class="headerlink" title="Why use ‘[[’ instead of ‘[’ to access variables?"></a>Why use ‘[[’ instead of ‘[’ to access variables?</h1><p>We extract the population like this:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p <span class="operator">&lt;-</span> murders<span class="operator">$</span>population</span><br></pre></td></tr></table></figure><p>If you instead try to access a column with just one bracket,</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">murders<span class="punctuation">[</span><span class="string">&quot;population&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><strong>R returns a subset of the original data frame containing just this column. This new object will be of class <code>data.frame</code> rather than a vector.</strong> To access the column itself you need to use either the <code>$</code> accessor or the double square brackets <code>[[</code>:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">murders<span class="punctuation">[[</span><span class="string">&quot;population&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h1 id="R-sorting-functions"><a href="#R-sorting-functions" class="headerlink" title="R- sorting functions"></a>R- sorting functions</h1><ul><li><p>sort()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort()排序，排序结果不可逆转</span></span><br><span class="line"><span class="comment"># 默认是升序</span></span><br><span class="line"><span class="comment"># decreasing为TRUE，表示降序</span></span><br><span class="line"><span class="comment"># decreasing为FALSE，表示升序</span></span><br><span class="line"><span class="comment">#排序后并不会修改原对象的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#示例如下：</span></span><br><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">22</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">,</span><span class="number">13</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="comment">#sort()默认为从小到大（升序）排序，等同于decreasing=FALSE</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">22</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>a<span class="punctuation">,</span>decreasing <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">22</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="comment">#decreasing=TRUE,为从大到小（降序）排序</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>a<span class="punctuation">,</span>decreasing <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">22</span> <span class="number">16</span> <span class="number">13</span> <span class="number">10</span>  <span class="number">9</span>  <span class="number">7</span>  <span class="number">6</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#排序并不会修改原对象的值，a仍为原来未排序的a</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">9</span> <span class="number">16</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">4</span> <span class="number">22</span>  <span class="number">5</span> <span class="number">10</span> <span class="number">13</span></span><br></pre></td></tr></table></figure></li><li><p>rank()</p><p>用法：rank(a)<br>函数说明：指出当前向量中各元素大小的排名，默认升序<br>函数还有其他的参数：rank(x &#x3D; data, na.last &#x3D; TRUE)<br>x 表示待排序的向量<br>na.last 表示是否排序时是否将NA放在最后面，默认忽略NA</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">22</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">,</span><span class="number">13</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> order<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">6</span>  <span class="number">8</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">9</span> <span class="number">10</span>  <span class="number">3</span>  <span class="number">7</span></span><br><span class="line"><span class="comment">#说明：在向量a中，3是第一小的数，位置下标为1；4是第二小的数，位置下标为6；最大的数是22，位置下标为7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#a[order(a)] 等同于sort(a)</span></span><br><span class="line"><span class="operator">&gt;</span> a<span class="punctuation">[</span>order<span class="punctuation">(</span>a<span class="punctuation">)</span><span class="punctuation">]</span> </span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">22</span></span><br></pre></td></tr></table></figure></li><li><p>order()</p><p>说明：返回的值表示位置，默认是升序，依次对应的是向量的最小值、次小值、第三小值…最大值</p><p>用法：order(a), a为要排序的向量<br>order(… &#x3D; data, na.last &#x3D; TRUE,decreasing &#x3D; TRUE)<br>… 表示待排序向量<br>na.last 表示时候将NA值放在最后面（默认排序忽略NA）<br>decreasing 表示是否按照降序排序，默认升序。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">9</span> <span class="number">16</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">4</span> <span class="number">22</span>  <span class="number">5</span> <span class="number">10</span> <span class="number">13</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">22</span></span><br><span class="line"><span class="operator">&gt;</span> rank<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">6</span>  <span class="number">9</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">2</span> <span class="number">10</span>  <span class="number">3</span>  <span class="number">7</span>  <span class="number">8</span></span><br><span class="line"> <span class="comment">#说明：向量a中的第一个数为3，是最小的，故排名为1；第二个数是9，是第六小的数，排名为6</span></span><br></pre></td></tr></table></figure></li><li><p>比较</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> a <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span><span class="number">9</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">,</span><span class="number">7</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">22</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">10</span><span class="punctuation">,</span><span class="number">13</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">9</span> <span class="number">16</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">4</span> <span class="number">22</span>  <span class="number">5</span> <span class="number">10</span> <span class="number">13</span></span><br><span class="line"><span class="operator">&gt;</span> sort<span class="punctuation">(</span>a<span class="punctuation">)</span> <span class="comment">#将a**从小到大排序并列出**</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">13</span> <span class="number">16</span> <span class="number">22</span></span><br><span class="line"><span class="operator">&gt;</span> order<span class="punctuation">(</span>a<span class="punctuation">)</span> <span class="comment">#返回从小到大的数的**位置下标**，a[order(a)]=sort(a)</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">6</span>  <span class="number">8</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">9</span> <span class="number">10</span>  <span class="number">3</span>  <span class="number">7</span></span><br><span class="line"><span class="operator">&gt;</span> rank<span class="punctuation">(</span>a<span class="punctuation">)</span> <span class="comment">#返回a中**每个数的排名（从小到大）**</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">6</span>  <span class="number">9</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">2</span> <span class="number">10</span>  <span class="number">3</span>  <span class="number">7</span>  <span class="number">8</span></span><br><span class="line"><span class="operator">&gt;</span> a</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">3</span>  <span class="number">9</span> <span class="number">16</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">4</span> <span class="number">22</span>  <span class="number">5</span> <span class="number">10</span> <span class="number">13</span></span><br><span class="line"><span class="comment">#注意：经过sort()、order()、rank()排序后，a不改变</span></span><br></pre></td></tr></table></figure><p>order和rank的区别在于一个返回的是index，一个是rank，index不一定是数字。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Words-amp-Expressions&quot;&gt;&lt;a href=&quot;#Words-amp-Expressions&quot; class=&quot;headerlink&quot; title=&quot;Words &amp;amp; Expressions&quot;&gt;&lt;/a&gt;Words &amp;amp; Expressio</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="R" scheme="https://artemis727.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>How is Hadley Wickham able to contribute so much to R, particularly in the form of packages?</title>
    <link href="https://artemis727.github.io/2023/02/08/How-is-Hadley-Wickham-able-to-contribute-so-much-to-R-particularly-in-the-form-of-packages/"/>
    <id>https://artemis727.github.io/2023/02/08/How-is-Hadley-Wickham-able-to-contribute-so-much-to-R-particularly-in-the-form-of-packages/</id>
    <published>2023-02-08T05:35:41.000Z</published>
    <updated>2023-02-11T13:57:48.730Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.quora.com/How-is-Hadley-Wickham-able-to-contribute-so-much-to-R-particularly-in-the-form-of-packages"><strong>How is Hadley Wickham able to contribute so much to R, particularly in the form of packages?</strong></a></p><p><strong>David Robinson:</strong></p><p>From following Hadley’s work, it seems to me that along with being an exceptional programmer and data scientist, and having the advantage of developing R packages as part of his job, Hadley follows a few strategies that serve as useful wisdom for all developers:</p><ul><li><em>He writes packages that make himself more productive</em>. Three of Hadley’s popular packages, devtools, Roxygen2, and testthat, make it very easy to (respectively) develop, document and test R packages. He recognized that the time spent to create and maintain those was small compared to the time it would save him (and others!) in developing future packages. This extends beyond those package development tools: packages like stringr and lubridate are designed to make working with strings and dates easier. This also extends beyond his own packages: he takes advantage of packages like Rcpp (<a class="link"   href="http://www.rcpp.org/" >http://www.rcpp.org/<i class="fas fa-external-link-alt"></i></a>) that make writing R C++ extensions fast and intuitive.</li><li><em>He takes full advantage of social coding.</em> He’s a prolific GitHub user (<a class="link"   href="https://github.com/hadley?tab=repositories" >hadley (Hadley Wickham)<i class="fas fa-external-link-alt"></i></a>), which makes it efficient to receive and respond to bug reports and feature requests, and to collaborate with others (for instance, with Romain Francois on dplyr).</li><li><em>He works to simplify his packages rather than complicate them.</em> In his announcement of the tidyr package (<a class="link"   href="http://blog.rstudio.org/2014/07/22/introducing-tidyr/" >Introducing tidyr<i class="fas fa-external-link-alt"></i></a>) he notes that “Just as reshape2 did less than reshape, tidyr does less than reshape2.” When packages are simpler (doing a few things well instead of hundreds of things poorly), they’re easier to develop and maintain.</li></ul><p>**Hadley Wickham: **</p><p>I like David’s answer, but here are a few more thoughts from a personal perspective ;)</p><ul><li><strong>Writing</strong>. I have worked really hard to build a solid writing habit - &#x3D;&#x3D;I try and write for 60-90 minutes every morning. It’s the first thing I do after I get out of bed.&#x3D;&#x3D; I think writing is really helpful to me for a few reasons. First, &#x3D;&#x3D;I often use my writing as a reference&#x3D;&#x3D; - I don’t program in C++ every day, so I’m constantly referring to @<a class="link"   href="http://adv-r.had.co.nz/Rcpp.html" >Rcpp<i class="fas fa-external-link-alt"></i></a> every time I do. Writing also makes me aware of gaps in my knowledge and my tools, and filling in those gaps tends to make me more efficient at tackling new problems.</li><li><strong>Reading</strong>. I read a <em>lot</em>. I follow about 300 blogs, and keep a pretty close eye on the R tags on Twitter and Stack Overflow. I don’t read most things deeply - &#x3D;&#x3D;the majority of content I only briefly skim. But this wide exposure helps me keep up with changes in technology, interesting new programming languages, and what others are doing with data.&#x3D;&#x3D; It’s also helpful that if when you’re tackling a new problem you can recognise the basic name - then googling for it will suggest possible solutions. If you don’t know the name of a problem, it’s very hard to research it.</li><li><strong>Chunking</strong>. Context-switching is expensive, so if I worked on many packages at the same time, I’d never get anything done. Instead, at any point in time, most of my packages are lying fallow, steadily accumulating issues and ideas for new feature. Once a critical mass has accumulated, I’ll spend a couple of days on the package.</li></ul><p>Finally, it’s hard to over-emphasise the impact that working full-time on R makes. Since I’ve left Rice, I now spend well over 90% of my work time thinking about and programming in R. This has a compounding effect because as I built better tools (cognitive and computational) it becomes even easier to build new tools. I can create a new package in seconds, and I have many techniques on-hand (in-brain) for solving new problems.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.quora.com/How-is-Hadley-Wickham-able-to-contribute-so-much-to-R-particularly-in-the-form-of-packages&quot;&gt;&lt;strong&gt;How is</summary>
      
    
    
    
    <category term="Quora" scheme="https://artemis727.github.io/categories/Quora/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL-刷题笔记</title>
    <link href="https://artemis727.github.io/2023/02/07/SQL%20%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    <id>https://artemis727.github.io/2023/02/07/SQL%20%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-07T07:39:01.649Z</published>
    <updated>2023-03-06T12:44:35.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-查询列"><a href="#1-查询列" class="headerlink" title="1. 查询列"></a>1. 查询列</h1><p>列查询、多列查询、限制返回数量、in、like、聚合函数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有列</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> user_profile</span><br><span class="line"></span><br><span class="line"># 查询多列</span><br><span class="line"><span class="keyword">SELECT</span> device_id, gender, age, university <span class="keyword">FROM</span> user_profile</span><br><span class="line"></span><br><span class="line"># 查询结果去重</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> university <span class="keyword">FROM</span> user_profile</span><br><span class="line"></span><br><span class="line"># 查询结果限制返回行数</span><br><span class="line"><span class="keyword">SELECT</span> device_id <span class="keyword">FROM</span> user_profile LIMIT <span class="number">2</span></span><br><span class="line"></span><br><span class="line"># 查询后重命名</span><br><span class="line"><span class="keyword">SELECT</span> device_id <span class="keyword">FROM</span> user_profile <span class="keyword">AS</span> user_infos_example LIMIT <span class="number">2</span></span><br><span class="line"></span><br><span class="line"># 否定查询</span><br><span class="line"><span class="keyword">select</span> device_id, gender, age, university</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> university <span class="operator">=</span> <span class="string">&#x27;复旦大学&#x27;</span></span><br><span class="line"></span><br><span class="line"># 过滤空值</span><br><span class="line"><span class="keyword">select</span> device_id, gender, age, university</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> age <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">in</span></span><br><span class="line"><span class="keyword">select</span> device_id, gender, age, university, gpa </span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> university <span class="keyword">in</span> (<span class="string">&#x27;北京大学&#x27;</span>, <span class="string">&#x27;复旦大学&#x27;</span>, <span class="string">&#x27;山东大学&#x27;</span>)</span><br><span class="line"></span><br><span class="line"># <span class="keyword">like</span></span><br><span class="line"><span class="keyword">select</span> device_id, age, university</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> university <span class="keyword">like</span> <span class="string">&#x27;%北京%&#x27;</span></span><br><span class="line"></span><br><span class="line"># <span class="built_in">max</span>() <span class="built_in">min</span>()</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(gpa)</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> university <span class="operator">=</span> <span class="string">&#x27;复旦大学&#x27;</span></span><br><span class="line"></span><br><span class="line"># <span class="built_in">avg</span>() <span class="built_in">count</span>()</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(gender) <span class="keyword">as</span> male_num, <span class="built_in">avg</span>(gpa) <span class="keyword">as</span> avg_gpa</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> gender <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">having</span></span><br><span class="line"><span class="keyword">select</span> university, <span class="built_in">avg</span>(question_cnt) avg_question_cnt, <span class="built_in">avg</span>(answer_cnt) avg_answer_cnt</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> university</span><br><span class="line"><span class="keyword">having</span> avg_question_cnt <span class="operator">&lt;</span> <span class="number">5</span> <span class="keyword">or</span> avg_answer_cnt <span class="operator">&lt;</span> <span class="number">20</span></span><br><span class="line"># 生成新字段后不能用<span class="keyword">where</span>要用<span class="keyword">having</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-涉及到多个表的情况"><a href="#2-涉及到多个表的情况" class="headerlink" title="2. 涉及到多个表的情况"></a>2. 涉及到多个表的情况</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> university, (<span class="built_in">count</span>(q.question_id)<span class="operator">/</span><span class="built_in">count</span>(<span class="keyword">distinct</span>(q.device_id))) avg_answer_cnt</span><br><span class="line"><span class="keyword">from</span> user_profile u</span><br><span class="line"><span class="keyword">join</span> question_practice_detail q</span><br><span class="line"><span class="keyword">on</span> u.device_id <span class="operator">=</span> q.device_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> university</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> university <span class="keyword">asc</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> u.university, q.difficult_level, <span class="built_in">count</span>(qp.question_id)<span class="operator">/</span><span class="built_in">count</span>(<span class="keyword">distinct</span> qp.device_id) avg_answer_cnt</span><br><span class="line"><span class="keyword">from</span> user_profile u, question_practice_detail qp, question_detail q</span><br><span class="line"><span class="keyword">where</span> u.university <span class="operator">=</span> <span class="string">&#x27;山东大学&#x27;</span> <span class="keyword">and</span> u.device_id <span class="operator">=</span> qp.device_id <span class="keyword">and</span> q.question_id <span class="operator">=</span> qp.question_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> u.university, difficult_level</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> avg_answer_cnt</span><br></pre></td></tr></table></figure><h2 id="SQL25-查找山东大学或者性别为男生的信息"><a href="#SQL25-查找山东大学或者性别为男生的信息" class="headerlink" title="SQL25 查找山东大学或者性别为男生的信息"></a><strong>SQL25</strong> 查找山东大学或者性别为男生的信息</h2><p>题目：现在运营想要分别查看学校为山东大学或者性别为男性的用户的device_id、gender、age和gpa数据，请取出相应结果，结果不去重。</p><p>示例：user_profile</p><table><thead><tr><th>id</th><th>device_id</th><th>gender</th><th>age</th><th>university</th><th>gpa</th><th>active_days_within_30</th><th>question_cnt</th><th>answer_cnt</th></tr></thead><tbody><tr><td>1</td><td>2138</td><td>male</td><td>21</td><td>北京大学</td><td>3.4</td><td>7</td><td>2</td><td>12</td></tr><tr><td>2</td><td>3214</td><td>male</td><td></td><td>复旦大学</td><td>4</td><td>15</td><td>5</td><td>25</td></tr><tr><td>3</td><td>6543</td><td>female</td><td>20</td><td>北京大学</td><td>3.2</td><td>12</td><td>3</td><td>30</td></tr><tr><td>4</td><td>2315</td><td>female</td><td>23</td><td>浙江大学</td><td>3.6</td><td>5</td><td>1</td><td>2</td></tr><tr><td>5</td><td>5432</td><td>male</td><td>25</td><td>山东大学</td><td>3.8</td><td>20</td><td>15</td><td>70</td></tr><tr><td>6</td><td>2131</td><td>male</td><td>28</td><td>山东大学</td><td>3.3</td><td>15</td><td>7</td><td>13</td></tr><tr><td>7</td><td>4321</td><td>male</td><td>26</td><td>复旦大学</td><td>3.6</td><td>9</td><td>6</td><td>52</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果（注意输出的顺序，先输出学校为山东大学再输出性别为男生的信息）：</p><table><thead><tr><th>device_id</th><th>gender</th><th>age</th><th>gpa</th></tr></thead><tbody><tr><td>5432</td><td>male</td><td>25</td><td>3.8</td></tr><tr><td>2131</td><td>male</td><td>28</td><td>3.3</td></tr><tr><td>2138</td><td>male</td><td>21</td><td>3.4</td></tr><tr><td>3214</td><td>male</td><td>None</td><td>4</td></tr><tr><td>5432</td><td>male</td><td>25</td><td>3.8</td></tr><tr><td>2131</td><td>male</td><td>28</td><td>3.3</td></tr><tr><td>4321</td><td>male</td><td>28</td><td>3.6</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> device_id, gender, age, gpa</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> university <span class="operator">=</span> <span class="string">&#x27;山东大学&#x27;</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> device_id, gender, age, gpa</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br><span class="line"><span class="keyword">where</span> gender <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span></span><br></pre></td></tr></table></figure><p><code>union</code>可以，但是结果是去重的，所以要用<code>union all</code>。</p><p><code>where gender = ‘male’ or university = ‘山东大学’</code>也不行，结果也是去重的。</p><h1 id="3-if"><a href="#3-if" class="headerlink" title="3. if"></a>3. if</h1><h2 id="SQL26-计算25岁以上和以下的用户数量"><a href="#SQL26-计算25岁以上和以下的用户数量" class="headerlink" title="SQL26 计算25岁以上和以下的用户数量"></a>SQL26 <strong>计算25岁以上和以下的用户数量</strong></h2><p>题目：现在运营想要将用户划分为25岁以下和25岁及以上两个年龄段，分别查看这两个年龄段用户数量</p><p><strong>本题注意：age为null 也记为 25岁以下</strong></p><p>示例：user_profile</p><table><thead><tr><th>id</th><th>device_id</th><th>gender</th><th>age</th><th>university</th><th>gpa</th><th>active_days_within_30</th><th>question_cnt</th><th>answer_cnt</th></tr></thead><tbody><tr><td>1</td><td>2138</td><td>male</td><td>21</td><td>北京大学</td><td>3.4</td><td>7</td><td>2</td><td>12</td></tr><tr><td>2</td><td>3214</td><td>male</td><td></td><td>复旦大学</td><td>4</td><td>15</td><td>5</td><td>25</td></tr><tr><td>3</td><td>6543</td><td>female</td><td>20</td><td>北京大学</td><td>3.2</td><td>12</td><td>3</td><td>30</td></tr><tr><td>4</td><td>2315</td><td>female</td><td>23</td><td>浙江大学</td><td>3.6</td><td>5</td><td>1</td><td>2</td></tr><tr><td>5</td><td>5432</td><td>male</td><td>25</td><td>山东大学</td><td>3.8</td><td>20</td><td>15</td><td>70</td></tr><tr><td>6</td><td>2131</td><td>male</td><td>28</td><td>山东大学</td><td>3.3</td><td>15</td><td>7</td><td>13</td></tr><tr><td>7</td><td>4321</td><td>male</td><td>26</td><td>复旦大学</td><td>3.6</td><td>9</td><td>6</td><td>52</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果：</p><table><thead><tr><th>age_cut</th><th>number</th></tr></thead><tbody><tr><td>25岁以下</td><td>4</td></tr><tr><td>25岁及以上</td><td>3</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> age_cut, <span class="built_in">count</span>(device_id) number</span><br><span class="line"><span class="keyword">from</span>(<span class="keyword">select</span> if(age <span class="operator">&gt;=</span> <span class="number">25</span>, <span class="string">&#x27;25岁及以上&#x27;</span>, <span class="string">&#x27;25岁以下&#x27;</span>) <span class="keyword">as</span> age_cut, device_id <span class="keyword">from</span> user_profile) t1</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> age_cut</span><br></pre></td></tr></table></figure><h1 id="4-case"><a href="#4-case" class="headerlink" title="4. case"></a>4. case</h1><h2 id="SQL27-查看不同年龄段的用户明细"><a href="#SQL27-查看不同年龄段的用户明细" class="headerlink" title="SQL27 查看不同年龄段的用户明细"></a><strong>SQL27</strong> <strong>查看不同年龄段的用户明细</strong></h2><p>题目：现在运营想要将用户划分为<strong>20岁以下，20-24岁，25岁及以上</strong>三个年龄段，分别查看不同年龄段用户的明细情况，请取出相应数据。（注：若<strong>年龄为空</strong>请返回<strong>其他</strong>。）</p><p>示例：user_profile</p><table><thead><tr><th>id</th><th>device_id</th><th>gender</th><th>age</th><th>university</th><th>gpa</th><th>active_days_within_30</th><th>question_cnt</th><th>answer_cnt</th></tr></thead><tbody><tr><td>1</td><td>2138</td><td>male</td><td>21</td><td>北京大学</td><td>3.4</td><td>7</td><td>2</td><td>12</td></tr><tr><td>2</td><td>3214</td><td>male</td><td></td><td>复旦大学</td><td>4</td><td>15</td><td>5</td><td>25</td></tr><tr><td>3</td><td>6543</td><td>female</td><td>20</td><td>北京大学</td><td>3.2</td><td>12</td><td>3</td><td>30</td></tr><tr><td>4</td><td>2315</td><td>female</td><td>23</td><td>浙江大学</td><td>3.6</td><td>5</td><td>1</td><td>2</td></tr><tr><td>5</td><td>5432</td><td>male</td><td>25</td><td>山东大学</td><td>3.8</td><td>20</td><td>15</td><td>70</td></tr><tr><td>6</td><td>2131</td><td>male</td><td>28</td><td>山东大学</td><td>3.3</td><td>15</td><td>7</td><td>13</td></tr><tr><td>7</td><td>4321</td><td>male</td><td>26</td><td>复旦大学</td><td>3.6</td><td>9</td><td>6</td><td>52</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果：</p><table><thead><tr><th>device_id</th><th>gender</th><th>age_cut</th></tr></thead><tbody><tr><td>2138</td><td>male</td><td>20-24岁</td></tr><tr><td>3214</td><td>male</td><td>其他</td></tr><tr><td>6543</td><td>female</td><td>20-24岁</td></tr><tr><td>2315</td><td>female</td><td>20-24岁</td></tr><tr><td>5432</td><td>male</td><td>25岁及以上</td></tr><tr><td>2131</td><td>male</td><td>25岁及以上</td></tr><tr><td>4321</td><td>male</td><td>25岁及以上</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> device_id, gender, </span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> age <span class="operator">&lt;</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;20岁以下&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> age <span class="operator">&lt;</span> <span class="number">25</span> <span class="keyword">then</span> <span class="string">&#x27;20-24岁&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> age <span class="operator">&gt;=</span> <span class="number">25</span> <span class="keyword">then</span> <span class="string">&#x27;25岁及以上&#x27;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span></span><br><span class="line"><span class="keyword">end</span> age_cut</span><br><span class="line"><span class="keyword">from</span> user_profile</span><br></pre></td></tr></table></figure><h1 id="5-day"><a href="#5-day" class="headerlink" title="5. day()"></a>5. day()</h1><ul><li><p>day()</p></li><li><p>month()</p></li><li><p>year()</p></li></ul><h1 id="6-用户留存率计算"><a href="#6-用户留存率计算" class="headerlink" title="6. 用户留存率计算"></a>6. 用户留存率计算</h1><p><a href="/Users/xiaoyu/Documents/%E5%8D%9A%E5%AE%A2/SQL-%E8%AE%A1%E7%AE%97%E7%94%A8%E6%88%B7%E6%AC%A1%E6%97%A5%E7%95%99%E5%AD%98%E7%8E%87.md">SQL-计算用户次日留存率.md</a></p><h1 id="7-字符串相关"><a href="#7-字符串相关" class="headerlink" title="7. 字符串相关"></a>7. 字符串相关</h1><p><a href="/Users/xiaoyu/Documents/%E5%8D%9A%E5%AE%A2/SQL-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3.md">SQL-字符串相关.md</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-查询列&quot;&gt;&lt;a href=&quot;#1-查询列&quot; class=&quot;headerlink&quot; title=&quot;1. 查询列&quot;&gt;&lt;/a&gt;1. 查询列&lt;/h1&gt;&lt;p&gt;列查询、多列查询、限制返回数量、in、like、聚合函数。&lt;/p&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SQL" scheme="https://artemis727.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>SQL-字符串相关</title>
    <link href="https://artemis727.github.io/2023/02/07/SQL-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/"/>
    <id>https://artemis727.github.io/2023/02/07/SQL-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3/</id>
    <published>2023-02-07T04:47:41.452Z</published>
    <updated>2023-02-23T08:47:49.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL30-统计每种性别的人数"><a href="#SQL30-统计每种性别的人数" class="headerlink" title="SQL30 统计每种性别的人数"></a><strong>SQL30</strong> <strong>统计每种性别的人数</strong></h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>题目：现在运营举办了一场比赛，收到了一些参赛申请，表数据记录形式如下所示，现在运营想要统计每个性别的用户分别有多少参赛者，请取出相应结果</p><p>示例：user_submit</p><table><thead><tr><th>device_id</th><th>profile</th><th>blog_url</th></tr></thead><tbody><tr><td>2138</td><td>180cm,75kg,27,male</td><td>http:&#x2F;url&#x2F;bigboy777</td></tr><tr><td>3214</td><td>165cm,45kg,26,female</td><td>http:&#x2F;url&#x2F;kittycc</td></tr><tr><td>6543</td><td>178cm,65kg,25,male</td><td>http:&#x2F;url&#x2F;tiger</td></tr><tr><td>4321</td><td>171cm,55kg,23,female</td><td>http:&#x2F;url&#x2F;uhksd</td></tr><tr><td>2131</td><td>168cm,45kg,22,female</td><td>http:&#x2F;urlsydney</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果：</p><table><thead><tr><th>gender</th><th>number</th></tr></thead><tbody><tr><td>male</td><td>2</td></tr><tr><td>female</td><td>3</td></tr></tbody></table><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substring_index(profile, <span class="string">&#x27;,&#x27;</span>, <span class="number">-1</span>) <span class="keyword">as</span> gender, <span class="built_in">count</span>(device_id)</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> gender</span><br></pre></td></tr></table></figure><h1 id="SQL31-提取博客URL中的用户名"><a href="#SQL31-提取博客URL中的用户名" class="headerlink" title="SQL31 提取博客URL中的用户名"></a><strong>SQL31</strong> <strong>提取博客URL中的用户名</strong></h1><h2 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h2><p>题目：对于申请参与比赛的用户，blog_url字段中url字符后的字符串为用户个人博客的用户名，现在运营想要把用户的个人博客用户字段提取出单独记录为一个新的字段，请取出所需数据。</p><p>示例：user_submit</p><table><thead><tr><th>device_id</th><th>profile</th><th>blog_url</th></tr></thead><tbody><tr><td>2138</td><td>180cm,75kg,27,male</td><td>http:&#x2F;ur&#x2F;bisdgboy777</td></tr><tr><td>3214</td><td>165cm,45kg,26,female</td><td>http:&#x2F;url&#x2F;dkittycc</td></tr><tr><td>6543</td><td>178cm,65kg,25,male</td><td>http:&#x2F;ur&#x2F;tigaer</td></tr><tr><td>4321</td><td>171 cm,55kg,23,female</td><td>http:&#x2F;url&#x2F;uhksd</td></tr><tr><td>2131</td><td>168cm,45kg,22,female</td><td>http:&#x2F;url&#x2F;sydney</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果：</p><table><thead><tr><th>device_id</th><th>user_name</th></tr></thead><tbody><tr><td>2138</td><td>bisdgboy777</td></tr><tr><td>3214</td><td>dkittycc</td></tr><tr><td>6543</td><td>tigaer</td></tr><tr><td>4321</td><td>uhsksd</td></tr><tr><td>2131</td><td>sydney</td></tr></tbody></table><hr><h3 id="提取某个字符一般有四种做法："><a href="#提取某个字符一般有四种做法：" class="headerlink" title="提取某个字符一般有四种做法："></a>提取某个字符一般有四种做法：</h3><ol><li><p><strong>trim()</strong></p><p>trim() 是直接更改相同格式的一列，删除这一列内容中的统一部分，然后重命名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> device_id, <span class="built_in">trim</span>(<span class="string">&#x27;http:/url/&#x27;</span> <span class="keyword">from</span> blog_url) <span class="keyword">as</span> user_name</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br></pre></td></tr></table></figure><p>​</p></li><li><p><strong>substring_index()</strong></p><p>substring_index() 是将字符串切割，1表示保留字符串的左边👈，-1表示保留字符串的右边👉：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> device_id, substring_index(blog_url, <span class="string">&#x27;/url/&#x27;</span>, <span class="number">-1</span>) <span class="keyword">as</span> user_name</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br></pre></td></tr></table></figure><p>还有一个用法是计数：</p><p>SUBSTRING_INDEX(str,delim,count) 返回从字符串str分隔符 delim 在计数发生前的子字符串。如果计数是正的，则返回一切到最终定界符(从左边算起)的左侧。如果count是负数，则返回一切最终定界符(从右边算起)的右侧。SUBSTRING_INDEX() 搜寻在delim时进行区分大小写的匹配。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SUBSTRING_INDEX(<span class="string">&#x27;www.somewebsite.com&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>Output: <code>&#39;www.somewebsite&#39;</code></p></li><li><p><strong>substr()</strong></p><p>substr() 是用具体位置（数字）来表示从哪开始截取的，参数里还包括截取的长度：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> device_id, substr(blog_url, <span class="number">11</span>, length(blog_url)<span class="number">-10</span>) <span class="keyword">as</span> user_name</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br></pre></td></tr></table></figure></li><li><p><strong>replace()</strong></p><p>replace() 就是替换函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleect device_id, replace(blog_url, <span class="string">&#x27;http:/url/&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> user_name</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br></pre></td></tr></table></figure></li></ol><h1 id="SQL32-截取出年龄"><a href="#SQL32-截取出年龄" class="headerlink" title="SQL32 截取出年龄"></a><strong>SQL32</strong> <strong>截取出年龄</strong></h1><h2 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h2><p>题目：现在运营举办了一场比赛，收到了一些参赛申请，表数据记录形式如下所示，现在运营想要统计每个年龄的用户分别有多少参赛者，请取出相应结果</p><p>示例：user_submit</p><table><thead><tr><th>device_id</th><th>profile</th><th>blog_url</th></tr></thead><tbody><tr><td>2138</td><td>180cm,75kg,27,male</td><td>http:&#x2F;ur&#x2F;bigboy777</td></tr><tr><td>3214</td><td>165cm,45kg,26,female</td><td>http:&#x2F;url&#x2F;kittycc</td></tr><tr><td>6543</td><td>178cm,65kg,25,male</td><td>http:&#x2F;url&#x2F;tiger</td></tr><tr><td>4321</td><td>171cm,55kg,23,female</td><td>http:&#x2F;url&#x2F;uhksd</td></tr><tr><td>2131</td><td>168cm,45kg,22,female</td><td>http:&#x2F;url&#x2F;sydney</td></tr></tbody></table><p>根据示例，你的查询应返回以下结果：</p><table><thead><tr><th>age</th><th>number</th></tr></thead><tbody><tr><td>27</td><td>1</td></tr><tr><td>26</td><td>1</td></tr><tr><td>25</td><td>1</td></tr><tr><td>23</td><td>1</td></tr><tr><td>22</td><td>1</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substring_index(substring_index(profile, <span class="string">&#x27;,&#x27;</span>, <span class="number">-2</span>), <span class="string">&#x27;,&#x27;</span>, <span class="number">1</span>) <span class="keyword">as</span> age, <span class="built_in">count</span>(device_id)</span><br><span class="line"><span class="keyword">from</span> user_submit</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> age</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL30-统计每种性别的人数&quot;&gt;&lt;a href=&quot;#SQL30-统计每种性别的人数&quot; class=&quot;headerlink&quot; title=&quot;SQL30 统计每种性别的人数&quot;&gt;&lt;/a&gt;&lt;strong&gt;SQL30&lt;/strong&gt; &lt;strong&gt;统计每种性别的人数&lt;</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SQL" scheme="https://artemis727.github.io/tags/SQL/"/>
    
    <category term="字符串" scheme="https://artemis727.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>SQL-计算用户留存率</title>
    <link href="https://artemis727.github.io/2023/02/07/SQL-%E8%AE%A1%E7%AE%97%E7%94%A8%E6%88%B7%E6%AC%A1%E6%97%A5%E7%95%99%E5%AD%98%E7%8E%87/"/>
    <id>https://artemis727.github.io/2023/02/07/SQL-%E8%AE%A1%E7%AE%97%E7%94%A8%E6%88%B7%E6%AC%A1%E6%97%A5%E7%95%99%E5%AD%98%E7%8E%87/</id>
    <published>2023-02-07T02:17:12.143Z</published>
    <updated>2023-03-07T12:55:31.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算用户次日留存率"><a href="#计算用户次日留存率" class="headerlink" title="计算用户次日留存率"></a>计算用户次日留存率</h1><p>如果只是计算用户的<strong>次日</strong>留存率，那么使用date_sub()函数就够了：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(if(b.device_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="number">1</span>, <span class="number">0</span>)) <span class="keyword">as</span> avg_ret</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> device_id, <span class="type">date</span></span><br><span class="line">    <span class="keyword">from</span> question_practice_detail</span><br><span class="line">) a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> device_id, date_sub(<span class="type">date</span>, <span class="type">interval</span> <span class="number">1</span> <span class="keyword">day</span>) <span class="keyword">as</span> <span class="type">date</span></span><br><span class="line">    <span class="keyword">from</span> question_practice_detail</span><br><span class="line">) b</span><br><span class="line"><span class="keyword">on</span> a.device_id <span class="operator">=</span> b.device_id <span class="keyword">and</span> a.date <span class="operator">=</span> b.date</span><br></pre></td></tr></table></figure><ul><li><p><strong>date_sub() 函数：</strong></p><ul><li><p>SELECT DATE_SUB(‘2010-08-12’, INTERVAL 3 DAY) AS NewDate </p><p>结果： 2010-08-09</p></li><li><p>SELECT DATE_SUB(‘2010-08-12’, INTERVAL ‘3-2’ YEAR_MONTH) AS NewDate </p><p>结果： 2007-06-12</p></li><li><p>SELECT DATE_SUB(‘2011-09-14 2:44:36’, INTERVAL ‘2:26’ HOUR_MINUTE) AS NewDate </p><p>结果： 2011-09-14 00:18:36</p></li></ul></li></ul><h1 id="基于SQL的留存率计算"><a href="#基于SQL的留存率计算" class="headerlink" title="基于SQL的留存率计算"></a>基于SQL的留存率计算</h1><blockquote><p>转自<a class="link"   href="https://zhuanlan.zhihu.com/p/178598910" >知乎：基于SQL的留存率计算<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、什么是留存率"><a href="#一、什么是留存率" class="headerlink" title="一、什么是留存率"></a>一、什么是留存率</h2><p>互联网行业里，留存率是用于反映网站、互联网应用或网络游戏的<strong>运营情况</strong>的统计指标，其具体含义为<strong>在统计周期（周&#x2F;月）内，每日活跃用户数在第N日仍启动该App的用户数占比的平均值</strong>。其中N通常取2、3、7、<strong>14</strong>、30，分别对应次日留存率、三日留存率、周留存率、半月留存率和月留存率。</p><p>留存率常用于反映用户粘性，<strong>当N取值越大、留存率越高时，用户粘性越高</strong>。</p><h2 id="二、留存率的计算"><a href="#二、留存率的计算" class="headerlink" title="二、留存率的计算"></a>二、留存率的计算</h2><ul><li><p><strong>留存率 &#x3D; 登陆用户数&#x2F;新增用户数 * 100%</strong></p></li><li><p>新增用户数：在当前时间段新注册（或新访问）的用户数；</p></li><li><p>登录用户数：在统计的时间段至少登录过一次的用户数；</p></li><li><p>次日留存率：在次日至少登录过一次的用户数&#x2F;当天新增的用户数；</p></li><li><p>❗️<strong>3日留存率</strong>：在往后3天内<strong>至少登录过一次</strong>的用户数&#x2F;当天新增的用户数；</p></li><li><p>❗️<strong>7日留存率</strong>：在往后7天内<strong>至少登录过一次</strong>的用户数&#x2F;当天新增的用户数；</p></li><li><p>❗️<strong>15日留存数</strong>：当天新增的用户数，在往后<strong>7天内至少登录过一次</strong>的用户，在往后<strong>第8天到第14天内至少再登陆过一次</strong>的用户数</p><p><strong>➡️ 3日和7日，至少登陆过一次；15日，7天为一段，在每段内至少登录一次！</strong></p></li></ul><h2 id="SQL中计算用户的留存率"><a href="#SQL中计算用户的留存率" class="headerlink" title="SQL中计算用户的留存率"></a>SQL中计算用户的留存率</h2><ul><li><strong>新增用户数</strong></li></ul><p>由于数据过大，这截取时间2017.11.26~2017.12.03为例。</p><p>首先计算分母，这里有的算法是用新增用户数，有的算法是用活跃用户数。</p><p>⚠️注意：<strong>新增用户数与活跃用户数并不相等</strong>，活跃用户数包含新增用户数。活跃用户数，当天的访问人数，也就是<strong>UV</strong>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每位用户的最早登录日期</span></span><br><span class="line"><span class="keyword">SELECT</span> 用户ID, <span class="built_in">MIN</span>(日期) <span class="keyword">AS</span> 最早登录日期</span><br><span class="line"><span class="keyword">FROM</span> userbehavior</span><br><span class="line"><span class="keyword">WHERE</span> 日期 <span class="operator">&gt;</span> <span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> 日期 <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 用户ID</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-18cfc6382ff6f91e85948644b0e97137_1440w.webp"                      alt="img"                ></p><p>再从上表中计算出每天的新增人数，<strong>❗️算新增人数用的日期是最早登录日期！</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 最早登录日期 <span class="keyword">AS</span> 日期, <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 新增人数</span><br><span class="line"><span class="keyword">FROM</span>(<span class="keyword">SELECT</span> 用户ID, <span class="built_in">MIN</span>(日期) <span class="keyword">AS</span> 最早登录日期</span><br><span class="line">     <span class="keyword">FROM</span> userbehavior</span><br><span class="line">     <span class="keyword">WHERE</span> 日期 <span class="operator">&gt;</span> <span class="string">&#x27;2017-11-25&#x27;</span> <span class="keyword">AND</span> 日期 <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line">     <span class="keyword">GROUP</span> <span class="keyword">BY</span> 用户ID) <span class="keyword">AS</span> f</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 最早登录日期</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-967700ed583d369a6686170d50030ec3_1440w.webp"                      alt="img"                ></p><p>以下是活跃用户数的算法，二者确实数值上并不相等。<strong>❗️算每日活跃用户数用的日期就是当天的日期！</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每天活跃用户数=UV 访客数</span></span><br><span class="line"><span class="keyword">SELECT</span> 日期, <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 活跃用户数</span><br><span class="line"><span class="keyword">FROM</span> userbehavior</span><br><span class="line"><span class="keyword">where</span> 日期 <span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span> <span class="keyword">AND</span> 日期 <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 日期</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-5466468851b1d4b0794d8ec92c6f43f0_1440w.webp"                      alt="img"                ></p><p>抽取7天的活跃用户数。</p><ul><li><strong>次日留存的用户数</strong></li></ul><ol><li>次日的时间间隔为1，涉及到时间间隔采用自联结。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.用户ID, a.`日期` <span class="keyword">AS</span> atime, b.`日期` <span class="keyword">AS</span> btime</span><br><span class="line"><span class="keyword">FROM</span> userbehavior <span class="keyword">AS</span> a </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> userbehavior <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">ON</span> a.`用户ID` <span class="operator">=</span> b.`用户ID`</span><br><span class="line"><span class="keyword">WHERE</span> a.`日期` <span class="operator">&gt;</span> <span class="string">&#x27;2017-11-25&#x27;</span> <span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-58aa55bd327431b0782ff0dc5d41c8ce_1440w.webp"                      alt="img"                ></p><p>将上表存为视图C，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> C(用户ID, atime, btime)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> a.用户ID, a.`日期`, b.`日期` </span><br><span class="line"><span class="keyword">from</span> userbehavior <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> userbehavior <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">ON</span> a.`用户ID`<span class="operator">=</span>b.`用户ID`</span><br><span class="line"><span class="keyword">WHERE</span> a.`日期`<span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>计算时间间隔用<a class="link"   href="https://blog.csdn.net/qq_37493556/article/details/92805912" >timestampdiff函数<i class="fas fa-external-link-alt"></i></a></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `用户ID`, TIMESTAMPDIFF(<span class="keyword">DAY</span>, atime, btime)<span class="keyword">AS</span> 时间间隔</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> a.用户ID, a.日期 <span class="keyword">as</span> atime, b.日期 <span class="keyword">as</span> btime</span><br><span class="line">  <span class="keyword">FROM</span> userbehavior <span class="keyword">as</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> userbehavior <span class="keyword">as</span> b</span><br><span class="line">  <span class="keyword">ON</span> a.用户ID<span class="operator">=</span>b.`用户ID`</span><br><span class="line">  <span class="keyword">WHERE</span> a.`日期`<span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span>) <span class="keyword">AS</span> c</span><br><span class="line"><span class="comment">-- 这里直接设置为表c</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-6d0f637e1aabdc3bcc2b57dedff5094d_1440w.webp"                      alt="img"                ></p><p>得到了用户的时间间隔</p><p>3.用case语句筛选出时间间隔为1的数据，并且进行计数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>, <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">case</span> <span class="keyword">when</span> 时间间隔 <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> `用户ID`</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">END</span>)<span class="keyword">AS</span> 次日留存数</span><br><span class="line"><span class="keyword">FROM</span>( <span class="keyword">SELECT</span> `用户ID`,TIMESTAMPDIFF(<span class="keyword">DAY</span>,atime,btime)<span class="keyword">AS</span> 时间间隔</span><br><span class="line"> <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> a.用户ID,a.日期 <span class="keyword">as</span> atime,b.日期 <span class="keyword">as</span> btime</span><br><span class="line"><span class="keyword">FROM</span> userbehavior <span class="keyword">as</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> userbehavior <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">ON</span> a.用户ID<span class="operator">=</span>b.`用户ID`</span><br><span class="line"><span class="keyword">WHERE</span> a.`日期`<span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> c</span><br><span class="line">)<span class="keyword">AS</span> d</span><br></pre></td></tr></table></figure><ul><li><strong>次日留存率</strong></li></ul><p>次日留存率&#x3D;次日留存用户数&#x2F;当日活跃用户数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>,<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">case</span> <span class="keyword">when</span> 时间间隔 <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> `用户ID`</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">END</span>) <span class="keyword">AS</span> 次日留存数<span class="operator">/</span><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 次日留存率</span><br><span class="line"><span class="keyword">FROM</span>( <span class="keyword">SELECT</span> `用户ID`,TIMESTAMPDIFF(<span class="keyword">DAY</span>,atime,btime)<span class="keyword">AS</span> 时间间隔</span><br><span class="line"> <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> a.用户ID,a.日期 <span class="keyword">as</span> atime,b.日期 <span class="keyword">as</span> btime</span><br><span class="line"><span class="keyword">FROM</span> userbehavior <span class="keyword">as</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> userbehavior <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">ON</span> a.用户ID<span class="operator">=</span>b.`用户ID`</span><br><span class="line"><span class="keyword">WHERE</span> a.`日期`<span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> c</span><br><span class="line">)<span class="keyword">AS</span> d</span><br></pre></td></tr></table></figure><h2 id="三、三日以及N日留存的计算"><a href="#三、三日以及N日留存的计算" class="headerlink" title="三、三日以及N日留存的计算"></a>三、三日以及N日留存的计算</h2><p>只需要修改时间间隔&#x3D;N即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 日期,<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID <span class="keyword">AS</span> 活跃用户数,</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">case</span> <span class="keyword">when</span> 时间间隔<span class="operator">=</span><span class="number">1</span> <span class="keyword">then</span> `用户ID`</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">END</span>) <span class="keyword">AS</span> 次日留存数<span class="operator">/</span><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 次日留存率</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">case</span> <span class="keyword">when</span> 时间间隔<span class="operator">=</span><span class="number">3</span> <span class="keyword">then</span> `用户ID`</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">END</span>) <span class="keyword">AS</span> 次日留存数<span class="operator">/</span><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 三日留存率</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">case</span> <span class="keyword">when</span> 时间间隔<span class="operator">=</span><span class="number">7</span> <span class="keyword">then</span> `用户ID`</span><br><span class="line"><span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">END</span>) <span class="keyword">AS</span> 次日留存数<span class="operator">/</span><span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> 用户ID) <span class="keyword">AS</span> 七日留存率</span><br><span class="line"><span class="keyword">FROM</span>( <span class="keyword">SELECT</span> `用户ID`,TIMESTAMPDIFF(<span class="keyword">DAY</span>,atime,btime)<span class="keyword">AS</span> 时间间隔</span><br><span class="line"> <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> a.用户ID,a.日期 <span class="keyword">as</span> atime,b.日期 <span class="keyword">as</span> btime</span><br><span class="line"><span class="keyword">FROM</span> userbehavior <span class="keyword">as</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> 每日新增用户数表 <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">ON</span> a.用户ID<span class="operator">=</span>b.`用户ID`</span><br><span class="line"><span class="keyword">WHERE</span> a.`日期`<span class="operator">&gt;</span><span class="string">&#x27;2017-11-25&#x27;</span><span class="keyword">AND</span> a.`日期` <span class="operator">&lt;</span> <span class="string">&#x27;2017-12-04&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> c</span><br><span class="line">)<span class="keyword">AS</span> d</span><br></pre></td></tr></table></figure><h2 id="四、连续登录三天用户数量"><a href="#四、连续登录三天用户数量" class="headerlink" title="四、连续登录三天用户数量"></a>四、连续登录三天用户数量</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算用户次日留存率&quot;&gt;&lt;a href=&quot;#计算用户次日留存率&quot; class=&quot;headerlink&quot; title=&quot;计算用户次日留存率&quot;&gt;&lt;/a&gt;计算用户次日留存率&lt;/h1&gt;&lt;p&gt;如果只是计算用户的&lt;strong&gt;次日&lt;/strong&gt;留存率，那么使用date_s</summary>
      
    
    
    
    <category term="刷题笔记" scheme="https://artemis727.github.io/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SQL" scheme="https://artemis727.github.io/tags/SQL/"/>
    
  </entry>
  
</feed>
