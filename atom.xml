<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syaoran :)</title>
  
  
  <link href="https://artemis727.github.io/atom.xml" rel="self"/>
  
  <link href="https://artemis727.github.io/"/>
  <updated>2023-11-22T10:38:34.370Z</updated>
  <id>https://artemis727.github.io/</id>
  
  <author>
    <name>Syaoran Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Advanced DM | W2</title>
    <link href="https://artemis727.github.io/2023/11/22/Advanced-DM-W2/"/>
    <id>https://artemis727.github.io/2023/11/22/Advanced-DM-W2/</id>
    <published>2023-11-22T10:37:51.000Z</published>
    <updated>2023-11-22T10:38:34.370Z</updated>
    
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>DTTM | L3 Blockchain &amp; Crypto</title>
    <link href="https://artemis727.github.io/2023/11/21/DTTM-L3-Blockchain-Crypto/"/>
    <id>https://artemis727.github.io/2023/11/21/DTTM-L3-Blockchain-Crypto/</id>
    <published>2023-11-21T07:13:34.000Z</published>
    <updated>2023-11-21T08:27:45.050Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>AI | W1</title>
    <link href="https://artemis727.github.io/2023/11/20/AI-W1/"/>
    <id>https://artemis727.github.io/2023/11/20/AI-W1/</id>
    <published>2023-11-20T05:50:35.000Z</published>
    <updated>2023-11-21T07:05:56.269Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Recommendation : <a class="link" href="https://www.amazon.com/Learning-Data-Yaser-S-Abu-Mostafa/dp/1600490069">Learning From Data<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://work.caltech.edu/telecourse">Mooc<i class="fas fa-external-link-alt"></i></a></p></blockquote><h1 id="machine-learning-paradigm"><a class="markdownIt-Anchor" href="#machine-learning-paradigm"></a> Machine Learning Paradigm</h1><p><img src="../../../Library/Application%20Support/typora-user-images/image-2023112015930265%E2%80%AFPM.png" alt="image-2023112015930265 PM"></p><p>Question: Why do we need a candidate formula (hypothesis set)?</p><h2 id="example1-linear-separable-data"><a class="markdownIt-Anchor" href="#example1-linear-separable-data"></a> Example1: Linear Separable Data</h2><p><img src="https://p.ipic.vip/0sme05.png" alt="image-2023112021814437 PM"></p><p><img src="https://p.ipic.vip/5w1jke.png" alt="image-2023112021830000 PM"></p><p><img src="https://p.ipic.vip/ebk8pw.png" alt="image-2023112021841696 PM"></p><p>-&gt; ‘linear separable’ data</p><p>Candidating function can be ended like the target function.</p><p>Not enough data -&gt; underfitting data</p><h2 id="example2-non-linear-separable-data"><a class="markdownIt-Anchor" href="#example2-non-linear-separable-data"></a> Example2: Non-linear Separable Data</h2><p><img src="../../../Library/Containers/com.tencent.xinWeChat/Data/Library/Application%20Support/com.tencent.xinWeChat/2.0b4.0.9/e64de847ce5df010568a7ec24eb83621/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/Image/11541700461282_.pic_hd.jpg" alt="11541700461282_.pic_hd"></p><p><img src="../../../Library/Containers/com.tencent.xinWeChat/Data/Library/Application%20Support/com.tencent.xinWeChat/2.0b4.0.9/e64de847ce5df010568a7ec24eb83621/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/Image/11551700461328_.pic_hd.jpg" alt="11541700461282_.pic_hd"></p><h1 id="about-the-class"><a class="markdownIt-Anchor" href="#about-the-class"></a> About the Class</h1><h2 id="grade-component"><a class="markdownIt-Anchor" href="#grade-component"></a> Grade component</h2><table><thead><tr><th><strong>Component</strong></th><th><strong>ILO Tested</strong></th><th><strong>Weighting</strong></th><th><strong>Team/Individual</strong></th><th><strong>Assessment Rubrics</strong></th></tr></thead><tbody><tr><td>1. Class  Participation (2 e-learning + 6* homework)</td><td>1, 2, 3</td><td>30%</td><td>Individual</td><td>Appendix 1.1</td></tr><tr><td>2. Final Assignment * 2</td><td>1,2,3</td><td>30%</td><td>Individual</td><td>Appendix 1.2</td></tr><tr><td>3. Group Project * 2</td><td>1,2,3</td><td>40%</td><td>Team</td><td>Appendix 1.3</td></tr><tr><td>Total</td><td>100%</td><td></td><td></td><td></td></tr></tbody></table><h2 id="related-link"><a class="markdownIt-Anchor" href="#related-link"></a> Related Link</h2><p><a class="link" href="https://us02web.zoom.us/j/8632539931?pwd=VUpud3hpRXZOdTNlT1JJNnFoeUVOUT09">zoom link:<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://us02web.zoom.us/j/8632539931?pwd=VUpud3hpRXZOdTNlT1JJNnFoeUVOUT09">https://us02web.zoom.us/j/8632539931?pwd=VUpud3hpRXZOdTNlT1JJNnFoeUVOUT09<i class="fas fa-external-link-alt"></i></a></p><p>password: 1234</p><p>id: 863 253 9931</p><p>Download:</p><p>Python: Anaconda: <a class="link" href="https://www.anaconda.com/products/individual">https://www.anaconda.com/products/individual<i class="fas fa-external-link-alt"></i></a></p><p>VS Code: <a class="link" href="https://code.visualstudio.com/download">https://code.visualstudio.com/download<i class="fas fa-external-link-alt"></i></a></p><p>Orange: <a class="link" href="https://orangedatamining.com/download/#windows">https://orangedatamining.com/download/#windows<i class="fas fa-external-link-alt"></i></a></p><p>=========================================================================================================================================================</p><p>Register:</p><p>Programming:</p><p>R: rstudio cloud <a class="link" href="https://rstudio.cloud/">https://rstudio.cloud/<i class="fas fa-external-link-alt"></i></a></p><p>Snatchbot : <a class="link" href="https://snatchbot.me/">https://snatchbot.me/<i class="fas fa-external-link-alt"></i></a></p><p>=========================================================================================================================================================</p><p>API:</p><p>Replicate: <a class="link" href="https://replicate.com/">https://replicate.com/<i class="fas fa-external-link-alt"></i></a></p><p>discord: <a class="link" href="https://discord.com/">https://discord.com/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.midjourney.com/">Midjourney: https://www.midjourney.com/<i class="fas fa-external-link-alt"></i></a></p><p>Openai: <a class="link" href="https://openai.com/">https://openai.com/<i class="fas fa-external-link-alt"></i></a></p><p>Google Makersuite: <a class="link" href="https://makersuite.google.com/waitlist">https://makersuite.google.com/waitlist<i class="fas fa-external-link-alt"></i></a></p><p>=========================================================================================================================================================</p><p>Cloud:</p><p>Render: <a class="link" href="https://render.com/">https://render.com/<i class="fas fa-external-link-alt"></i></a></p><p>PythonAnywhere: <a class="link" href="https://www.pythonanywhere.com/">https://www.pythonanywhere.com/<i class="fas fa-external-link-alt"></i></a></p><p>github: <a class="link" href="https://github.com/">https://github.com/<i class="fas fa-external-link-alt"></i></a></p><p>discord: <a class="link" href="https://discord.com/">https://discord.com/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.midjourney.com/">Midjourney: https://www.midjourney.com/<i class="fas fa-external-link-alt"></i></a></p><p>==========================================================================================================================================================</p><p>Useful Link:</p><p>Library: <a class="link" href="https://1drv.ms/f/s!Aik2a4x7tvLygrcOVnorwa6X7zBxTg?e=ns139i">https://1drv.ms/f/s!Aik2a4x7tvLygrcOVnorwa6X7zBxTg?e=ns139i<i class="fas fa-external-link-alt"></i></a></p><p>Google Drive Code: <a class="link" href="https://drive.google.com/drive/folders/1fXjR7HWQVDvW4b_UwFmEM_NymlOo4Wbw?usp=sharing">https://drive.google.com/drive/folders/1fXjR7HWQVDvW4b_UwFmEM_NymlOo4Wbw?usp=sharing,<i class="fas fa-external-link-alt"></i></a></p><p>Google Drive Data: <a class="link" href="https://drive.google.com/drive/folders/1DWSSkL9zMwXktar8rxC_3rUGqxwNNTrR?usp=sharing">https://drive.google.com/drive/folders/1DWSSkL9zMwXktar8rxC_3rUGqxwNNTrR?usp=sharing<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Recommendation : &lt;a class=&quot;link&quot; href=&quot;https://www.amazon.com/Learning-Data-Yaser-S-Abu-Mostafa/dp/1600490069&quot;&gt;Learning From</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Advanced Programming | L2 Array</title>
    <link href="https://artemis727.github.io/2023/11/19/Advanced-Programming-L2-Array/"/>
    <id>https://artemis727.github.io/2023/11/19/Advanced-Programming-L2-Array/</id>
    <published>2023-11-19T03:24:51.000Z</published>
    <updated>2023-11-19T04:26:20.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="searching"><a class="markdownIt-Anchor" href="#searching"></a> Searching</h1><blockquote><p>It is virtually impossible to sort without some variant of a search operation. The “how of searching” is also important as it has a bearing on how quick a sorting algorithm ends up performing.</p></blockquote><p>2 broad types of searching algorithm:</p><ul><li>the list has already been sorted</li><li>the list has not been sorted</li></ul><h2 id="linear-search"><a class="markdownIt-Anchor" href="#linear-search"></a> Linear Search</h2><p>Traverse sequentially.</p><h3 id="unordered-linear-search"><a class="markdownIt-Anchor" href="#unordered-linear-search"></a> Unordered linear search</h3><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/f3ec4f7e-3aca-434f-b668-e744205346f2.jpg" alt="img" style="zoom:24%;"><p>The example above is an unordered list.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">unordered_list, term</span>): </span><br><span class="line">   unordered_list_size = <span class="built_in">len</span>(unordered_list) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(unordered_list_size): </span><br><span class="line">        <span class="keyword">if</span> term == unordered_list[i]: </span><br><span class="line">            <span class="keyword">return</span> i </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span> </span><br></pre></td></tr></table></figure><p>The unordered linear search has a worst case running time of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><h3 id="ordered-linear-search"><a class="markdownIt-Anchor" href="#ordered-linear-search"></a> Ordered linear search</h3><p>Assuming the elements have been sorted in ascending order, the algorithm is reduced to the following steps:</p><ol><li>Move through the list sequentially.</li><li>If a search item is greater than the object or item currently under inspection in the loop, then quit and return None.</li></ol><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/a7fa60ee-59b5-46a5-a542-a1e69da719f5.jpg" alt="img" style="zoom:24%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">ordered_list, term</span>): </span><br><span class="line">    ordered_list_size = <span class="built_in">len</span>(ordered_list) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ordered_list_size): </span><br><span class="line">        <span class="keyword">if</span> term == ordered_list[i]: </span><br><span class="line">            <span class="keyword">return</span> i </span><br><span class="line">        <span class="keyword">elif</span> ordered_list[i] &gt; term: </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span> </span><br></pre></td></tr></table></figure><p>The worst case time complexity of an ordered linear search is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>. In general, this kind of search is considered inefficient especially when dealing with large data sets.</p><h2 id="binary-search"><a class="markdownIt-Anchor" href="#binary-search"></a> Binary search</h2><ul><li>Prerequisite: The list <strong>must</strong> has been <strong>sorted</strong>.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">binary_search</span>(<span class="params">ordered_list, term</span>): </span><br><span class="line"></span><br><span class="line">    size_of_list = <span class="built_in">len</span>(ordered_list) - <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">    index_of_first_element = <span class="number">0</span> </span><br><span class="line">    index_of_last_element = size_of_list </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> index_of_first_element &lt;= index_of_last_element: </span><br><span class="line">        mid_point = (index_of_first_element + index_of_last_element)//<span class="number">2</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ordered_list[mid_point] == term: </span><br><span class="line">            <span class="keyword">return</span> mid_point </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> term &gt; ordered_list[mid_point]: </span><br><span class="line">            index_of_first_element = mid_point + <span class="number">1</span> </span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            index_of_last_element = mid_point - <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> index_of_first_element &gt; index_of_last_element: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span> </span><br></pre></td></tr></table></figure><p>Recurisive variant:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">binary_search</span>(<span class="params">ordered_list, first_element_index, last_element_index, term</span>): </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (last_element_index &lt; first_element_index): </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        mid_point = first_element_index + ((last_element_index - first_element_index) // <span class="number">2</span>) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ordered_list[mid_point] &gt; term: </span><br><span class="line">            <span class="keyword">return</span> binary_search(ordered_list, first_element_index, mid_point-<span class="number">1</span>,term) </span><br><span class="line">        <span class="keyword">elif</span> ordered_list[mid_point] &lt; term: </span><br><span class="line">            <span class="keyword">return</span> binary_search(ordered_list, mid_point+<span class="number">1</span>, last_element_index, term) </span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> mid_point </span><br></pre></td></tr></table></figure><p>There only distinction between the recursive binary search and the iterative binary search is the function definition and also the way in which mid_point is calculated. <strong>The calculation for the mid_point after the ((last_element_index - first_element_index) / 2) operation must add its result to first_element_index. That way we define the portion of the list to attempt the search.</strong></p><p>The binary search algorithm has a worst time complexity of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>. The half-ing of the list on each iteration follows a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">log n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span> of the number of elements progression.</p><p><em>注意：求平均值若使用  (lo+hi)/2 可能存在求和溢出的问题</em></p><p>求数组中间位置的索引的时候使用 <code>int mid = lo + (hi - lo) / 2;</code> 而不是 <code>int mid = (hi + lo) / 2;</code> 目的是为了防止当数组长度过大的时候因为 <code>hi+lo</code> 造成数据溢出。</p><h2 id="interpolation-search-插值搜索"><a class="markdownIt-Anchor" href="#interpolation-search-插值搜索"></a> Interpolation search 插值搜索</h2><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/c1c0e60b-6341-4243-90c9-96c57f7d94eb.jpg" alt="img" style="zoom:24%;"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">nearest_mid</span>(<span class="params">input_list, lower_bound_index, upper_bound_index, search_value</span>): </span><br><span class="line">    <span class="keyword">return</span> lower_bound_index + (( upper_bound_index -lower_bound_index)/ (input_list[upper_bound_index] -input_list[lower_bound_index])) * (search_value -input_list[lower_bound_index]) </span><br></pre></td></tr></table></figure><p>In interpolation search, our midpoint is swayed more to the left or right.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">interpolation_search</span>(<span class="params">ordered_list, term</span>): </span><br><span class="line"></span><br><span class="line">    size_of_list = <span class="built_in">len</span>(ordered_list) - <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">    index_of_first_element = <span class="number">0</span> </span><br><span class="line">    index_of_last_element = size_of_list </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> index_of_first_element &lt;= index_of_last_element: </span><br><span class="line">        mid_point = nearest_mid(ordered_list, index_of_first_element, index_of_last_element, term) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> mid_point &gt; index_of_last_element <span class="keyword">or</span> mid_point &lt; index_of_first_element: </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ordered_list[mid_point] == term: </span><br><span class="line">            <span class="keyword">return</span> mid_point </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> term &gt; ordered_list[mid_point]: </span><br><span class="line">            index_of_first_element = mid_point + <span class="number">1</span> </span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            index_of_last_element = mid_point - <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> index_of_first_element &gt; index_of_last_element: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span> </span><br></pre></td></tr></table></figure><p>The nearest_mid function makes use of a multiplication operation. This can produce values that are greater than the upper_bound_index or lower than the lower_bound_index. When this occurs, it means the search term, term, is not in the list. None is therefore returned to represent this.</p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/588fb2c7-4f75-4d83-8d91-4e00ca71a564.jpg" alt="img" style="zoom:24%;"><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/59dd1337-3b5c-45db-80ba-4f959d83eba4.jpg" alt="img" style="zoom:24%;"><h3 id="choosing-a-search-algorithm"><a class="markdownIt-Anchor" href="#choosing-a-search-algorithm"></a> Choosing a search algorithm</h3><ul><li><p>Ordered/Unordered linear search: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p>Binary Search: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><ul><li>can only be used on sorted list</li><li>not advised to be used on snall size lists</li></ul></li><li><p>Interpolation search enhance the performance of binary search by increasing the ability to get to the portion of the list that houses algorithm will perform: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log(logn))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;searching&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#searching&quot;&gt;&lt;/a&gt; Searching&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;It is virtually impossible to sort wit</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>DTTM | L2 Block Chain Use Cases</title>
    <link href="https://artemis727.github.io/2023/11/16/DTTM-L2-Block-Chain-Use-Cases/"/>
    <id>https://artemis727.github.io/2023/11/16/DTTM-L2-Block-Chain-Use-Cases/</id>
    <published>2023-11-16T06:47:11.000Z</published>
    <updated>2023-11-21T09:19:41.069Z</updated>
    
    <content type="html"><![CDATA[<h2 id="before-class-questions"><a class="markdownIt-Anchor" href="#before-class-questions"></a> Before-class questions</h2><ul><li>[?] Is blockchain a good supporting technology/tool for:<ul><li>Dispute Resolution<ul><li>[Yes] Automate contract setup;</li><li>[No] Complext condition can not be decalred by smart contract; It can enhance the transparency of trasactions but can not avoid all the fraud.</li><li>[Conclusion] It is effective but can not be helpful in all conditions, resolve? Can’t, but can help.</li></ul></li><li>Holiday Tracking Tool<ul><li>[No] If this thing is going to change subsequently, then blockchain is not suitble, instead, it is for more objective thing.</li></ul></li><li>Know Your Customer<ul><li>Background chats would be repeated, so it can enhance th efficiency to use blockchain.</li><li>Whether banks are willing to use this kind of record.</li><li>The privacy question.</li></ul></li><li>Food provenance<ul><li>tracing the origin/source of food, eg. farm to fork</li><li>each process can’t fullt trust each other -&gt; rely on the transparency</li></ul></li><li>Track your child<ul><li>Are there existing alternative solutions? What are them?</li><li>Do you need the transparency? Who need this kind of data? Can the data be abused?</li></ul></li><li>Electronic Medical Records<ul><li>facilating the share of EMRs (Electronic Medical Record)</li></ul></li></ul></li></ul><h2 id="after-class-questions"><a class="markdownIt-Anchor" href="#after-class-questions"></a> After-class Questions</h2><ul><li><p>What challenges would arise in implementing blockchain for logistics value chain?</p><ul><li><p>Cost: infrastructure + training</p></li><li><p>Uncertain ROI: long-time</p></li><li><p>What if not all stackholders are on-bordered</p></li><li><p>Disparity in capabilities:</p></li><li><p>Interpretability</p></li><li><p>Standard requirement</p></li><li><p>Who owns + maintains</p></li><li><p>Privacy + Security</p></li></ul></li><li><p>What steps would need to be taken?</p></li><li><p>What concerns would organizations have to take part in this?</p></li></ul><h2 id="comaprasion-between-2-cases"><a class="markdownIt-Anchor" href="#comaprasion-between-2-cases"></a> Comaprasion between 2 Cases</h2><p><img src="https://p.ipic.vip/tipp30.png" alt="image-2023112132725878 PM"></p><p><img src="https://p.ipic.vip/391ese.png" alt="image-2023112132740582 PM"></p><p><img src="https://p.ipic.vip/n31bdc.png" alt="image-2023112132751196 PM"></p><ul><li>Microsoft: common value -&gt; win-win -&gt; likely to success<ul><li>We don’t need to involve all the parties in the blockchain.</li><li>Limit the num of stackholders -&gt; Better to have small number of stackholders.</li><li>Less disparity in capabilities. -&gt; Pick your stackholders wisely.</li><li>Reduce the complexibility of the stackholders and task. Go small, go slow.</li><li>IT capabilities.</li></ul></li></ul><p><img src="../../../Library/Application%20Support/typora-user-images/image-2023112142807956%E2%80%AFPM.png" alt="image-2023112142807956 PM"></p><h2 id="innovation-ecosystem"><a class="markdownIt-Anchor" href="#innovation-ecosystem"></a> Innovation Ecosystem</h2><p>Innovations that are not stand-alone products but integrated solutions, require the organization to transition from managing the innovation to <strong>managing the innovation ecosystem</strong>.</p><ul><li>It’s not whether you r ready, it’s about whether the ecosystem is ready.</li></ul><h2 id="questions"><a class="markdownIt-Anchor" href="#questions"></a> Questions</h2><ul><li>Why do u think China decided to implement retail CBDCs?<ul><li>The digital mkt in China is controled by the tech giants.</li></ul></li><li>Why do you think Singapore decided not to focus on retail CBDCs?</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;before-class-questions&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#before-class-questions&quot;&gt;&lt;/a&gt; Before-class questions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[?] Is</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>DTTM | L1 Block Chain</title>
    <link href="https://artemis727.github.io/2023/11/15/DTTM-L1-Block-Chain/"/>
    <id>https://artemis727.github.io/2023/11/15/DTTM-L1-Block-Chain/</id>
    <published>2023-11-15T06:49:38.000Z</published>
    <updated>2023-11-21T07:14:40.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="what-is-blockchain-how-it-works"><a class="markdownIt-Anchor" href="#what-is-blockchain-how-it-works"></a> What is blockchain: How it works</h1><ul><li>Blockchain is a type of distributed ledger technology = Transparancy + Immutability + Distributed consensus<ul><li>immutability: hash function</li><li>security: multiple computer nodes, have to achieve a consensus</li></ul></li><li>Centralized vs Distributed/Decentralized Ledger<ul><li>Centralized: SAP, ERP, one central server does most of the processing<ul><li>make decisions, propagate, command and control</li></ul></li><li>Decentralized: a network of server, each has a copy of the database/ledger<ul><li>no command and control, decisions are made in using a consus approach, eg. votes</li><li>open-source software communities</li></ul></li></ul></li><li>Pros &amp; Cons</li></ul><table><thead><tr><th></th><th>Centralized</th><th>Decentralized</th></tr></thead><tbody><tr><td>Pros</td><td>1. easy to control/manage; 2. faster; 4. ease of achieving standardization; 7. efficient (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{input}{output}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.38888em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.907772em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>)</td><td>3. fault-tolerance; 5. transparency; 6. lower chances of error (more eyeballs look at the info)</td></tr><tr><td>Cons</td><td>3. risk: single point of failure (prone to corruption)</td><td>2. latency</td></tr></tbody></table><p>In a word, centralized -&gt; within the control, decentralized -&gt; extremely reliable.</p><h1 id="blockchain-development"><a class="markdownIt-Anchor" href="#blockchain-development"></a> Blockchain development</h1><ul><li>Bitcoin is not blockchain, it’s an initial use case of blockchain.</li></ul><h1 id="4-elements-of-blockchain"><a class="markdownIt-Anchor" href="#4-elements-of-blockchain"></a> 4 elements of blockchain</h1><h2 id="peer-to-peer-network"><a class="markdownIt-Anchor" href="#peer-to-peer-network"></a> Peer-to-peer network</h2><ul><li>public, permissionless</li><li>What does a miner/computer node do?</li></ul><h2 id="data-management"><a class="markdownIt-Anchor" href="#data-management"></a> Data Management</h2><ul><li>How the data is structured?<ul><li>Chains or blocks.</li><li>Append only. Only can add new blocks to the blockchain.</li></ul></li></ul><h2 id="cryptography"><a class="markdownIt-Anchor" href="#cryptography"></a> Cryptography</h2><ul><li><p>Hash function</p><ul><li><p>Can only be used to encrypt. Can’t decrypt.</p></li><li><p>2 outputs are same -&gt; 2 inputs are same.</p></li></ul></li></ul><h2 id="consus-system"><a class="markdownIt-Anchor" href="#consus-system"></a> Consus system</h2><h1 id="mining"><a class="markdownIt-Anchor" href="#mining"></a> Mining</h1><p><em>Why is Ethereum able to move from Proof of Work to Proof of Stake, while Bitcoin still hasn’t?</em></p><ul><li>disparity of the ideas of founders</li></ul><h1 id="questions"><a class="markdownIt-Anchor" href="#questions"></a> Questions</h1><p>What is a node?</p><ul><li>A type of cryptocurrency</li><li>A blockchain</li><li><strong>A computer on a blockchain network</strong></li><li>An exchange</li></ul><p>What incentivizes the miners to give correct validation of transactions?</p><ul><li>A nonce</li><li><strong>A block reward</strong></li><li>Thumbs up from the community</li><li>More memory</li></ul><p>Are blockchains fully public?</p><ul><li>Yes</li><li>No</li><li><strong>It depends</strong></li></ul><p>Where is the bitcoin central server located?</p><ul><li>Washington DC</li><li>Undisclosed location</li><li>London</li><li><strong>None of the above</strong></li></ul><h1 id="blockchain-20-ethereum"><a class="markdownIt-Anchor" href="#blockchain-20-ethereum"></a> Blockchain 2.0 - Ethereum</h1><ul><li>smart contracts</li><li><em>What are the pros and cons of using such blockchain as a service platforms?</em><ul><li>pros: quick (no coding)</li><li>cons:</li></ul></li></ul><h1 id="blockchain-30"><a class="markdownIt-Anchor" href="#blockchain-30"></a> Blockchain 3.0</h1><ul><li>current stage</li><li>trade-off among scalability, decentralized and security</li></ul><img src="https://p.ipic.vip/o6qao8.png" alt="image-2023111554320797 PM" style="zoom:67%;"><ul><li><p>Layer</p><ul><li><p>在区块链领域，“layer” 通常指的是区块链技术的不同层次或协议。这样的分层结构旨在提供更多的灵活性和可扩展性，使不同的功能和应用能够在区块链上更好地运行。以下是一些常见的区块链层次或协议：</p><ol><li><p><strong>Layer 1（第一层）：</strong> 这是区块链的基本层，包括底层的区块链协议，如比特币的区块链或以太坊的主链。Layer 1 主要关注去中心化、安全性和共识机制。</p></li><li><p><strong>Layer 2（第二层）：</strong> 这是在基本区块链协议之上构建的层，用于提高交易处理速度和降低费用。Layer 2 解决方案包括诸如闪电网络（Lightning Network）和夸链协议（Cross-Chain Protocols）等。</p></li><li><p><strong>Layer 3（第三层）：</strong> 这一层涉及构建在Layer 2之上的更高级的应用和协议。它可能包括智能合约平台、分布式应用程序（DApps）以及与区块链相关的协议和服务。</p></li></ol><p>每个层次都有其独特的功能和目标，而不同的区块链项目和平台可能在不同的层次上进行创新。这种分层结构有助于提高区块链系统的可扩展性和适应性，使其更适用于各种用例。</p></li><li><p>大部分的development都是contribute to scalability的，很少有对decentralized有作用的</p></li></ul></li></ul><h1 id="questions-2"><a class="markdownIt-Anchor" href="#questions-2"></a> Questions</h1><p><img src="https://p.ipic.vip/euuif4.png" alt="image-2023111555049261 PM"></p><ul><li>F</li><li>F: It can’t do everything, cloud only means it is opearted bu some data center, it is not magical</li><li>F: not all public. Blockchain can be public or private. You can encrypt the information, even if you can see, you may can’t understand it.</li><li>?T: Blockchain is going to change the world? Maybe</li><li>F: You need development, guest fees, computing power …</li><li>F:</li><li>F:</li><li>F: not only financial, manifacturing, supply chain …</li><li>T: the technology is relatively mature, but the business may be not ready to use it</li><li>F: it denpends</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;what-is-blockchain-how-it-works&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#what-is-blockchain-how-it-works&quot;&gt;&lt;/a&gt; What is blockchain: How i</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Advanced DM | W1</title>
    <link href="https://artemis727.github.io/2023/11/14/Advanced-DM-W1/"/>
    <id>https://artemis727.github.io/2023/11/14/Advanced-DM-W1/</id>
    <published>2023-11-14T10:17:27.000Z</published>
    <updated>2023-11-14T13:35:24.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="part-1"><a class="markdownIt-Anchor" href="#part-1"></a> Part 1</h1><p><img src="https://p.ipic.vip/0ldnju.png" alt="image-2023111471624281 PM"></p><ul><li>Use multiple kinds of database to obtain the optimal results</li><li>Designing database<ul><li>data limitation: the short lifespan of data</li><li>RW: catering for the requirement of reading and writing data</li><li>data ownership: business fucntion</li><li>legal requirements</li><li>Objective: support business -&gt; people + process + product</li></ul></li></ul><h1 id="part-2"><a class="markdownIt-Anchor" href="#part-2"></a> Part 2</h1><h3 id="sql-structured-query-language"><a class="markdownIt-Anchor" href="#sql-structured-query-language"></a> SQL - Structured Query Language*</h3><ul><li>SQL &amp; Relational Database: based on <strong>rows &amp; columns</strong> -&gt; <strong>table</strong></li></ul><img src="https://p.ipic.vip/argnfc.png" alt="image-2023111474443010 PM" style="zoom:50%;"><ul><li>Who use SQL? <strong>high consistency</strong> requirement</li></ul><h3 id="rdbms-relational-database-management-system"><a class="markdownIt-Anchor" href="#rdbms-relational-database-management-system"></a> RDBMS – Relational Database Management System*</h3><ul><li><p>rely on <strong>normalization</strong> to enhance the efficiency + avoid anomalies</p></li><li><p>ways to handle anomalies: <strong>break</strong> the data into different tables + keys</p></li><li><p>business requires <strong>join</strong></p></li><li><p>This is a trade-off.</p></li><li><p><strong>ACID</strong></p><ul><li>Atomicity: All actions within a transaction must succeed together or fail together.</li><li>Consistency: References and constraints made must be consistent before and after transaction.</li><li>Isolated: Changes of a transaction is not visible to observer until the changes are committed. All transactions are independent from another.</li><li>Durability: Data committed will continue to endure <strong>even after the server has been powered down</strong>.</li></ul></li><li><p>Compare with ACID: <strong>BASE</strong> properities 分布式系统</p><ul><li><strong>Basically Available（基本可用）：</strong> 系统保证基本的可用性，即使在出现故障或者部分故障的情况下，系统仍然能够继续运行。这意味着系统在某些情况下可以牺牲一些功能，但整体上仍然保持可用状态。</li><li><strong>Soft state（软状态）：</strong> 系统中的数据不需要实时一致。在一段时间内，系统的数据可以是不一致的，但最终将会达到一致状态。这使得系统更容易扩展和适应分布式环境中的变化。</li><li><strong>Eventually consistent（最终一致）：</strong> 在一定的时间范围内，系统最终会达到一致的状态。即使系统在某一时刻出现了分区或者故障，最终所有节点都会收敛到一个一致的状态。这不同于强一致性（ACID模型的一部分），在强一致性中，系统要求在任何时刻都保持一致状态。</li></ul></li></ul><h3 id="distributed-database"><a class="markdownIt-Anchor" href="#distributed-database"></a> Distributed Database</h3><ul><li>Master - Slave</li></ul><img src="https://p.ipic.vip/3uqhga.png" alt="image-2023111481242855 PM" style="zoom:50%;"><ul><li>Multi-Master</li></ul><img src="https://p.ipic.vip/itxugj.png" alt="image-2023111481314823 PM" style="zoom:50%;"><ul><li>Sharding</li></ul><img src="https://p.ipic.vip/soylzc.png" alt="image-2023111481629719 PM" style="zoom:50%;"><p>​Go by where the data are generating from: enhance the sharding efficiency</p><ul><li>Brewer’s Theorem</li></ul><img src="https://p.ipic.vip/1s2ar1.png" alt="image-2023111482056007 PM" style="zoom:50%;"><ul><li><p>at most satisfy 2 at a time</p></li><li><p><a class="link" href="https://www.scylladb.com/glossary/distributed-database/">分布式数据库<i class="fas fa-external-link-alt"></i></a>系统在遇到网络故障时可以提供<strong>一致性</strong>或<strong>可用性</strong>。换句话说，如果出现网络故障，这是一致性和可用性之间的权衡，必须提前做出选择。</p><ul><li>CP 数据库提供一致性和分区容错性，但会牺牲可用性。实际结果是，当分区发生时，系统必须使不一致的节点不可用，直到它能够解决分区。MongoDB 和 Redis 是 CP 数据库的示例。</li><li>AP 数据库提供可用性和分区容错性，但在发生故障时不提供一致性。发生分区时，所有节点仍然可用，但有些节点可能会返回旧版本的数据。CouchDB、Cassandra 和 ScyllaDB 是 AP 数据库的示例。<strong>如social media，由于数据体量很大，一些inconsistency是可以被接受的。</strong></li><li>CA 数据库提供一致性和可用性，但如果系统中的任何两个节点之间存在分区，则它无法提供容错能力。显然，这就是CAP 定理和 NoSQL 数据库的冲突之处：根据CAP 定理，没有任何NoSQL 数据库可以归类为 CA。在<a class="link" href="https://www.scylladb.com/glossary/distributed-database/">分布式数据库<i class="fas fa-external-link-alt"></i></a>中，无法避免系统分区。因此，尽管CAP定理表明CA分布式数据库是可能存在的，但目前还没有真正的CA分布式数据库系统。CAP 定理分析的现代目标应该是让系统设计者为特定应用生成一致性和可用性的最佳组合。</li></ul></li><li><p>注意：虽然ACID 和 CAP 定理中的“C”都指的是一致性，但CAP 中的一致性与 ACID 中的一致性不同。在 CAP 中，一致性意味着拥有最新的信息。ACID 中的一致性是指数据库的硬度，尽管添加了新事务并引用了不同的数据库事件，但仍能保护数据库免受损坏。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;part-1&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#part-1&quot;&gt;&lt;/a&gt; Part 1&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/0ldnju.png&quot; alt=&quot;image-20231114</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
    <category term="Database" scheme="https://artemis727.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Advanced Programming | L1 Principles of Algorithm Design</title>
    <link href="https://artemis727.github.io/2023/11/09/Advanced-Programming-L1-Principles-of-Algorithm-Design/"/>
    <id>https://artemis727.github.io/2023/11/09/Advanced-Programming-L1-Principles-of-Algorithm-Design/</id>
    <published>2023-11-09T09:14:46.000Z</published>
    <updated>2023-11-18T01:32:41.867Z</updated>
    
    <content type="html"><![CDATA[<h1 id="principles-of-algorithm-design"><a class="markdownIt-Anchor" href="#principles-of-algorithm-design"></a> Principles of Algorithm Design</h1><blockquote><p>-Benjamin Baka, Python Data Structure and Algorithms, May 2017, Packt Publishing, ISBN: 9781786467355</p><p>-Chapter 3, Principles of Algorithm Design, covers how we can build additional structures with specific capabilities using the existing Python data structures. In general, the data structures we create need to conform to a number of principles. These principles include robustness, adaptability, reusability, and separating the structure from a function. We look at the role iteration plays and introduce recursive data structures.</p></blockquote><p>In summary, there are four broad reasons for studying algorithms:</p><ol><li>They are essential for computer science and <em>intelligent</em> systems.</li><li>They are important in many other domains (computational biology, economics, ecology, communications, ecology, physics, and so on).</li><li>They play a role in technology innovation.</li><li>They improve problem solving and <strong>analytical thinking</strong>.</li></ol><p>Essentially, we can say that algorithms are composed of the following four elements:</p><ul><li>Sequential operations</li><li>Actions based on the state of a data structure</li><li>Iteration, repeating an action a number of times</li><li>Recursion, calling itself on a subset of inputs</li></ul><h2 id="algorithm-design-paradigms"><a class="markdownIt-Anchor" href="#algorithm-design-paradigms"></a> Algorithm design paradigms</h2><p>In general, we can discern three broad approaches to algorithm design. They are:</p><ul><li>Divide and conquer</li><li>Greedy algorithms</li><li>Dynamic programming</li></ul><h2 id="recursion-and-backtracking"><a class="markdownIt-Anchor" href="#recursion-and-backtracking"></a> Recursion and backtracking</h2><p>At the core of a recursive function are two types of cases: <strong>base cases</strong>, which tell the recursion when to terminate, and <strong>recursive cases</strong> that call the function they are in.</p><p>A simple problem that naturally lends itself to a recursive solution is calculating factorials. The recursive factorial algorithm defines two cases: the base case when <em>n</em> is zero, and the recursive case when <em>n</em> is greater than zero.</p><p>On each recursion, a copy of the methods variables is stored in memory. Once the method returns it is removed from memory.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">factorial</span>(<span class="params">n</span>):</span><br><span class="line">        <span class="comment">#test for a base case</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            <span class="comment"># make a calculation and a recursive call</span></span><br><span class="line">            f= n*factorial(n-<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(f)</span><br><span class="line">        <span class="keyword">return</span>(f)</span><br><span class="line">        factorial(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/d1bd50ca-3e83-49e9-b6d2-45fb45f1f41d.png" alt="img"></p><table><thead><tr><th><strong>Recursion</strong></th><th><strong>Iteration</strong></th></tr></thead><tbody><tr><td>Terminates when a <strong>base case</strong> is reached</td><td>Terminates when a <strong>defined condition</strong> is met</td></tr><tr><td>Each recursive call requires <strong>space in memory</strong></td><td>Each iteration is <strong>not</strong> stored in memory</td></tr><tr><td>An infinite recursion results in a <strong>stack overflow error</strong></td><td>An infinite iteration will <strong>run</strong> while the hardware is powered</td></tr><tr><td>Some problems are <strong>naturally</strong> better suited to recursive solutions</td><td>Iterative solutions may not always be obvious</td></tr></tbody></table><p>This creates a trade off between processor cycles and memory usage.</p><h3 id="backtracking"><a class="markdownIt-Anchor" href="#backtracking"></a> Backtracking</h3><ul><li><p>Backtracking is a form of <strong>recursion</strong> that is particularly useful for types of problems such as traversing tree structures, where we are presented with a number of options at each node, from which we must choose one.</p></li><li><p>Subsequently we are presented with a different set of options, and depending on the series of choices made either <strong>a goal state</strong> or <strong>a dead end</strong> is reached. If it is the latter, we must backtrack to a previous node and traverse a different branch.</p></li><li><p>Backtracking is a <strong>divide and conquer method</strong> for <strong>exhaustive search</strong>.</p></li><li><p>Importantly backtracking <strong>prunes</strong> branches that cannot give a result.</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bitStr</span>(<span class="params">n, s</span>):            </span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> n == <span class="number">1</span>: <span class="keyword">return</span> s </span><br><span class="line">         <span class="keyword">return</span> [ digit + bits <span class="keyword">for</span> digit <span class="keyword">in</span> bitStr(<span class="number">1</span>,s)<span class="keyword">for</span> bits <span class="keyword">in</span> bitStr(n - <span class="number">1</span>,s)] </span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> (bitStr(<span class="number">3</span>,<span class="string">'abc'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/639c1ffc-7591-4a28-a7f9-1f60d160551b.png" alt="img"></p><p>It is <em>backtracking</em> to uncover previously ingenerated combinations. The final string that is returned is all <em>n</em> letter combinations of the initial string.</p><h3 id="divide-and-conquer-long-multiplication"><a class="markdownIt-Anchor" href="#divide-and-conquer-long-multiplication"></a> Divide and conquer - long multiplication</h3><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/7088cd68-c359-4e0f-acbc-a23aa137cd19.png" alt="img" style="zoom:50%;"><h3 id="can-we-do-better-a-recursive-approach"><a class="markdownIt-Anchor" href="#can-we-do-better-a-recursive-approach"></a> Can we do better? A recursive approach</h3><p><strong>Karatsuba algorithm</strong></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup><mi>a</mi><mo>+</mo><mi>b</mi><mspace linebreak="newline"></mspace><mi>y</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup><mi>c</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding="application/x-tex"> x = 10^ma + b \\ y = 10^mc + d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup><mi>c</mi><mo>+</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup><mi>a</mi><mi>c</mi><mo>+</mo><mn>1</mn><msup><mn>0</mn><mrow><mn>2</mn><mi>m</mi></mrow></msup><mo stretchy="false">(</mo><mi>a</mi><mi>d</mi><mo>+</mo><mi>b</mi><mi>c</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mi>d</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mrow><mn>2</mn><mi>m</mi></mrow></msup><msub><mi>z</mi><mn>2</mn></msub><mo>+</mo><mi>q</mi><msup><mi>o</mi><mi>m</mi></msup><msub><mi>z</mi><mn>1</mn></msub><mo>+</mo><msub><mi>z</mi><mn>0</mn></msub><mspace linebreak="newline"></mspace><msub><mi>z</mi><mn>2</mn></msub><mo>=</mo><mi>a</mi><mi>c</mi><mo separator="true">;</mo><msub><mi>z</mi><mn>1</mn></msub><mo>=</mo><mi>a</mi><mi>d</mi><mo>+</mo><mi>b</mi><mi>c</mi><mo separator="true">;</mo><msub><mi>z</mi><mn>0</mn></msub><mo>=</mo><mi>b</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">xy = (10^ma+b)(10^mc+d) = 10^mac+10^{2m}(ad+bc)+bd = 10^{2m}z_2+qo^mz_1+z_0 \\z_2 = ac; z_1 = ad+bc; z_0 = bd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">d</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log10  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">karatsuba</span>(<span class="params">x,y</span>): </span><br><span class="line"></span><br><span class="line">        <span class="comment"># The base case for recursion </span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">10</span> <span class="keyword">or</span> y &lt; <span class="number">10</span>: </span><br><span class="line">            <span class="keyword">return</span> x*y     </span><br><span class="line"></span><br><span class="line">        <span class="comment">#sets n, the number of digits in the highest input number </span></span><br><span class="line">        n = <span class="built_in">max</span>(<span class="built_in">int</span>(log10(x)+<span class="number">1</span>), <span class="built_in">int</span>(log10(y)+<span class="number">1</span>)) </span><br><span class="line"></span><br><span class="line">        <span class="comment"># rounds up n/2     </span></span><br><span class="line">        n_2 = <span class="built_in">int</span>(math.ceil(n / <span class="number">2.0</span>)) </span><br><span class="line">        <span class="comment">#adds 1 if n is uneven </span></span><br><span class="line">        n = n <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> n + <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">        <span class="comment">#splits the input numbers      </span></span><br><span class="line">        a, b = <span class="built_in">divmod</span>(x, <span class="number">10</span>**n_2) </span><br><span class="line">        c, d = <span class="built_in">divmod</span>(y, <span class="number">10</span>**n_2) </span><br><span class="line"></span><br><span class="line">        <span class="comment">#applies the three recursive steps </span></span><br><span class="line">        ac = karatsuba(a,c) </span><br><span class="line">        bd = karatsuba(b,d) </span><br><span class="line">        ad_bc = karatsuba((a+b),(c+d)) - ac - bd </span><br><span class="line"></span><br><span class="line">        <span class="comment">#performs the multiplication     </span></span><br><span class="line">        <span class="keyword">return</span> (((<span class="number">10</span>**n)*ac) + bd + ((<span class="number">10</span>**n_2)*(ad_bc))) </span><br></pre></td></tr></table></figure><p>test:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(): </span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>): </span><br><span class="line">                x = random.randint(<span class="number">1</span>,<span class="number">10</span>**<span class="number">5</span>) </span><br><span class="line">                y = random.randint(<span class="number">1</span>,<span class="number">10</span>**<span class="number">5</span>) </span><br><span class="line">                expected = x * y </span><br><span class="line">                result = karatsuba(x, y) </span><br><span class="line">                <span class="keyword">if</span> result != expected: </span><br><span class="line">                    <span class="keyword">return</span>(<span class="string">"failed"</span>)                 </span><br><span class="line">            <span class="keyword">return</span>(<span class="string">'ok'</span>)   </span><br></pre></td></tr></table></figure><h2 id="runtime-analysis"><a class="markdownIt-Anchor" href="#runtime-analysis"></a> Runtime Analysis</h2><ul><li><p>Runtime performance -&gt; the time (dependent on hardware) -&gt; the number of operations involved -&gt; the size of the input increases the runtime will increase in a specific way (a mathematical relationship)</p></li><li><p>One sentense summarize: <strong>The absolute time values will differ between hardware (and software) platforms; however, their relative growth will still be bound by the time complexity of the algorithm.</strong></p></li><li><p>3 guiding peinciples</p><ul><li><strong>Worst</strong> case analysis. Make no assumptions on the input data.</li><li>Ignore or suppress constant factors and lower order terms. At large inputs <strong>higher order</strong> terms dominate.</li><li>Focus on problems with <strong>large input sizes</strong>.</li></ul></li></ul><h3 id="merge-sort"><a class="markdownIt-Anchor" href="#merge-sort"></a> Merge sort</h3><ul><li>recursive, divede and conquer</li><li>3 steps:<ol><li>Recursively sort the left half of the input array.</li><li>Recursively sort the right half of the input array.</li><li>Merge two sorted sub arrays into one.</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mergeSort</span>(<span class="params">A</span>): </span><br><span class="line">        <span class="comment">#base case if the input array is one or zero just return. </span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(A) &gt; <span class="number">1</span>: </span><br><span class="line">            <span class="comment"># splitting input array </span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'splitting '</span>, A ) </span><br><span class="line">            mid = <span class="built_in">len</span>(A)//<span class="number">2</span> </span><br><span class="line">            left = A[:mid] </span><br><span class="line">            right = A[mid:] </span><br><span class="line">            <span class="comment">#recursive calls to mergeSort for left and right sub arrays                 </span></span><br><span class="line">            mergeSort(left) </span><br><span class="line">            mergeSort(right) </span><br><span class="line">            <span class="comment">#initalizes pointers for left (i) right (j) and output array (k)  </span></span><br><span class="line">    <span class="comment"># 3 initalization operations </span></span><br><span class="line">            i = j = k = <span class="number">0</span>         </span><br><span class="line">            <span class="comment">#Traverse and merges the sorted arrays </span></span><br><span class="line">            <span class="keyword">while</span> i &lt;<span class="built_in">len</span>(left) <span class="keyword">and</span> j&lt;<span class="built_in">len</span>(right): </span><br><span class="line">    <span class="comment"># if left &lt; right comparison operation  </span></span><br><span class="line">                <span class="keyword">if</span> left[i] &lt; right[j]: </span><br><span class="line">    <span class="comment"># if left &lt; right Assignment operation </span></span><br><span class="line">                    A[k]=left[i] </span><br><span class="line">                    i=i+<span class="number">1</span> </span><br><span class="line">                <span class="keyword">else</span>: </span><br><span class="line">    <span class="comment">#if right &lt;= left assignment </span></span><br><span class="line">                    A[k]= right[j] </span><br><span class="line">                    j=j+<span class="number">1</span> </span><br><span class="line">                k=k+<span class="number">1</span> </span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> i&lt;<span class="built_in">len</span>(left): </span><br><span class="line">    <span class="comment">#Assignment operation </span></span><br><span class="line">                A[k]=left[i] </span><br><span class="line">                i=i+<span class="number">1</span> </span><br><span class="line">                k=k+<span class="number">1</span> </span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> j&lt;<span class="built_in">len</span>(right): </span><br><span class="line">    <span class="comment">#Assignment operation </span></span><br><span class="line">                A[k]=right[j] </span><br><span class="line">                j=j+<span class="number">1</span> </span><br><span class="line">                k=k+<span class="number">1</span> </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'merging '</span>, A) </span><br><span class="line">        <span class="keyword">return</span>(A)   </span><br></pre></td></tr></table></figure><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/d7e152e2-6e1c-4e1d-ba5a-947dd8863784.png" alt="img" style="zoom:50%;"><p>We will use the letter <em>m</em> or specifically <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">m_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> for the length of the input at recursive level <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>.</p><p>The number of recursive levels is exactly the number of times you need to divide <em>n</em> by 2 until you get a number that is at most 1. This is precisely the definition of log2. Since we are counting the initial recursive call as level 0, the total number of levels is log2<em>n</em> + 1.</p><ul><li>It is important to measure and compare the performance of algorithms in a platform independent way.</li><li>The actual run time will of course be dependent on the hardware on which it is run.</li><li>Counting the number of operations is important because it gives us a metric that is directly related to an algorithm’s performance, independent of the platform.</li></ul><p>For maerge sorting:</p><p>For level <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> , where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> is an integer <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">0, 1, 2 ... \log_{2}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span></span>, there are two <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> sub problems each of size <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>n</mi><msup><mn>2</mn><mi>j</mi></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{n}{2^j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857144em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</p><p>Time complexity: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">nlog_2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span></p><h3 id="asymptotic-analysis"><a class="markdownIt-Anchor" href="#asymptotic-analysis"></a> Asymptotic analysis</h3><p>3 things that characterize an algorithm’s runtime performance:</p><ul><li>Worst case - Use an input that gives the slowest performance</li><li>Best case - Use an input that give, the best results</li><li>Average case - Assumes the input is <strong>random</strong></li></ul><p>Notations: Big O notation, Omega notation, Theta notation.</p><ul><li>Big O -&gt; upper bound</li><li>Omega -&gt; tight lower bound</li><li>Theta -&gt; upper bound and lower bound of a given function are the same</li></ul><h3 id="big-o-notation"><a class="markdownIt-Anchor" href="#big-o-notation"></a> Big O notation</h3><p>One fucntion <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> is a big O of anoher function, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</p><p><img src="https://p.ipic.vip/ejr3xc.png" alt="image-2023111374904028 AM"></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>C</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n) \leq C(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li><li>The rate of growth is not important when it is less than <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(n) \leq T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>.</li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>500</mn><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>C</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>n</mi><mn>0</mn></msub><mtext>  </mtext><mi>i</mi><mi>s</mi><mtext>  </mtext><mi>a</mi><mi>p</mi><mi>p</mi><mi>r</mi><mi>o</mi><mi>x</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>l</mi><mi>y</mi><mtext>  </mtext><mn>23.</mn></mrow><annotation encoding="application/x-tex">T(n) = n^2 + 500 = O(n^2), C = 2, n_0 \; is \; approximately\; 23.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mord">.</span></span></span></span></p><img src="https://p.ipic.vip/i0xjfq.png" alt="image-2023111374849625 AM" style="zoom:75%;"><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n) = O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> is a set of functions that include all functions whose growth rate <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>. Eg. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> includes <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">O(n), O(nlogn), ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></li></ul><h3 id="time-complexity-of-a-function-the-complexity-class-of-a-function"><a class="markdownIt-Anchor" href="#time-complexity-of-a-function-the-complexity-class-of-a-function"></a> Time complexity of a function/ the complexity class of a function:</h3><p>(low -&gt; high)</p><table><thead><tr><th><strong>Complexity Class</strong></th><th><strong>Name</strong></th><th><strong>Example operations</strong></th></tr></thead><tbody><tr><td>O(1)</td><td>Constant</td><td>append, get item, set item.</td></tr><tr><td>O(log<em>n</em>)</td><td>Logarithmic</td><td>Finding an element in a sorted array.</td></tr><tr><td>O(n)</td><td>Linear</td><td>copy, insert, delete, iteration.</td></tr><tr><td><em>n</em>Log<em>n</em></td><td>Linear-Logarithmic</td><td>Sort a list, merge - sort.</td></tr><tr><td><em>n2</em></td><td>Quadratic</td><td>Find the shortest path between two nodes in a graph. Nested loops.</td></tr><tr><td><em>n3</em></td><td>Cubic</td><td>Matrix multiplication.</td></tr><tr><td>2<em>n</em></td><td>Exponential</td><td>‘Towers of Hanoi’ problem, backtracking.</td></tr></tbody></table><h3 id="composing-complexity-classes"><a class="markdownIt-Anchor" href="#composing-complexity-classes"></a> Composing complexity classes</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span> </span><br><span class="line"> <span class="keyword">while</span> i &lt;= n: </span><br><span class="line">     i=i * <span class="number">2</span> </span><br><span class="line">     <span class="built_in">print</span>(i) </span><br></pre></td></tr></table></figure><p>total time = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><h3 id="omega-notation-ω"><a class="markdownIt-Anchor" href="#omega-notation-ω"></a> Omega notation (Ω)</h3><p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/6f354046-1cf0-4761-aec2-c4cd1e00e274.png" alt="img"></p><h3 id="theta-notation-θ"><a class="markdownIt-Anchor" href="#theta-notation-θ"></a> Theta notation (ϴ)</h3><p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/55c54f4d-6055-4c55-93d5-4911ec2abe2f.png" alt="img"></p><h2 id="amortized-analysis"><a class="markdownIt-Anchor" href="#amortized-analysis"></a> Amortized analysis</h2><p>2 common approaches to algorithm analysis:</p><ul><li><strong>Average case analysis</strong>: finds the average running time based on some assumptions regarding the relative <strong>frequencies</strong> of various input values. Use <strong>real-world data</strong>, or <strong>data that replicates the distribution of real-world data</strong>.</li><li><strong>Bechmarking</strong>: having an <strong>agreed</strong> set of typical inputs that are used to measure performance.</li></ul><p>Both benchmarking and average time analysis rely on having some <strong>domain knowledge</strong>.</p><p>Test the running time and plot:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">nest</span>(<span class="params">n</span>): </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n): </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n): </span><br><span class="line">            i+j </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeit  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test2</span>(<span class="params">n</span>): </span><br><span class="line">    ls=[] </span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(n): </span><br><span class="line">        t=timeit.timeit(<span class="string">"nest("</span> + <span class="built_in">str</span>(n) +<span class="string">")"</span>, setup=<span class="string">"from __main__ import nest"</span>, number = <span class="number">1</span>) </span><br><span class="line">        ls.append(t) </span><br><span class="line">    <span class="keyword">return</span> ls   </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line">n=<span class="number">1000</span> </span><br><span class="line">plt.plot(test2(n)) </span><br><span class="line">plt.plot([x*x/<span class="number">10000000</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(n)]) </span><br></pre></td></tr></table></figure><p><img src="https://learning.oreilly.com/api/v2/epubs/urn:orm:book:9781786467355/files/assets/16afb869-f99a-44cd-bb25-3310a7931012.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;principles-of-algorithm-design&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#principles-of-algorithm-design&quot;&gt;&lt;/a&gt; Principles of Algorithm Des</summary>
      
    
    
    
    <category term="BA" scheme="https://artemis727.github.io/categories/BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Discrete Optimization | Constraint Programming</title>
    <link href="https://artemis727.github.io/2023/11/06/Discrete-Optimization-Constraint-Programming/"/>
    <id>https://artemis727.github.io/2023/11/06/Discrete-Optimization-Constraint-Programming/</id>
    <published>2023-11-06T07:12:25.000Z</published>
    <updated>2023-11-13T06:52:05.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="intuition-computational-paradigm-map-coloring-n-queens"><a class="markdownIt-Anchor" href="#intuition-computational-paradigm-map-coloring-n-queens"></a> Intuition, computational paradigm, map coloring, n-queens</h1><ul><li><strong>Computational paradigm:</strong><ul><li><strong><u>Reduce the search space</u>. Use constraint to prune as much as possible.</strong></li><li><strong>Make a decision when <u>no more deduction</u> can be performed.</strong></li></ul></li><li>Medeling methodology: <strong>model the problem to the highest level</strong></li><li>What is a choice?<ul><li>There are many choices.</li><li>Assume a choice assigns a value to variable.</li></ul></li><li>Choices can be wrong<ul><li>The solver then backtracks, i.e. it tries another value.</li></ul></li></ul><h2 id="coloring-a-map"><a class="markdownIt-Anchor" href="#coloring-a-map"></a> Coloring a Map</h2><h3 id="split-a-question"><a class="markdownIt-Anchor" href="#split-a-question"></a> Split a question</h3><ol><li><strong>How</strong> to color this map with constraint programming?<ul><li>choose the <u>decision variables</u></li><li>express the <u>constraints</u> in terms of the decision variables</li></ul></li><li>What are the <strong>decision variables</strong>? (usually not unique)<ul><li>the <u>color</u> given to each country</li></ul></li><li>What are <strong>the domains of the decision variables</strong>?<ul><li>the domains is <u>the set of values that a variable can take</u></li><li>4 different colors</li></ul></li><li><strong>How</strong> to <strong>express</strong> <strong>the constraints</strong>?<ul><li>Specify that 2 adjacent countries cannot be given the same color</li></ul></li></ol><img src="https://p.ipic.vip/re8pra.png" alt="image-2023110642006245 PM" style="zoom:50%;"><h2 id="computational-paradigm"><a class="markdownIt-Anchor" href="#computational-paradigm"></a> Computational paradigm</h2><ul><li><p>Branch and prune</p><ul><li><p>pruning: use constraints to reduce the search space as much as possible</p></li><li><p>branching: decomposing the problem into subproblems and explore the subproblems</p></li></ul></li><li><p><strong>Important Notes!</strong></p><ul><li><strong>Complete</strong> method, not a heuristic<ul><li>given enough time, it will find a solution to a satisfaction problem</li><li>given enough time, it will find an <strong>optimal solution</strong> to an optimization problem</li><li>the computing time will grow <strong>exponentially</strong> with the increasing question scale</li></ul></li><li>Focus on <strong>feasibility</strong><ul><li>how to use constraints to prune the search space by eliminating values that cannot belong to any solution</li></ul></li></ul></li><li><p>Goal (constraint) = feasibility checking + pruning</p></li><li><p>The propagation engine</p><img src="https://p.ipic.vip/vws8vw.png" alt="image-2023110643438448 PM" style="zoom:50%;"></li></ul><h2 id="the-8-queens-problem"><a class="markdownIt-Anchor" href="#the-8-queens-problem"></a> The 8-Queens Problem</h2><ul><li>decision variables -&gt; a column has a value</li><li>constrains -&gt; one row/column/disgonal only has one</li></ul><img src="https://p.ipic.vip/eelmux.png" alt="image-2023110643754078 PM" style="zoom:50%;"><img src="https://p.ipic.vip/dfh4s7.png" alt="image-2023110644513819 PM" style="zoom:50%;"><h1 id="propagation-arithmetic-constraints-sendmoremoney"><a class="markdownIt-Anchor" href="#propagation-arithmetic-constraints-sendmoremoney"></a> Propagation, arithmetic constraints, send+more=money</h1><img src="https://p.ipic.vip/fkkk1a.png" alt="image-2023110675720183 PM" style="zoom:50%;"><h3 id="linear-constraints-over-integers"><a class="markdownIt-Anchor" href="#linear-constraints-over-integers"></a> Linear Constraints over Integers</h3><ul><li><p>Consider a constraint</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>≥</mo><msub><mi>b</mi><mn>1</mn></msub><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>b</mi><mi>m</mi></msub><msub><mi>y</mi><mi>m</mi></msub><mspace linebreak="newline"></mspace><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo>≥</mo><mn>0</mn><mtext>  </mtext><mi>a</mi><mi>r</mi><mi>e</mi><mtext>  </mtext><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>s</mi><mspace linebreak="newline"></mspace><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mtext>  </mtext><mi>a</mi><mi>r</mi><mi>e</mi><mtext>  </mtext><mi>v</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>s</mi><mtext>  </mtext><mi>w</mi><mi>i</mi><mi>t</mi><mi>h</mi><mtext>  </mtext><mi>d</mi><mi>o</mi><mi>m</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>s</mi><mtext>  </mtext><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_1x_1+...+a_nx_n \geq b_1y_1+...+b_my_m \\a_i, b_j \geq 0 \; are \; constraints \\x_i, y_j \; are \; variables \; with \; domains \; D(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></li><li><p>Feasibility test</p></li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≥</mo><msub><mi>b</mi><mn>1</mn></msub><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>b</mi><mi>m</mi></msub><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_1max(D(x_1))+...+a_nmax(D(x_n)) \geq b_1min(D(y_1)) + ... + b_mmin(D(y_m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>r</mi><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>b</mi><mi>m</mi></msub><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l=a_1max(D(x_1))+...+a_nmax(D(x_n)) \\r=b_1min(D(y_1)) + ... + b_mmin(D(y_m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><ul><li><p>Pruning</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>≥</mo><mi>r</mi><mo>−</mo><mo stretchy="false">(</mo><mi>l</mi><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_ix_i \geq r-(l-a_imax(D(x_i)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>≥</mo><mo stretchy="false">[</mo><mfrac><mrow><mi>r</mi><mo>−</mo><mo stretchy="false">(</mo><mi>l</mi><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><msub><mi>a</mi><mi>i</mi></msub></mfrac><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><msub><mi>y</mi><mi>j</mi></msub><mo>≤</mo><mo stretchy="false">[</mo><mfrac><mrow><mi>l</mi><mo>−</mo><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><msub><mi>b</mi><mi>j</mi></msub><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><mi>b</mi><mi>j</mi></mrow></mfrac><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x_i \geq [\frac{r-(l-a_imax(D(x_i)))}{a_i}] \\y_j \leq [\frac{l-(r-b_jmin(D(y_j)))}{bj}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mopen">[</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mopen">[</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span></span></span></p></li></ul><h1 id="refication-element-constraint-magic-series-stable-marriage"><a class="markdownIt-Anchor" href="#refication-element-constraint-magic-series-stable-marriage"></a> Refication, element constraint, magic series, stable marriage</h1><h3 id="magic-series"><a class="markdownIt-Anchor" href="#magic-series"></a> Magic Series</h3><img src="https://p.ipic.vip/j3d622.png" alt="image-20231107104748581 PM" style="zoom:50%;"><img src="https://p.ipic.vip/7z2ppw.png" alt="image-20231107104947699 PM" style="zoom:50%;"><img src="https://p.ipic.vip/gy2mx8.png" alt="image-20231107105128792 PM" style="zoom:50%;"><img src="https://p.ipic.vip/cul6c5.png" alt="image-20231107105322087 PM" style="zoom:50%;"><h3 id="stable-marriages"><a class="markdownIt-Anchor" href="#stable-marriages"></a> Stable Marriages</h3><h3 id="the-basic-element-constraints"><a class="markdownIt-Anchor" href="#the-basic-element-constraints"></a> The Basic Element Constraints</h3><h1 id="global-constraint-intuition-table-constraint-sudoku"><a class="markdownIt-Anchor" href="#global-constraint-intuition-table-constraint-sudoku"></a> Global constraint intuition, table constraint, sudoku</h1><h2 id="global-constraints"><a class="markdownIt-Anchor" href="#global-constraints"></a> Global constraints</h2><p>eg. alldifferent(x1, …, xn)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span> R = <span class="number">1</span>, ... <span class="number">8</span>;</span><br><span class="line">var{<span class="built_in">int</span>} row[R] <span class="keyword">in</span> R;</span><br><span class="line">solve {</span><br><span class="line">  forall (i <span class="keyword">in</span> R, j <span class="keyword">in</span> R, i &lt; j) {</span><br><span class="line">    row[i] != row[j];</span><br><span class="line">    row[i] + i != row[j] + j;</span><br><span class="line">    row[i] - i != row[j] - j;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span> R = <span class="number">1</span>, ... <span class="number">8</span>;</span><br><span class="line">var{<span class="built_in">int</span>} row[R] <span class="keyword">in</span> R;</span><br><span class="line">solve {</span><br><span class="line">  alldifferent(row);</span><br><span class="line">  alldifferent(<span class="built_in">all</span>(i <span class="keyword">in</span> R) row[i]+i);</span><br><span class="line">  alldifferent(<span class="built_in">all</span>(i <span class="keyword">in</span> R) row[i]-i);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>Global constraints make it possible to discover infeasibility earlier.</p><p>Global constraints make it possible to prune the search space more.</p><h2 id="sudoku"><a class="markdownIt-Anchor" href="#sudoku"></a> Sudoku</h2><h2 id="table-constraint"><a class="markdownIt-Anchor" href="#table-constraint"></a> Table Constraint</h2><ul><li>the simplest global constraint</li></ul><h2 id="finding-optimal-solutions"><a class="markdownIt-Anchor" href="#finding-optimal-solutions"></a> Finding optimal solutions</h2><ul><li>focus on constraint programming: feasibility</li><li>how to optimize?<ul><li>solve a sequence of satisfaction problems</li><li>find a solution</li><li>impose a constraint that the next solution must be better (minimize the num of color -&gt; 3 is better than 4)</li></ul></li><li>guaranteed to find an optimal solution<ul><li>at least theoretically</li><li>strong when the new constraint reduced the search space<ul><li>scheduling problems are good examples</li></ul></li></ul></li></ul><h1 id="symmetry-breaking-bibd-scene-allocation"><a class="markdownIt-Anchor" href="#symmetry-breaking-bibd-scene-allocation"></a> Symmetry breaking, BIBD, scene allocation</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;intuition-computational-paradigm-map-coloring-n-queens&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#intuition-computational-paradigm-map-col</summary>
      
    
    
    
    <category term="Algorithm" scheme="https://artemis727.github.io/categories/Algorithm/"/>
    
    
    <category term="optimization" scheme="https://artemis727.github.io/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>Discrete Optimization | The Knapsack Problem</title>
    <link href="https://artemis727.github.io/2023/11/04/Discrete-Optimization-The-Knapsack-Problem/"/>
    <id>https://artemis727.github.io/2023/11/04/Discrete-Optimization-The-Knapsack-Problem/</id>
    <published>2023-11-04T08:50:42.000Z</published>
    <updated>2023-11-06T07:11:42.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="the-knapsack-problem"><a class="markdownIt-Anchor" href="#the-knapsack-problem"></a> The Knapsack Problem</h1><h2 id="greedy-algorithm-heuristics"><a class="markdownIt-Anchor" href="#greedy-algorithm-heuristics"></a> Greedy Algorithm / heuristics</h2><blockquote><p>“Take the most valuable item first.”</p></blockquote><ul><li>Key Idea: Build a solution bu picking items one at a time.</li><li>Different Ideas<ul><li>Idea 1: <strong>More</strong> items is best, start with small ones and take as many as you can.</li><li>Idea 2: <strong>Valuable</strong> items are best, start with the most valuable items.</li><li>Idea 3: <strong>Value density</strong>! dollars per kilogram</li></ul></li><li>=&gt; Improve the answer based on the above.</li><li>Overview<ul><li>For one problem, there are many possible greedy algorithms.<ul><li>some will do better than others</li><li>depends on the input!</li></ul></li><li><strong>Advantages</strong><ul><li>quick to design and implement</li><li>can be very fast</li></ul></li><li><strong>Problems</strong><ul><li>no quality guarantees (in general)</li><li>quality can vary widely on the input</li><li>peoblem feasibility needs to be ‘easy’</li></ul></li></ul></li><li>Essence<ul><li>We can always start with greedy.</li><li>Going beyond greedy, find out the improve space<ul><li>Constraint Programming</li><li>Local Search</li><li>Mixed Integar Programming</li></ul></li></ul></li><li>Ways to<ul><li>reliably find feasible solutions</li><li>reliably build high-quality solutions<ul><li>robust to different inputs</li></ul></li><li>ideally, proving those solutions are the best</li></ul></li></ul><h2 id="modeling"><a class="markdownIt-Anchor" href="#modeling"></a> Modeling</h2><h3 id="how-to-formalize-an-optimization-task-as-a-mathematical-model"><a class="markdownIt-Anchor" href="#how-to-formalize-an-optimization-task-as-a-mathematical-model"></a> How to formalize an optimization task as a mathematical model</h3><p>Given a set of Items <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>, each item <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">i \in I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> characterized by</p><ul><li>its weight <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>its value <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p>and</p><ul><li>a capacity <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> for a knapsack</li></ul><p>find the subset of items in <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></p><ul><li>that has maximum value</li><li>does not exceed the capacity <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> of the knapsack</li></ul><h3 id="how-to-model-an-optimization-peoblem"><a class="markdownIt-Anchor" href="#how-to-model-an-optimization-peoblem"></a> <strong>How to model an optimization peoblem</strong></h3><ol><li><strong>decision variables</strong> -&gt; encode the result</li><li><strong>problem constraints</strong> in terms of those decision variables -&gt; specify the solutions of the problems</li><li><strong>objective function</strong> -&gt; specify the quality of each problem</li></ol><h3 id="the-result-is-an-optimization-model"><a class="markdownIt-Anchor" href="#the-result-is-an-optimization-model"></a> The result is an optimization model</h3><ul><li><p>decalrative formulation -&gt; ‘what’, not ‘how’</p></li><li><p>many ways, many models</p></li></ul><h3 id="a-knapsack-model"><a class="markdownIt-Anchor" href="#a-knapsack-model"></a> A knapsack Model</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow></munder><msub><mi>v</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mspace width="1em"></mspace><mi>t</mi><mi>o</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi><mspace linebreak="newline"></mspace><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow><mspace width="1em"></mspace><mo stretchy="false">(</mo><mi>i</mi><mo>∈</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">maximize \sum_{i \in I}v_ix_i \\subject\quad to \sum_{i \in I}w_ix_i \leq K \\x_i \in {0,1} \quad (i\in I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></span></p><p>Expomential growth</p><ul><li>How many possible configurations?</li><li>Not all of them are feasible.</li><li>How many are they? <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi mathvariant="normal">∣</mi><mi>I</mi><mi mathvariant="normal">∣</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{|I|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mtight">∣</span></span></span></span></span></span></span></span></span></span></span></span></li><li>How much time to explore them all? more than <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">10^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> centuries</li></ul><h2 id="dynamic-programming"><a class="markdownIt-Anchor" href="#dynamic-programming"></a> Dynamic Programming</h2><p>Basic principle:</p><ul><li>divide and conquer</li><li><strong>bottom up</strong> computation</li></ul><hr><ul><li><p>Basic conventions and notations</p><ul><li><p>assume that <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>=</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I = \{1,2, ... , n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> denotes the optimal solution to the knapsack problem with capacity k and items [1, …, j]</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow></munder><msub><mi>v</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mspace width="1em"></mspace><mi>t</mi><mi>o</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi><mspace linebreak="newline"></mspace><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow><mspace width="1em"></mspace><mo stretchy="false">(</mo><mi>i</mi><mo>∈</mo><mn>1..</mn><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">maximize \sum_{i \in I}v_ix_i \\subject\quad to \sum_{i \in I}w_ix_i \leq K \\x_i \in {0,1} \quad (i\in 1..j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.3717110000000003em;vertical-align:-1.321706em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span></p></li></ul></li><li><p>We are interested in finding out the best balue <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>K</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(K,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li></ul><h3 id="recurrence-relations-bellman-equations"><a class="markdownIt-Anchor" href="#recurrence-relations-bellman-equations"></a> Recurrence Relations (Bellman Equations)</h3><ol><li>We know how to solve <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k,j-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> in <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0...</mn><mi>K</mi></mrow><annotation encoding="application/x-tex">0 ... K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>.</li><li>We only consider one more item <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> to solve <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></li><li>In summary,</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>v</mi><mi>i</mi></msub><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><msub><mi>w</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace width="1em"></mspace><mi>i</mi><mi>f</mi><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>≤</mo><mi>k</mi><mspace linebreak="newline"></mspace><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace width="1em"></mspace><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">O(k,j)=max(O(k,j-1), v_i+O(k-w_j, j-1)) \quad if \; w_j \leq k \\O(k,j) = O(k,j-1) \quad otherwise</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span></span></p><ol start="4"><li>Of course,</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace width="1em"></mspace><mi>f</mi><mi>o</mi><mi>r</mi><mtext>  </mtext><mi>a</mi><mi>l</mi><mi>l</mi><mtext>  </mtext><mi>k</mi></mrow><annotation encoding="application/x-tex">O(k,0) = 0 \quad for \; all \; k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">O</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> j)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (wj &lt;= k)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">O</span>(k,j<span class="number">-1</span>), vj+<span class="built_in">O</span>(k-wj,j<span class="number">-1</span>));</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">O</span>(k,j<span class="number">-1</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="relaxation-branch-and-bound"><a class="markdownIt-Anchor" href="#relaxation-branch-and-bound"></a> Relaxation, branch and bound</h2><ul><li>Iterative 2 steps<ul><li>branching: split the problem to subproblems</li><li>bounding: find an optimistic estimate of the best solution to the subproblems<ul><li>maximization: upper bound</li><li>minimization: lower bound</li></ul></li></ul></li></ul><hr><h3 id="linear-relaxition"><a class="markdownIt-Anchor" href="#linear-relaxition"></a> Linear Relaxition</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>e</mi><mi>t</mi><mtext>  </mtext><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mfrac><msub><mi>y</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub></mfrac><mspace linebreak="newline"></mspace><mi>m</mi><mi>a</mi><mi>x</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mn>1..</mn><mi>j</mi></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext>  </mtext><mi>t</mi><mi>o</mi><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mn>1..</mn><mi>j</mi></mrow></munder><mfrac><msub><mi>w</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub></mfrac><msub><mi>y</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi><mspace linebreak="newline"></mspace><mn>0</mn><mo>≤</mo><msub><mi>y</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><mtext>  </mtext><mo stretchy="false">(</mo><mi>i</mi><mo>∈</mo><mn>1..</mn><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">let \; x_i = \frac{y_i}{v_i} \\maximize \sum_{i \in 1..j}y_i \\subject \; to \sum_{i \in 1..j} \frac {w_i} {v_i}y_i \leq K \\0 \leq y_i \leq 1 \; (i \in 1..j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.521337em;vertical-align:-1.413777em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span></p><h2 id="depth-first-branch-and-bound"><a class="markdownIt-Anchor" href="#depth-first-branch-and-bound"></a> Depth-first Branch and Bound</h2><p><img src="https://p.ipic.vip/quhk8c.png" alt="image-20231105125136895 PM"></p><h2 id="search-srategies-depth-first-best-first-least-discrepancy"><a class="markdownIt-Anchor" href="#search-srategies-depth-first-best-first-least-discrepancy"></a> Search srategies: depth first, best first, least discrepancy</h2><h3 id="depth-first"><a class="markdownIt-Anchor" href="#depth-first"></a> Depth-first</h3><ul><li>Key idea -&gt; go deep</li><li>When prune? -&gt; the new evaluation (ideal estimation) is lower than the found solution</li><li>How memory efficient?<ul><li>Method: exaggerate, imagine infinate nodes</li><li>Very memory-efficient</li></ul></li></ul><h3 id="best-frist-branch-and-bound"><a class="markdownIt-Anchor" href="#best-frist-branch-and-bound"></a> Best-Frist Branch and Bound</h3><p><img src="https://p.ipic.vip/jnnmqe.png" alt="image-2023110511748193 PM"></p><ul><li>Key idea -&gt; go for the best</li><li>When prune? -&gt; when all the node are worse than a found solution</li><li>How memory efficient? -&gt; It’s likely to have the optimal situation (the least nodes), but also the disaster (the entire tree).</li></ul><h3 id="limited-discrepancy-search"><a class="markdownIt-Anchor" href="#limited-discrepancy-search"></a> Limited Discrepancy Search</h3><p><img src="https://p.ipic.vip/6ivne8.png" alt="image-2023110512653845 PM"></p><ul><li>Key idea -&gt; trust the greedy heuristic</li><li>When prune? -&gt; like best-first</li><li>How memory efficient? -&gt; When you have a good heuristic, it would be a good method.</li></ul><h3 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h3><p>Make a trade-off between relaxition and search.</p><h2 id="assignment"><a class="markdownIt-Anchor" href="#assignment"></a> Assignment</h2><p><img src="https://p.ipic.vip/5l4dqr.png" alt="image-2023110515630463 PM"></p><h2 id="exploring-the-material"><a class="markdownIt-Anchor" href="#exploring-the-material"></a> Exploring the Material</h2><ul><li>Constraint Programming (CP)</li><li>Local Search (LS)</li><li>Mixed Integer Programming (MIP)</li></ul><img src="https://p.ipic.vip/3ji5gl.png" alt="image-2023110625449416 PM" style="zoom:50%;"><ul><li><p>Quality-baesd: DP, CP, MIP</p></li><li><p>Scalability-based: LS</p></li><li><p>局部搜索（LS）虽然不能保证结果的最优性，但是在问题规模巨大的情况下，它是一个很好的选择。动态规划（DP）、约束规划（CP）、混合整数规划（MIP）在问题规模较小的情况下，能够保证结果的最优性，但却不适合大规模问题的求解。</p><p>作者：alue<br>链接：<a class="link" href="https://www.jianshu.com/p/6d4b7cc92894">https://www.jianshu.com/p/6d4b7cc92894<i class="fas fa-external-link-alt"></i></a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;the-knapsack-problem&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#the-knapsack-problem&quot;&gt;&lt;/a&gt; The Knapsack Problem&lt;/h1&gt;
&lt;h2 id=&quot;greedy-algori</summary>
      
    
    
    
    <category term="Algorithm" scheme="https://artemis727.github.io/categories/Algorithm/"/>
    
    
    <category term="optimization" scheme="https://artemis727.github.io/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>R｜Bootstrap</title>
    <link href="https://artemis727.github.io/2023/09/26/R%EF%BD%9CBootstrap/"/>
    <id>https://artemis727.github.io/2023/09/26/R%EF%BD%9CBootstrap/</id>
    <published>2023-09-26T01:10:08.000Z</published>
    <updated>2023-11-05T04:52:25.308Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>boot<span class="punctuation">)</span></span><br><span class="line">set.seed<span class="punctuation">(</span><span class="number">2014</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Bootstrap the mean</span></span><br><span class="line">samplemean <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>data<span class="punctuation">,</span> indices<span class="punctuation">)</span> <span class="punctuation">{</span></span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>mean<span class="punctuation">(</span>data<span class="punctuation">[</span>indices<span class="punctuation">]</span><span class="punctuation">,</span> na.rm <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line">boot.Baseline <span class="operator">&lt;-</span> boot<span class="punctuation">(</span>data<span class="operator">=</span>data1<span class="operator">$</span>Baseline<span class="punctuation">,</span> statistic<span class="operator">=</span>samplemean<span class="punctuation">,</span> R<span class="operator">=</span><span class="number">10000</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># view results of bootstrap</span></span><br><span class="line">boot.Baseline</span><br><span class="line">plot<span class="punctuation">(</span>boot.Baseline<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://p.ipic.vip/lc6795.png" alt="image-20231105125202451 PM"></p><p>这是一个针对 <code>data1$Baseline</code> 的非参数性Bootstrap（自助法）分析的结果。</p><ul><li><strong>原始样本均值</strong>（original sample mean）：样本的平均值为 328.8。</li><li><strong>偏差（Bias）</strong>：Bootstrap 样本均值相对于原始样本均值的偏差，这里为 -0.18591。偏差是一种测量估计量的系统误差的方式，如果估计量是无偏的，那么偏差会接近零。</li><li><strong>标准误差（Standard Error）</strong>：Bootstrap 样本均值的标准差，这里为 17.68664。它是对估计值的不确定性的度量，标准误差越大，表示估计值的不确定性越高。</li></ul><p>这些结果反映了通过 Bootstrap 方法估计得到的样本均值的性质和不确定性。 Bootstrap 是一种用于估计统计量的方法，通过从原始样本中重复抽取样本并计算统计量，以获取该统计量的抽样分布及其性质。这对于在没有明确分布假设的情况下进行推断非常有用。</p><p><img src="https://p.ipic.vip/61b79v.png" alt="image-20231105125211427 PM"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 95% BCA confidence interval from Bootstrap of Mean</span></span><br><span class="line">bci <span class="operator">&lt;-</span> boot.ci<span class="punctuation">(</span>boot.Baseline<span class="punctuation">,</span> type<span class="operator">=</span><span class="string">"bca"</span><span class="punctuation">,</span> conf <span class="operator">=</span> <span class="number">0.95</span><span class="punctuation">)</span></span><br><span class="line">table1<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> mean<span class="punctuation">(</span>boot.Baseline<span class="operator">$</span>t<span class="punctuation">)</span> <span class="comment"># avg of the bootstrap samples</span></span><br><span class="line">table1<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> paste<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span>bci<span class="operator">$</span>bca<span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="string">' to '</span><span class="punctuation">,</span> <span class="built_in">round</span><span class="punctuation">(</span>bci<span class="operator">$</span>bca<span class="punctuation">[</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://p.ipic.vip/gnp6r7.png" alt="image-20231105125220700 PM"></p><ul><li>[Judge] Bootstrap can be used to genreate a trainset and another bootstrap can be used to generate a testset.<ul><li><strong>No</strong>! The trainset and the test set should not be duplicated, they should be different.</li></ul></li><li>[Judge] Bootstrap can be used to train a model that could predict Y.<ul><li><strong>True</strong>. Random forest uses bootstrap to generate a model that can predict Y.</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="R" scheme="https://artemis727.github.io/categories/R/"/>
    
    
  </entry>
  
  <entry>
    <title>R｜计算置信区间</title>
    <link href="https://artemis727.github.io/2023/09/26/R%EF%BD%9C%E8%AE%A1%E7%AE%97%E7%BD%AE%E4%BF%A1%E5%8C%BA%E9%97%B4/"/>
    <id>https://artemis727.github.io/2023/09/26/R%EF%BD%9C%E8%AE%A1%E7%AE%97%E7%BD%AE%E4%BF%A1%E5%8C%BA%E9%97%B4/</id>
    <published>2023-09-26T01:04:31.000Z</published>
    <updated>2023-11-05T03:33:08.757Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Code: 003-S8-BootStrap</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">df <span class="operator">=</span> <span class="built_in">length</span><span class="punctuation">(</span>data1<span class="operator">$</span>Baseline<span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 计算置信区间的边界</span></span><br><span class="line"><span class="comment"># qchisq(p, df, lower.tail = F)是卡方分布的分位数函数，</span></span><br><span class="line"><span class="comment"># 用于计算给定自由度df和概率p的分位数</span></span><br><span class="line"><span class="comment"># 在它的右尾部分布中有95%的概率（因为0.05/2是置信水平的一半）</span></span><br><span class="line">lower <span class="operator">=</span> var<span class="punctuation">(</span>data1<span class="operator">$</span>Baseline<span class="punctuation">)</span> <span class="operator">*</span> df <span class="operator">/</span> qchisq<span class="punctuation">(</span><span class="number">0.05</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">,</span> df<span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">upper <span class="operator">=</span> var<span class="punctuation">(</span>data1<span class="operator">$</span>Baseline<span class="punctuation">)</span> <span class="operator">*</span> df <span class="operator">/</span> qchisq<span class="punctuation">(</span><span class="number">1</span> <span class="operator">-</span> <span class="number">0.05</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">,</span> df<span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">table1<span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> paste<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">sqrt</span><span class="punctuation">(</span>lower<span class="punctuation">)</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="string">' to '</span><span class="punctuation">,</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">sqrt</span><span class="punctuation">(</span>upper<span class="punctuation">)</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">df <span class="operator">=</span> <span class="built_in">length</span><span class="punctuation">(</span>data1<span class="operator">$</span>Year1<span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span></span><br><span class="line">lower <span class="operator">=</span> var<span class="punctuation">(</span>data1<span class="operator">$</span>Year1<span class="punctuation">)</span> <span class="operator">*</span> df <span class="operator">/</span> qchisq<span class="punctuation">(</span><span class="number">0.05</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">,</span> df<span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">upper <span class="operator">=</span> var<span class="punctuation">(</span>data1<span class="operator">$</span>Year1<span class="punctuation">)</span> <span class="operator">*</span> df <span class="operator">/</span> qchisq<span class="punctuation">(</span><span class="number">1</span> <span class="operator">-</span> <span class="number">0.05</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">,</span> df<span class="punctuation">,</span> lower.tail <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">table1<span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> paste<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">sqrt</span><span class="punctuation">(</span>lower<span class="punctuation">)</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="string">' to '</span><span class="punctuation">,</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="built_in">sqrt</span><span class="punctuation">(</span>upper<span class="punctuation">)</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">remove<span class="punctuation">(</span><span class="built_in">list</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">'df'</span><span class="punctuation">,</span> <span class="string">'lower'</span><span class="punctuation">,</span> <span class="string">'upper'</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>下限（Lower Limit）和上限（Upper Limit）的计算公式是基于方差的置信区间计算。在这里，它们使用了卡方分布的性质。</p><p>给定一个样本方差 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>)，自由度 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">df</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>)，以及置信水平 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1 - α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>)，下限和上限的计算公式如下：</p>下限（Lower Limit）：<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.982ex;" xmlns="http://www.w3.org/2000/svg" width="20.781ex" height="6.475ex" role="img" focusable="false" viewBox="0 -1543.9 9185 2862"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="4C" d="M128 622Q121 629 117 631T101 634T58 637H25V683H36Q48 680 182 680Q324 680 348 683H360V637H333Q273 637 258 635T233 622L232 342V129Q232 57 237 52Q243 47 313 47Q384 47 410 53Q470 70 498 110T536 221Q536 226 537 238T540 261T542 272T562 273H582V268Q580 265 568 137T554 5V0H25V46H58Q100 47 109 49T128 61V622Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(625,0)"></path><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z" transform="translate(1125,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1847,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2291,0)"></path></g><g data-mml-node="mo" transform="translate(2960.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4016.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(220,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3322.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msup" transform="translate(3822.9,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1173.3,-784.5)"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D712" d="M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z"></path></g><g data-mml-node="mn" transform="translate(659,353.6) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(659,-356.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(640,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(1140,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1640,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1918,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2438,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></g><rect width="4928.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>上限（Upper Limit）：<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.982ex;" xmlns="http://www.w3.org/2000/svg" width="20.814ex" height="6.475ex" role="img" focusable="false" viewBox="0 -1543.9 9200 2862"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="55" d="M128 622Q121 629 117 631T101 634T58 637H25V683H36Q57 680 180 680Q315 680 324 683H335V637H302Q262 636 251 634T233 622L232 418V291Q232 189 240 145T280 67Q325 24 389 24Q454 24 506 64T571 183Q575 206 575 410V598Q569 608 565 613T541 627T489 637H472V683H481Q496 680 598 680T715 683H724V637H707Q634 633 622 598L621 399Q620 194 617 180Q617 179 615 171Q595 83 531 31T389 -22Q304 -22 226 33T130 192Q129 201 128 412V622Z"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(750,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1306,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1862,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2306,0)"></path></g><g data-mml-node="mo" transform="translate(2975.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4031.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(220,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3322.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msup" transform="translate(3822.9,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(721.5,-784.5)"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D712" d="M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z"></path></g><g data-mml-node="mn" transform="translate(659,353.6) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(659,-356.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1278,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1918,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2418,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(2918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3196,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(3716,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></g><rect width="4928.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><p>其中：</p><ul><li>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>) 是样本的大小（或者自由度 (df) 加 1）。</li><li>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>) 是样本方差。</li><li>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>χ</mi><mrow><mi>α</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>d</mi><mi>f</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\chi^2_{\alpha/2, df}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3111079999999997em;vertical-align:-0.49699999999999994em;"></span><span class="mord"><span class="mord mathnormal">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.378em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span></span></span></span>) 是卡方分布的上侧 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1 - \alpha/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">/</span><span class="mord">2</span></span></span></span>) 的分位数，它可以用卡方分布的分位数函数 <code>qchisq</code> 来计算。</li></ul><p>这些公式基于卡方分布和自由度的性质，用于构建一个给定置信水平下的方差估计的置信区间。它们表达了我们对总体方差的估计值的不确定性范围。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Code: 003-S8-BootStrap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="R" scheme="https://artemis727.github.io/categories/R/"/>
    
    
    <category term="统计" scheme="https://artemis727.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>WHAT IS PRESCRIPTIVE ANALYTICS? 6 EXAMPLES</title>
    <link href="https://artemis727.github.io/2023/09/25/WHAT-IS-PRESCRIPTIVE-ANALYTICS-6-EXAMPLES/"/>
    <id>https://artemis727.github.io/2023/09/25/WHAT-IS-PRESCRIPTIVE-ANALYTICS-6-EXAMPLES/</id>
    <published>2023-09-25T08:46:35.000Z</published>
    <updated>2023-11-05T04:52:53.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="what-is-prescriptive-analytics-6-examples"><a class="markdownIt-Anchor" href="#what-is-prescriptive-analytics-6-examples"></a> WHAT IS PRESCRIPTIVE ANALYTICS? 6 EXAMPLES</h1><blockquote><p><a class="link" href="https://online.hbs.edu/blog/post/prescriptive-analytics">https://online.hbs.edu/blog/post/prescriptive-analytics<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>规范性分析被<a class="link" href="https://www.forbes.com/sites/danielnewman/2020/01/02/why-the-future-of-data-analytics-is-prescriptive-analytics/">称为<i class="fas fa-external-link-alt"></i></a>“数据分析的未来”，这是有充分理由的。这种类型的分析超越了解释和预测，可以推荐未来的最佳行动方案。它对于推动基于数据的决策特别有用。</p><p><a class="link" href="https://online.hbs.edu/blog/post/types-of-data-analysis">数据分析<i class="fas fa-external-link-alt"></i></a>有四种主要类型：</p><ul><li><strong><a class="link" href="https://online.hbs.edu/blog/post/descriptive-analytics">描述性的<i class="fas fa-external-link-alt"></i></a></strong>，回答“发生了什么？”的问题。</li><li><strong><a class="link" href="https://online.hbs.edu/blog/post/diagnostic-analytics">Diagnostic<i class="fas fa-external-link-alt"></i></a></strong>，它回答了“为什么会发生这种情况？”的问题。</li><li><a href="https://online.hbs.edu/blog/post/predictive-analytics"><strong>Predictive</strong></a>，它回答了“未来可能发生什么？”的问题。</li><li><strong>规范性</strong>，回答“我们下一步应该做什么？”的问题。</li></ul><p>在商业中使用时，数据分析通常称为<a class="link" href="https://online.hbs.edu/courses/business-analytics/">业务分析<i class="fas fa-external-link-alt"></i></a>。所有四种类型都可以串联使用，以创建数据讲述的故事的全貌。您可以首先描述您看到的趋势，深入挖掘以了解这些趋势发生的原因，并对这些趋势是否会再次出现做出明智的预测。规范性分析使事情更进一步，并提出您可以采取的行动来实现组织目标。</p><p>以下是规范性分析的入门知识以及跨行业使用它的六个示例。</p><h2 id="什么是规范性分析"><a class="markdownIt-Anchor" href="#什么是规范性分析"></a> 什么是规范性分析？</h2><p><strong>规范性分析</strong>是使用数据来确定最佳行动方案的过程。通过考虑所有相关因素，此类分析可以为后续步骤提供建议。因此，规范性分析是<a class="link" href="https://online.hbs.edu/blog/post/data-driven-decision-making">数据驱动决策<i class="fas fa-external-link-alt"></i></a>的宝贵工具。</p><p>机器学习算法通常用于规范性分析，以比人类更快且通常更有效地解析大量数据。使用“if”和“else”语句，算法梳理数据并根据特定的需求组合提出建议。例如，如果数据集中至少 50% 的客户选择他们对您的客户服务团队“非常不满意”，则算法可能会建议进行额外的培训。</p><p>值得注意的是：虽然算法可以提供基于数据的建议，但它们无法取代人类的洞察力。规范性分析是一种为决策和战略提供信息的工具，应该被如此对待。您的判断对于为算法输出提供上下文和护栏来说是有价值且必要的。</p><p>在您的公司，您可以使用规范分析来进行手动分析、开发专有算法或使用具有内置算法的第三方分析工具。</p><h2 id="规范性分析的-6-个实际应用示例"><a class="markdownIt-Anchor" href="#规范性分析的-6-个实际应用示例"></a> 规范性分析的 6 个实际应用示例</h2><p><img src="https://p.ipic.vip/ln65ng.png" alt="image-20231105125243420 PM"></p><h3 id="1-风险投资投资决策"><a class="markdownIt-Anchor" href="#1-风险投资投资决策"></a> 1. 风险投资：投资决策</h3><p>投资决策虽然通常基于直觉，但可以通过权衡风险并建议是否投资的算法来加强。</p><p>风险投资领域的一个例子是一项实验（《<a href="https://hbr.org/2020/11/do-algorithms-make-better-and-fairer-investments-than-angel-investors"><em>哈佛商业评论》</em></a>对此进行了解释），该实验测试了算法关于投资哪些初创企业的决策与天使投资者决策的有效性。</p><p>研究结果很微妙。该算法的表现优于天使投资人，因为天使投资人投资经验较少，控制认知偏差的能力也较差；然而，当天使投资者有投资经验并且能够控制自己的认知偏差时，他们的表现就会优于算法。</p><p>该实验揭示了规范性分析在决策中必须发挥的补充作用，以及在经验不存在且认知偏差需要消除时帮助决策的潜力。算法的公正性取决于其训练所用的数据，因此无论是否使用算法都需要人类判断。</p><h3 id="2-销售销售线索评分"><a class="markdownIt-Anchor" href="#2-销售销售线索评分"></a> 2. 销售：销售线索评分</h3><p>规范性分析通过潜在客户评分（也称为潜在客户排名）在销售中发挥着重要作用。<strong>潜在客户评分</strong>是为销售漏斗中的各种操作分配分值的过程，使您或算法能够根据潜在客户转化为客户的可能性对潜在客户进行排名。</p><p>您可以指定值的操作包括：</p><ul><li>页面浏览量</li><li>电子邮件互动</li><li>网站搜索</li><li>内容参与，例如参加网络研讨会、下载电子书或观看视频</li></ul><p>为每个操作分配分值时，请将最高分分配给暗示购买意图的操作（例如，访问产品页面），将负分分配给那些显示非购买意图的操作（例如，查看网站上的职位发布） ）。这有助于优先联系最有可能转化为客户的潜在客户，从而可能节省您的组织的时间和金钱。</p><h3 id="3-内容管理算法推荐"><a class="markdownIt-Anchor" href="#3-内容管理算法推荐"></a> 3. 内容管理：算法推荐</h3><p>如果您曾经浏览过社交媒体平台或约会应用程序，您可能已经通过算法内容推荐亲身体验过规范性分析。</p><p>企业的算法根据您在其平台（也可能是其他平台）上的参与历史记录来收集数据。您之前的行为组合可以作为算法的触发器来发布特定的建议。例如，如果您经常在 YouTube 上观看鞋履评论视频，该平台的算法可能会分析该数据，并建议您观看更多您可能感兴趣的相同类型的视频或类似内容。</p><p>在社交媒体上，TikTok 的“For You”提要就是规范性分析的实际应用之一。该<a class="link" href="https://www.tiktok.com/creators/creator-portal/en-us/tiktok-creation-essentials/whats-the-for-you-page-and-how-do-i-get-there/">公司的网站<i class="fas fa-external-link-alt"></i></a>解释说，用户在应用程序上的互动，就像销售中的潜在客户评分一样，是根据兴趣指示进行加权的。</p><p>“例如，”TikTok 的网站称，“如果你看完了一个视频，那就强烈表明你感兴趣。然后对视频进行排名，以确定您对每个视频感兴趣的可能性，并将其发送到每个独特的“为您”提要。”</p><p>这种规范性分析用例可以提高客户参与率、提高客户满意度，并有可能根据客户的行为历史通过广告重新定位客户。</p><h3 id="4-银行业欺诈检测"><a class="markdownIt-Anchor" href="#4-银行业欺诈检测"></a> 4. 银行业：欺诈检测</h3><p>规范分析的另一个算法用途是检测和标记银行欺诈。由于银行系统中存储的数据量巨大，人们几乎不可能手动检测单个帐户中的任何可疑活动。使用客户的历史交易数据进行训练的算法可以分析和扫描新交易数据是否存在异常。例如，也许您通常每月花费 3,000 美元，但本月您的信用卡会被扣款 30,000 美元。</p><p>该算法分析交易数据中的模式，向银行发出警报，并提供建议的行动方案。在此示例中，行动过程可能是取消信用卡，因为它可能已被盗。</p><h3 id="5-产品管理开发和改进"><a class="markdownIt-Anchor" href="#5-产品管理开发和改进"></a> 5. 产品管理：开发和改进</h3><p>规范性分析还可以为产品开发和改进提供信息。产品经理可以通过调查客户、使用产品的测试版本运行测试、对非当前产品用户进行市场研究以及收集当前用户交互时的行为数据来收集用户数据。所有这些数据都可以通过手动或算法进行分析，以识别趋势、发现这些趋势的原因，并预测这些趋势是否会再次出现。</p><p>规范性分析可以帮助确定产品中应包含或删除哪些功能以及需要更改哪些功能以确保最佳的用户体验。</p><h3 id="6-营销电子邮件自动化"><a class="markdownIt-Anchor" href="#6-营销电子邮件自动化"></a> 6. 营销：电子邮件自动化</h3><p>电子邮件自动化是规范性分析在工作中的一个明确示例。营销人员使用电子邮件自动化根据销售线索的动机、心态和意图将其分类，并根据这些类别向他们发送电子邮件内容。潜在客户与电子邮件的任何互动都可以将其归入另一个类别，从而触发一组不同的消息。</p><p>虽然这是纯粹的算法规范分析，但人们应该规划、创建和监督自动化流程。电子邮件自动化使公司能够大规模提供个性化消息传递，并增加使用适合客户动机和需求的内容将潜在客户转化为客户的机会。</p><h2 id="在您的组织中利用规范性分析"><a class="markdownIt-Anchor" href="#在您的组织中利用规范性分析"></a> 在您的组织中利用规范性分析</h2><p>如果您的组织是规范性分析的新手，那么现在正是了解它如何影响您的决策流程的最佳时机。从您需要回答的一个问题或您想要优化的一个流程开始。收集围绕该问题或流程的数据，并通过每种类型的分析来描绘全貌。</p><ol><li>**描述性：**数据显示了哪些趋势？</li><li>**诊断：**哪些因素导致了这些趋势？为什么会出现这些趋势？</li><li>**规定性：**如果适用，请确定某种趋势是否会持续或重复出现。</li><li>**规范性：**最后，深入规范性分析。如果您有专有算法或第三方分析工具，请使用您公司的数据运行它。或者，根据您对问题或流程的发现，对可能的后续步骤进行手动分析。每个选项将如何影响情况的结果以及您的目标？</li></ol><p>规范性分析不必令人望而生畏；有了正确的基础，它可以成为帮助优化流程、制定战略和实现组织目标的强大工具。</p><p>处方分析模型是一种高级分析方法，其重点在于提供具体的建议或行动，以优化决策过程。处方分析模型是用于生成这些建议的数学或计算框架，它考虑了许多因素，包括历史数据、当前条件、限制条件和业务目标。</p><h2 id="处方分析模型包括以下几个关键组成部分"><a class="markdownIt-Anchor" href="#处方分析模型包括以下几个关键组成部分"></a> ！处方分析模型包括以下几个关键组成部分：</h2><ol><li><p><strong>目标函数</strong>：定义了组织试图实现的目标，例如最大化利润、最小化成本、优化资源分配或实现特定的业务目标等。</p></li><li><p><strong>约束条件</strong>：这些是在做出决策时必须遵守的限制或规定。约束条件可能包括预算限制、资源可用性、法规法规等实际考量因素。</p></li><li><p><strong>决策变量</strong>：这些是模型可以调整的参数，以达到最佳解决方案。例如，在供应链优化中，决策变量可能包括生产水平、库存水平和运输路线等。</p></li><li><p><strong>数据输入</strong>：模型需要相关数据来做出明智的决策。这可能是历史数据、实时数据源、市场趋势或其他相关信息。</p></li><li><p><strong>预测模型</strong>：处方分析通常依赖于预测模型来预测未来情景。这些模型使用历史数据来对未来事件或结果进行预测。</p></li><li><p><strong>优化算法</strong>：这些是用于在给定目标函数、约束条件和决策变量的情况下找到最佳解决方案的数学技术。优化算法的复杂程度各不相同，选择算法取决于具体的问题。</p></li><li><p><strong>灵敏度分析</strong>：它允许模型了解输入参数或约束条件的变化如何影响推荐的行动。这有助于评估建议的鲁棒性。</p></li><li><p><strong>用户界面或集成</strong>：模型生成的建议需要以对决策者有用的方式呈现出来。这可以通过用户界面、软件应用程序或与现有业务系统的集成来实现。</p></li></ol><p>处方分析模型在许多行业和场景中得到应用。例如，它们可以用于供应链优化、金融投资组合管理、医疗治疗规划、营销活动优化等许多需要做出最佳决策的领域。</p><p>总的来说，处方分析模型是组织希望在复杂和动态的环境中做出基于数据的优化决策的强大工具。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;what-is-prescriptive-analytics-6-examples&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#what-is-prescriptive-analytics-6-examples&quot;&gt;&lt;/a&gt; WHAT </summary>
      
    
    
    
    <category term="Research" scheme="https://artemis727.github.io/categories/Research/"/>
    
    
  </entry>
  
  <entry>
    <title>Research | &quot;Data Driven Decision-Making under Uncertainty (D3U)&quot;</title>
    <link href="https://artemis727.github.io/2023/09/22/Research-Data-Driven-Decision-Making-under-Uncertainty-D3U/"/>
    <id>https://artemis727.github.io/2023/09/22/Research-Data-Driven-Decision-Making-under-Uncertainty-D3U/</id>
    <published>2023-09-22T04:40:42.000Z</published>
    <updated>2023-09-25T08:51:56.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="data-driven-decision-making-under-uncertainty-d3u"><a class="markdownIt-Anchor" href="#data-driven-decision-making-under-uncertainty-d3u"></a> "Data Driven Decision-Making under Uncertainty (D3U)”</h1><blockquote><p>Data-driven decision making under uncertainty (<strong>D3U</strong>) practically means <strong>extracting data and information, including from Big Data, to make decisions in areas such as emergency response and healthcare to renewable energy</strong>. D3U is driven by the advancements afforded through Industry 4.0 worldwide, and the power of hardware handling offered through Cloud and Fog computing and the like. In times of adverse situations, such as the COVID-19 pandemic, crucial issues such as predictive bed allocation, predicting the spread and the stages of the pandemic and so on, have made D3U an inevitable part of life. It is also thus becoming an ardent necessity to deal with challenges such as uncertainty, vagueness, and hesitation in order to <strong>come up with rational decisions</strong>.</p><p>不确定性下的数据驱动决策（D3U）实际上意味着提取数据和信息（包括从大数据中），以便在应急响应和可再生能源医疗保健等领域做出决策。D3U 受到全球工业 4.0 带来的进步以及云和雾计算等提供的硬件处理能力的推动。在COVID-19大流行等不利情况下，预测床位分配、预测大流行的传播和阶段等关键问题使D3U成为生活中不可避免的一部分。因此，为了做出理性的决策，应对不确定性、模糊性和犹豫等挑战也变得非常必要。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;data-driven-decision-making-under-uncertainty-d3u&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#data-driven-decision-making-under-uncertainty</summary>
      
    
    
    
    <category term="Research" scheme="https://artemis727.github.io/categories/Research/"/>
    
    
  </entry>
  
  <entry>
    <title>CART | Errors in CART</title>
    <link href="https://artemis727.github.io/2023/09/18/CART-Errors-in-CART/"/>
    <id>https://artemis727.github.io/2023/09/18/CART-Errors-in-CART/</id>
    <published>2023-09-18T05:41:18.000Z</published>
    <updated>2023-09-18T05:41:50.837Z</updated>
    
    <content type="html"><![CDATA[<p>CART全称是Classification and Regression Trees。</p><h1 id="trainset-error-和-cv-error"><a class="markdownIt-Anchor" href="#trainset-error-和-cv-error"></a> “Trainset error” 和 “CV error”</h1><p>对于 CART（Classification and Regression Trees）算法，“Trainset error” 和 “CV error” 分别代表了两种不同的误差度量：</p><ol><li><p><strong>Trainset Error（训练集误差）</strong>：</p><p>这是在构建决策树时使用训练数据集来评估模型的误差。具体来说，它是指模型在训练数据集上的预测误差或者拟合不准确度。训练集误差通常是通过将模型对训练数据集的预测与实际观测值进行比较来计算的。</p><p><strong>训练集误差的一个问题是它可能会过于乐观地估计了模型的性能，因为模型在训练数据上进行了拟合。这可能导致模型在未见过的新数据上的性能表现不佳。</strong></p></li><li><p><strong>Cross-Validation Error（交叉验证误差）</strong>：</p><p>**为了更准确地评估模型的性能，**通常会将数据分成训练集和测试集两部分。交叉验证（Cross-Validation）是一种常用的方法，它将数据分成多个折（folds），然后分别使用其中一个折作为测试集，其余折作为训练集来训练模型。这样可以多次进行模型训练和评估，从而得到一个更稳健的性能估计。</p><p>CV error 是在交叉验证中得到的，它表示模型在不同的测试集上的平均预测误差。通常，通过计算多次交叉验证的结果的平均值来得到最终的 CV error。</p></li></ol><p>总的来说，Trainset Error 是在训练数据上的误差，它可能会过于乐观地估计模型的性能；而 CV error 则是通过在多次独立的测试集上进行交叉验证得到的，它提供了对模型在未见过的数据上性能的更稳健的估计。 CV error 通常被认为是对模型性能的更可靠的评估。</p><h1 id="解释一个cp-table"><a class="markdownIt-Anchor" href="#解释一个cp-table"></a> 解释一个CP table</h1><p>一个 CART（Classification and Regression Trees）模型的 <code>cp table</code> 包含了与树的复杂度参数（通常用 α 表示）相关的信息。CART 模型会根据训练数据构建一棵树，但这棵树可能会过于复杂，导致在训练数据上表现很好，但在未见过的数据上表现较差（过拟合）。</p><p><code>cp table</code> 提供了一种帮助找到适当树大小的方法。其中 <code>cp</code> 代表复杂度参数，它可以理解为控制树的复杂程度的一个调节参数。</p><p><code>cp table</code> 通常包括以下列：</p><ol><li><p><strong><code>CP</code>（复杂度参数）</strong>：</p><ul><li>这列列出了不同的复杂度参数值。它们是一个递减的有序序列，从最大的复杂度开始，逐渐减小。</li></ul></li><li><p><strong><code>rel error</code>（相对误差）</strong>：</p><ul><li>这列列出了在给定复杂度参数下，与完全展开的树相比，模型的相对误差。<strong>相对误差是模型的预测误差与完全展开树的预测误差之比。</strong></li></ul></li><li><p><strong><code>xerror</code>（交叉验证误差）</strong>：</p><ul><li>这列列出了在给定复杂度参数下，通过<strong>交叉验证</strong>得到的模型的平均预测误差。</li></ul></li><li><p><strong><code>xstd</code>（交叉验证误差的标准差）</strong>：</p><ul><li>这列列出了在给定复杂度参数下，通过交叉验证得到的模型的平均预测误差的<strong>标准差</strong>。</li></ul></li></ol><p>解释一个 <code>cp table</code> 的过程通常包括以下步骤：</p><ol><li><p><strong>选择最小的 <code>CP</code> 值</strong>：通常会选择具有最小相对误差或交叉验证误差的复杂度参数作为最终模型的复杂度参数。</p></li><li><p><strong>对比相对误差和交叉验证误差</strong>：相对误差提供了一种在训练集上进行模型评估的方法，而交叉验证误差提供了对模型在未见过数据上的性能的估计。</p></li><li><p><strong>考虑模型的解释性和复杂度</strong>：选择一个合适的复杂度参数需要在模型的性能和复杂度之间进行权衡。更复杂的模型可能在训练数据上表现得更好，但可能在新数据上表现较差。</p></li></ol><p>总的来说，<code>cp table</code> 提供了一个帮助找到合适树大小的指南，以避免过拟合和提高模型的泛化能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CART全称是Classification and Regression Trees。&lt;/p&gt;
&lt;h1 id=&quot;trainset-error-和-cv-error&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#trainset-error-和-c</summary>
      
    
    
    
    
    <category term="算法" scheme="https://artemis727.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>NLP｜命名实体识别</title>
    <link href="https://artemis727.github.io/2023/03/21/NLP%EF%BD%9C%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB/"/>
    <id>https://artemis727.github.io/2023/03/21/NLP%EF%BD%9C%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB/</id>
    <published>2023-03-21T06:24:54.000Z</published>
    <updated>2023-03-21T09:56:00.896Z</updated>
    
    <content type="html"><![CDATA[<p>中文命名实体识别（Named Entity Recognition，简称NER）标注中常用的标签如下。每个标签都表示一种命名实体类型。</p><ul><li>O（大写字母O）表示该词不是命名实体，即other。</li><li>S 表示该词是单独成一个实体。</li><li>B 表示该词是一个实体的开头。</li><li>I 表示该词是一个实体的中间部分。</li><li>E 表示该词是一个实体的结束部分。</li></ul><p>Nh、Ni、Ns 等则表示命名实体的具体类别，如人名、机构名、地名等。</p><p><code>ntag[-2:]</code> 表示将 <code>ntag</code> 字符串的最后两个字符截取出来作为新的字符串，因为在这个代码段中，实体标记（entity tag）总是由一个标记类型和一个 B、I、E 或 S 等指示词组成的，如 <code>B-Nh</code> 表示一个人名实体的开头，而 <code>I-Nh</code> 表示人名实体的中间部分，<code>E-Nh</code> 表示人名实体的结尾部分，<code>S-Nh</code> 表示独立成词的人名实体。由此可知，实体标记的类型总是在字符串的最后两个字符中，因此这个代码中使用 <code>[-2:]</code> 来取出实体标记类型。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;中文命名实体识别（Named Entity Recognition，简称NER）标注中常用的标签如下。每个标签都表示一种命名实体类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;O（大写字母O）表示该词不是命名实体，即other。&lt;/li&gt;
&lt;li&gt;S 表示该词是单独成一个实体。&lt;/li&gt;</summary>
      
    
    
    
    
    <category term="NLP" scheme="https://artemis727.github.io/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记｜《外婆的道歉信》</title>
    <link href="https://artemis727.github.io/2023/03/21/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BD%9C%E3%80%8A%E5%A4%96%E5%A9%86%E7%9A%84%E9%81%93%E6%AD%89%E4%BF%A1%E3%80%8B/"/>
    <id>https://artemis727.github.io/2023/03/21/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BD%9C%E3%80%8A%E5%A4%96%E5%A9%86%E7%9A%84%E9%81%93%E6%AD%89%E4%BF%A1%E3%80%8B/</id>
    <published>2023-03-21T06:24:54.000Z</published>
    <updated>2023-03-22T14:00:32.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外婆的道歉信"><a class="markdownIt-Anchor" href="#外婆的道歉信"></a> 外婆的道歉信</h1><p>## [瑞典🇸🇪]弗雷德里克·巴克曼</p><p>不是所有怪物一开始都是怪物。有些因为悲伤才变成了怪物。</p><hr><p>“暑期工”警察和抬着担架的护士跑到离车只有几米远时，妈妈慢慢地点了点头。然后，她发动了起亚，轮胎在雪地中转动，一路打着滑上了路，绝尘而去。这是艾莎见过妈妈做的最不负责任的事情。</p><p>为此，她会永远爱她。</p><hr><p>爱莎希望今天是万圣节，那样他们就能乘坐公交车，而不至于吓到普通人，别人只会觉得他们是故意装扮成这样的。这也是爱莎喜欢万圣节的原因：在万圣节，与众不同是一件很正常的事。</p><hr><p>”每一个经历过战争的人都是破碎的。“</p><hr><p>女人深深吸了一口气，深到如果你扔个硬币进去，都听不到它触底的声音。</p><hr><p>“人们喝酒是为了忘记那些难受的事情，对吗？”</p><p>“或者来拥有回忆的勇气，我觉得。”</p><hr><p>“我觉得他需要帮助。”</p><p>“要帮助那些不想被帮助的人很困难。”</p><p>“需要帮助的人也许不是那些急切寻求他人帮助的人。”爱莎说。</p><hr><p>“是因为我，所以你不想要更多的小孩了吗？”她希望他的回答是“不”。</p><p>“是的。”他说。</p><p>“因为我和别人不一样？”她轻声说。</p><p>他没有回答，而她也没有等。她正要从外面关上奥迪的车门时，爸爸从椅子上探过身，抓住她的指尖，视线相交时，他像平时那样闪躲。但随后他说：“因为你是完美的。”</p><p>她从未听过他这么“不犹豫”的口气。如果她大声说出此刻的想法，他会告诉她这根本不是个词。她因此爱他。</p><hr><p>死亡最强大的力量不在于它能让人死去，而在于让留下来的人不想再活着。</p><hr><p>恐惧就像是香烟，外婆说，困难的不是戒掉，而是不要开始。</p><hr><p>孩子们认为时间只是一种情绪，所以“现在”对他们来说时一个毫无意义的词语，对外婆也一样。乔治经常说外婆不是个“时间乐观主义者”，她是一个“时间无神论者”，唯一信奉的宗教是“以后再说”教。</p><hr><p>与恶魔斗争的人要时刻警惕，以免自己也变成恶魔。如果你久久地注视深渊，那深渊同时也在注视着你。（[德]尼采）</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;外婆的道歉信&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#外婆的道歉信&quot;&gt;&lt;/a&gt; 外婆的道歉信&lt;/h1&gt;
&lt;p&gt;## [瑞典🇸🇪]弗雷德里克·巴克曼&lt;/p&gt;
&lt;p&gt;不是所有怪物一开始都是怪物。有些因为悲伤才变成了怪物。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>读书笔记｜《始于极限》</title>
    <link href="https://artemis727.github.io/2023/03/21/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BD%9C%E3%80%8A%E5%A7%8B%E4%BA%8E%E6%9E%81%E9%99%90%E3%80%8B/"/>
    <id>https://artemis727.github.io/2023/03/21/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BD%9C%E3%80%8A%E5%A7%8B%E4%BA%8E%E6%9E%81%E9%99%90%E3%80%8B/</id>
    <published>2023-03-21T05:39:15.000Z</published>
    <updated>2023-03-21T07:52:39.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="始于极限女性主义往复书简"><a class="markdownIt-Anchor" href="#始于极限女性主义往复书简"></a> 始于极限：女性主义往复书简</h1><h2 id="日上野千鹤子-铃木凉美"><a class="markdownIt-Anchor" href="#日上野千鹤子-铃木凉美"></a> [日🇯🇵]上野千鹤子 &amp; 铃木凉美</h2><p>“《”AV女演员“的社会学》这个书名让我燃起了希望，我还以为是AV女演员的当事人研究。<strong>但这本书采用了微妙的局外人视角，让人以为作者是有特权进入AV现场的女性撰稿人，还是一名拥有情色资本的女性，稍有不慎就可能越界成为AV女演员。</strong>”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“换句话说，因为别无选择而从事性工作的女性和拥有其他选项、随时可以离开的女性在可行能力上存在巨大的差异。可行能力强的女性将自己的职业说成“自愿的选择”，以这份工作为荣并宣扬其专业精神，这是可以理解的。<strong>问题是，她们并不能代表全体性工作者。</strong>”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“女儿是母亲最激烈的批判者。”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“我从中感受到拥有聪慧母亲的女儿是多么不幸。聪慧的母亲会让她的女儿窒息。<strong>聪慧，意味着“妈妈了解你的全部”。于是孩子失去了喘息的空间，暴露在透明的视野中，无路可逃，无处可躲。“孩子长大成人”也就等于“孩子的内心怀揣了父母不了解的阴暗面”。</strong>”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“如果孩子对父母的渴求是一道终极的二选一——“爱还是理解”，曾经的我定会回答：“妈妈，我想要的是理解而不是爱。”但后来我想通了，也懂得感激她了。因为我没有得到理解，却得到了真诚耿直的爱。而且我也意识到，渴望得到理解是强人所难。我没有渴望理解的理由，也没有这个必要。”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“你在书中提到了母亲说过的话。<br>“我不能原谅你，因为你满不在乎地伤害了我爱到骨子里的女儿的身体和心灵。”<br>多么撕心裂肺的呐喊。”</p><p>（第一章：情色资本，上野千鹤子）</p><hr><p>“母亲总是用自己的话语与我碰撞，并希望我用同样的方式回应，而不是单方面地告诉我“我说不行就不行”或者“老师说不行就不行”。<strong>然而年幼时，不允许沉默、时刻被迫解释自身想法的环境反而让我觉得自己在言语之外没有自由。</strong>”</p><p>（第二章：母女，铃木凉美）</p><hr><p>“在与母亲交谈时，我总觉得自己说的每句话对她来说都有既视感，是她能报出名字的现象，全无新的惊喜。我感到母亲热衷于育儿的原因之一，就是为了验证自己的研究。”</p><p>（第二章：母女，铃木凉美）</p><hr><p>“痛了就喊痛，人的尊严就从这里开始。……支撑受害者不是软弱的表现，反而是强大的证明。”</p><p>（第二章：母女，上野千鹤子）</p><hr><p>“我也走过了充满羞耻和失败的人生。我永远无法抬头挺胸地说，我对自己过往的人生无怨无悔。”</p><p>（第二章：母女，上野千鹤子）</p><hr><p>“这种自虐与自尊正是女性的<strong>阿喀琉斯之踵</strong>，是这一行的男性多年来一直在利用的东西。这是自己选的路，没法跟任何人抱怨；做选择的时候就已经做好承担风险的准备，所以没有资格抱怨……但这并不意味着你同意他人对你为所欲为。不仅仅是你，恐怕还有许多女性对她们在现场遭受的（身体和精神上的）创伤保持沉默。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“性的门槛已经大幅降低，性的质量却迟迟没有提高。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“当“新的男人”问，有没有“新的女人”能与他们对等地开展恋爱游戏时，《青鞜》[4]的女人举起手说“我们在这里”。</p><p>[4]日本首部女性文艺杂志，“青鞜”译自blue stockings，特指18世纪英国贵族女性举办的文化沙龙。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>““不过是性罢了”，“就这种程度的恋爱而已”……如果你抱有这种想法，那回报也就只有这么一丁点。人只能得到自己所要的。“</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“单身并不意味着没有性属性，而性属性也不以“成对”为条件。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“吉本隆明留下了一个哀伤的概念“生理迫使的成熟”。即使一个人实际上没有成熟，年龄和衰老也会强迫他对很多事死心，即变得达观。性欲与生命力相关。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“没有性和爱，人也活得下去，但“有”比“没有”确实更能丰富人生的经历。”</p><p>（第三章：恋爱与性，上野千鹤子）</p><hr><p>“我并没有因此突然想要结婚成家，但我比以前更理解人们为什么更倾向于扩大婚姻，在婚姻中创造自由，而不是压缩婚姻，扩大婚姻之外的自由。”</p><p>（第四章：婚姻，铃木凉美）</p><hr><p>“至少在我周围，那些对婚姻制度说“不”的人往往与伴侣建立了比寻常夫妇稳固得多的联系。我也觉得正是因为有这种精神联系，他们才有底气置身于制度之外。在精英人群的未婚者中，这种倾向尤其明显。”</p><p>（第四章：婚姻，铃木凉美）</p><hr><p>“我无法忍受将性和爱置于权利和义务的关系之下，与拥有和被拥有的关系挂钩。”</p><p>（第四章：婚姻，上野千鹤子）</p><hr><p>“在市场上用性换取经济回报……市场不就是这么回事吗？将一切都变成商品吃干抹净的不就是资本主义吗？——我不认同这种虚无主义。资本主义创造了一个由自由劳动者（除了出卖自己的劳动力，没有其他生存手段的工资劳动者）组成的劳动市场，但他们的“自由”是受限的。劳动者可以与资本家签订“自由”的契约，但他们成为债务奴隶的“自由”是被禁止的。例如，你无法将自己作为债务的抵押品，“不还钱就沦为奴隶”的契约在现代法律中无法成立。买卖身体部位和器官也是类似，买卖胎儿与贩卖儿童也一样无效。现实世界中确实存在可以买卖器官的黑市，也有以代孕妈妈的名义买卖胎儿的市场，这都是无限接近违法行为的灰色地带。换句话说，在资本主义之下，可以交换的东西是有限制的，并不是所有东西都可以成为商品。性作为一种对身体的侵犯行为，同样处于这个灰色地带。”</p><p>（第五章：认可欲求，上野千鹤子）</p><hr><p>“爱是一种积极主动的行为。而积极主动的行为正是自主的标志。如此想来，世间最有意义的行为不正是不求回报的付出吗？这种行为的回报不来自他人，而来自我们自己。”</p><p>（第五章：认可欲求，上野千鹤子）</p><hr><p>“在日常生活中，已经很少有人会直接发表歧视风俗女郎的言论。与美国相比，对性工作者的暴力（包括来自警察的性暴力）或无视其人权的情况在东京也很少出现，<strong>相反，她们受到的侮辱和歧视往往来自将尊严摆在不同位置的女性同行。</strong>”</p><p>（第六章：能力，铃木凉美）</p><hr><p>“我寻求的是“性”关系，而不是爱或认可，所以男人在床上低语的“我爱你”都令我厌恶。我心想，我的性欲是纯洁的，不容玷污。”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“受威胁的不单单是女性的自尊心，男性的自尊心也危在旦夕”。“将身心扔进阴沟的性事”不仅是对自己的侮辱，也是对对方的侮辱。”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“草平大概是想调戏一下雷鸟这位有智慧、有教养、有自尊的女人，看看她会有什么反应。但雷鸟也想试探到底，心想：“我会服从自己的意志，可你有多大的思想觉悟呢？”没有几个男人经受得住这样的考验。草平终究配不上雷鸟。在我看来，器量小的男人夹着尾巴逃跑了，就是这起殉情未遂事件的始末。……<strong>《死之棘》的岛尾敏雄是极少数的例外，面对女人赌上全身心施加的考验，他坚持到最后都没有逃避。</strong>”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“长久以来，人们认为殉情通常是男人带着女人踏上通往另一个世界的旅程。但富冈老师对《心中天网岛》[4]做出了不同的诠释，她认为女人自己也有去死的理由，是女人把男人拖去了死地。殉情丝毫不意味着爱的圆满。男人和女人因不同的理由赴死，在不同的剧本中同床共枕。</p><p>[4]日本木偶戏的经典剧作，描写相爱的两个人因义理的束缚而无法结合，最终殉情。”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“性观念越是自由、进步，性伴侣就越多。这个标准实在太直白，教我忍俊不禁。从这个角度看，基于自我决定使用自己身体的性工作者也是某种意义上的“独立女性”。这也成了她们尊严的源泉。”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“把易碎品当作易碎品对待。”</p><p>（第六章：能力，上野千鹤子）</p><hr><p>“诚然乙武先生[1]有“作为残疾人的当事人性”，伊藤诗织女士也有“作为性暴力受害者的当事人性”。但这种当事人经历写过一次就结束了。人不能反复书写自己的历史。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“我素来认为，想象力无法超越自身的认知，而现实远超想象……所以我对虚构作品的要求极高，很少有小说能让我觉得有趣。读到无聊的小说时，我只想大吼一声“把时间还给我”。但论文或纪实作品不然，只要能告诉我原本不了解的事实，哪怕文章写得再拙劣，心里都是喜悦胜过烦闷。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“我还想，如果我不适合做研究，那就让研究来迎合我吧。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“**过于害怕被误解，人就一句话都没法说了。**既有正解又有误解也无妨，管它是八二开，还是六四开，只要我觉得正解多于误解，就有勇气继续写下去。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“据说，如果通知下周停课，日本学生会拍手叫好，美国学生却会嘘声一片，因为他们很清楚自己上的是私立学校，每年要交大约400万日元的学费，理应享受服务。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“大学院的工作尤其严肃，因为老师培养的是可能在不久的未来成为自己对手的学者。”</p><p>（第七章：工作，上野千鹤子）</p><hr><p>“无论面对怎样的困境，都能告诉自己船到桥头自然直，我觉得这种乐观精神是父母的馈赠，不过这背后存在依赖心理。你觉得实在不行了还可以靠父母，当年的我也一样。我曾经在一次鲁莽的旅行中花光了钱，只得打电报回家让父母寄钱来。结果当然是挨了一顿臭骂，但我坚信他们不可能不给我寄钱。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“女儿最大的叛逆，就是狠狠糟蹋父母无比珍视的自己。但反过来说，女儿越是下得了手，就说明她越相信父母的爱呀。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“有句话叫“英雄是能够化命运为选择的人”。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“天职（vocation）、职业（profession）、工作（job）是有区别的。三者重合是无上的幸运，但这样的情况寥寥无几。“无论能不能赚到钱都会做”的是天职，“利用专长谋生的差事”是职业，而工作是“奉人之命的有偿劳动，无关好恶”。除此之外还有爱好（hobby），指自掏腰包也要做的事。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“想必你已经在写作的乐趣中品尝到了自我表达的愉悦。写作是一种技能。而技能是可以磨炼的。这个过程中最大的陷阱就是自我模仿。不止作家，所有创作者都要面对这样的陷阱。你一旦产生市场价值，买家（编辑）就会约你写“类似于××的东西”，只为复制昔日的辉煌。因为这样最保险稳妥。但越是顺着他们的要求来，你的市场价值就越低。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>““希望你拿出更有意义的作品，为后人铺路搭桥，树立路标，甚至建起庇护所或瞭望塔。””</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“想必孩子们正在竭尽全力阻止家庭分崩离析，甚至不惜用自己的身体堵住裂缝。”</p><p>（第八章：独立，上野千鹤子）</p><hr><p>“我在夜世界（不限于AV行业）遇到过许多曾经的未成年照顾者，也遇到过正在照顾双亲的人，有男有女。一方面因为夜世界是没有受过多少教育或培训的人也能轻松涉足的行当，另一方面似乎是因为夜世界的工作模式相对灵活，对单亲妈妈和照顾者来说都比较方便。他们的家庭情况各不相同，有的是家人疾病缠身或对某种东西成瘾，需要人照顾，有的则是一直被父母寄生，迟迟无法解脱。但总的来说，我的夜班朋友和熟人显然比大学院、报社的同学和同事更能接受自己对家庭的职责，也认为履行这种职责理所当然。”</p><p>（第九章：团结，铃木凉美）</p><hr><p>“东京都内的公寓要好几百万一坪[3]，哪来的地方放书。而建在山里的这栋房子堪比装满书的书库。在空无一人、好似阅览室的空间里独自阅读写作真是太幸福了。”</p><p>（第九章：团结，上野千鹤子）</p><hr><p>“话说在结交女性朋友的时候，我一直有意识地和比自己大十岁左右的人来往。要是年龄相差二十或三十岁，你会很难想象那个年纪的自己……但只差十岁的话，便能进入想象力的射程。于是你就会知道“哦……我再过十年会变成这样啊”。”</p><p>（第九章：团结，上野千鹤子）</p><hr><p>“在人生的旅途中，也许有人与你同行，也许没有。有旅伴也许是幸运的，也可能不幸。有时候，旅伴确实能为我们的人生增光添彩。<br>不过到头来，终究是孤身一人。<br>只要做好这样的思想准备，便不难做出选择了。”</p><p>（第九章：团结，上野千鹤子）</p><hr><p>“既然他们能在家庭之外做好社会的一员，照顾他人的感受，那回到家以后也应该这么做。”</p><p>（第十章：女性主义，上野千鹤子）</p><hr><p>“你反复问我“如何能对男人不感到绝望”，我之所以相信别人，是因为遇到了让我觉得值得相信的人，与他们的关系带出了我最纯净美好的一面。人的好与坏取决于关系。恶意会牵出恶意，善意则会得到善意的回报。权力会滋生揣摩上意与阿谀奉承，无助会催生出傲慢和自大。我看某人不顺眼，对方可能觉得我更讨人嫌。也许大家都有狡猾卑劣的一面，若想让自己心中的美好成长壮大，远离计较得失的关系才是明智之举。”</p><p>（第十章：女性主义，上野千鹤子）</p><hr><p>“信息提供者会下意识地对采访者潜在的期望做出反应。”</p><p>（第十章：女性主义，上野千鹤子）</p><hr><p>“以掏心挖肺的诚实写就的作品，就是出色的文学作品。”</p><p>（第十一章：自由，上野千鹤子）</p><hr><p>“文学作品中充满了凄惨的谋杀和性暴力，但没有人嚷嚷着要禁止它们。现实和表达之间的关系非常复杂。有时候，正因为人们在表达中做出了犯罪、杀人、虐待之类的事情，才不至于在现实中这么做。也正是通过这些表达，我们才能深入学习男人、女人和人。这就是为什么我是女性主义者中少有的“表达自由派”。因为我认为想象力是无法管控的。”</p><p>（第十一章：自由，上野千鹤子）</p><hr><p>“她们有时候也只在自身处境比较从容的情况下，才能为改善公司制度出力，声讨不合理的规矩。”</p><p>（第十二章：男人，铃木凉美）</p><hr><p>“想用钱摆布女人的男人永远不会变少，那就以青春为武器，把他们的钱统统卷走；性骚扰言论永远都不会消失，那就干脆戴着耳塞工作；总有男人想睡单纯的年轻女人，所以要多留个心眼，不要孤男寡女出去喝酒；刚进公司的时候要多讨大叔上司的欢心……像这样绞尽脑汁为自己创造容身之地的过程，确实和学习如何对付色狼的过程相似。即便内心暗藏一定的反抗精神，表面上看起来也是森先生所谓“拎得清”的女人。也许正因为我们只精通逃跑的方法，色狼才没有变少。我也意识到，正因为我们心底已经对男人灰心，认定色狼永远都不可能绝迹，才会优先采取应对策略而非试图改变社会。”</p><p>（第十二章：男人，铃木凉美）</p><hr><p>“质疑结构本身（我们这一代容易忽视的事情）和姑且应对当前的现实、以免受到伤害（现在的年轻女性容易忽视的事情）必须两手抓。”</p><p>（第十二章：男人，铃木凉美）</p><hr><p>“我殷切希望，社会变革和追求个人幸福可以越来越容易兼容，变革者能够在幸福生活的同时对社会提出抗议，而不至于陷入危险。”</p><p>（第十二章：男人，铃木凉美）</p><hr><p>“专门研究性骚扰和家暴的心理咨询师信田小夜子在最近的著作《家庭和国家的共谋》中写道：“承认伤害并非屈服，而是抵抗。”那不是软弱的表现，而是坚忍的证明。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“可为什么要由作为受害方的女性出面解决性暴力问题呢？我百思不得其解。男人的问题难道不该由男人来解决吗？是色狼逼得女性不再信任男性，可广大男性为什么不将怒火对准色狼？为什么男性不主动发起打击色狼的运动，还把女性的指控看成诽谤，坚持主张“色狼蒙冤”？最有资格对性骚扰者感到愤怒的就是不会性骚扰的男人，可他们为什么要反过来包庇败类，而不是痛骂？出入风俗店的男人为什么不引以为耻？……男人可真是难懂。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“不过我感觉，每一代人接受“男人就是这样”的方式存在一定差异。我母亲那一代将“男人就是这样”作为不可改变的前提，在那样的大环境下她们的生存策略是一味隐忍，“给足男人面子，好好捧着就行了”，并把这种“女性的智慧”传授给了女儿。而她们的女儿，也就是我这代人看着父母的背影长大，心想“这也太荒唐了”，拼命反抗却不断碰壁，遍体鳞伤。你们这一代相当于我们的女儿，也许你们认识到了墙有多厚，以侮蔑男人为代价，学会了如何以更狡猾、更省力的方式活下去。“拎得清才更占便宜”大概也是你们的选项之一。再下一代的年轻女性生于少子化的时代背景，在父母的呵护下长大成人，坚信女人在各方面都不比男人逊色，所以发出了无比正当合理的呼声：“我无法忍受这样的不公！”“岂有此理！”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“即使在今天，“母性”也要求母亲自我牺牲，但没人要求父亲这么做。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“她们不必期望男人说出“我想给你幸福”“我会一辈子保护你”之类的话，而可以抬头挺胸地说：“自己的幸福自己争取！”<br>出现这样一大批“厚着脸皮”优先自身利益的姑娘是我喜闻乐见的，因为男人打从一开始就把自己的利益放在第一位，人都是天生的利己主义者，最看重自己，无关性别。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>““你现在是谁”比“你过去是谁”重要得多。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“聪慧的母亲”能看透女儿的心思，将女儿逼入绝境，借此磨炼她的自我。一个大人倾其一生与你面对面，这也是无比珍贵的馈赠。”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“<strong>我在四十岁出头的时候失去了母亲，只能捧着堆积在我们之间的课题，没完没了地絮絮叨叨。与母亲在一起的时光戛然而止，让我深陷无法挽回的情绪之中。</strong><br>母亲走了一段时间以后，我半夜里给一位女性朋友打电话，感慨万千道：<br>“<strong>原来逝者也是会成长的啊……</strong>”</p><p>（第十二章：男人，上野千鹤子）</p><hr><p>“在与您通信的过程中，我反思最多的便是<strong>自己哪怕受到伤害也绝不承认的态度</strong>。我总是因此倾向于认定男人不值得当真为之愤怒。<strong>不得不承认，正是这种态度导致我缺乏变革的想法，也缺乏对他人的尊重。</strong>”</p><p>（代后记，铃木凉美）</p><hr><p>“女人受伤的模样会成为男人的消费对象。”</p><p>（代后记，铃木凉美）</p><hr><p>“不过这一年的通信确确实实改变了我，<strong>您的每一封信仿佛都在我的活法上打了一个问号。</strong>”</p><p>（代后记，铃木凉美）</p><hr><p>““你现在是谁”比“你过去是谁”重要得多——用温柔来形容您最后的寄语并不贴切。它好似利刃，无比严厉地刺入我的背脊。我会努力改变精明而迟钝的自己，鼓起勇气打破对自身性情的定义，超越种种抵触，去更广阔的天地尽情表达。”</p><p>（代后记，铃木凉美）</p><hr><p>“起初我心里也有些忐忑，好在顺顺利利进行了十二轮通信，总共二十四封。<strong>这是一场没有海图的航行，每个回合都教人满怀期待，好奇接下来会发生什么。</strong>”</p><p>（代后记，上野千鹤子）</p><hr><p>“出售性的女人暴露在好奇的视线之下，购买性的男人却从不被质疑。”</p><p>（代后记，上野千鹤子）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;始于极限女性主义往复书简&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#始于极限女性主义往复书简&quot;&gt;&lt;/a&gt; 始于极限：女性主义往复书简&lt;/h1&gt;
&lt;h2 id=&quot;日上野千鹤子-铃木凉美&quot;&gt;&lt;a class=&quot;markdownIt-An</summary>
      
    
    
    
    <category term="读书笔记" scheme="https://artemis727.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="摘抄" scheme="https://artemis727.github.io/tags/%E6%91%98%E6%8A%84/"/>
    
  </entry>
  
  <entry>
    <title>碎碎念｜英文论文中的 Introduction 该怎么写？</title>
    <link href="https://artemis727.github.io/2023/03/20/%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BD%9C%E8%8B%B1%E6%96%87%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84Introduction%E8%AF%A5%E6%80%8E%E4%B9%88%E5%86%99/"/>
    <id>https://artemis727.github.io/2023/03/20/%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BD%9C%E8%8B%B1%E6%96%87%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84Introduction%E8%AF%A5%E6%80%8E%E4%B9%88%E5%86%99/</id>
    <published>2023-03-20T01:55:07.000Z</published>
    <updated>2023-03-20T02:25:09.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h1><p>通常来说，Introduction 占整篇论文的 5-10%，包含以下三部分：</p><ul><li>研究背景</li><li>作者的主要论点</li><li>论文的主要内容</li></ul><p>重点不是记住我们要写什么内容，而是将 Introduction 的<strong>写作逻辑</strong>烂熟于心。</p><p><strong>论文的写作逻辑：概括-具体-概括，而 Introduction 作为论文的开头部分，其写作逻辑自然就是：概括-具体。</strong></p><ul><li>General</li><li>Define the general topic</li><li>Narrow the topic to the essay question topic(s)/thesis statement - Specific State - what you intend to do in the essay</li></ul><p>即最开始先说明研究背景或问题的普遍观点，然后从大的背景范围缩小到具体研究的课题上面；最后阐述你的论文主要内容，其中包含论点和结构。</p><h1 id="introduction逻辑结构及模版句"><a class="markdownIt-Anchor" href="#introduction逻辑结构及模版句"></a> Introduction逻辑结构及模版句</h1><ol><li><p>Polylactide (PLA) has received much <font color="red">attention</font> in recent years due to its biodegradable properties, which offer important economic benefits.</p><p><strong>介绍课题的重要性</strong></p></li><li><p>PLA <font color="red">is a</font> polymer obtained from corn and is produced by the polymerisation of lactide.<br><strong>介绍研究背景：从最普遍的、读者己经知道的青景开始</strong></p></li><li><p>It has many possible <font color="red">uses</font> in the biomedical field and has also been investigated as a potential engineering material.<br><strong>介绍研究背景：更加具体细节的方式，并使用参考文最去支撑</strong></p></li><li><p><font color="red">However</font>, it has been found to be too weak under impact to be used commercially.<br><strong>该领域存在的普遍问题：要简略，不要具体</strong></p></li><li><p><font color="red">One way to toughen</font> polymers is to incorporate a layer of rubber particles and there has been extensive research<br>regarding the rubber modification of PLA.</p><p><strong>过渡与转折：从普遍问题过渡到文献综述</strong></p></li><li><p><font color="red">For example</font>, Penney et al. showed that PLA composites could be prepared using blending techniques and more recently Hillier established the toughness of such composites.<br><strong>具体举例：该领域关键研究课题，可按照时间顺序引用文献</strong></p></li><li><p><font color="red">However, although</font> the effect of the rubber particles on the mechanical properties of copolymer svstems was demonstrated over two years ago, <font color="red">little attention</font> has been paid to the selection of an appropriate rubber component.</p><p><strong>当前研究的空缺</strong></p></li><li><p><font color="red">The present paper presents</font> a set of criteria for selecting such a component.</p><p><strong>本论文的研究内容：目的及重点，描达框架</strong></p></li><li><p>On the basis of these criteria it <font color="red">then describes</font> the preparation of a set of polymer blends using PLA and a hydro-carbon rubber(PI).<br><strong>具体介绍本论文的研究的方法论等</strong></p></li><li><p>This combination of two mechanistically distinct polymerisations formed a <font color="red">novel</font> copolymer in which the incorporation of Pl significantly increased flexibility.<br><strong>宣布本论文发现的结论：无需给出太多细节</strong></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;summary&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#summary&quot;&gt;&lt;/a&gt; Summary&lt;/h1&gt;
&lt;p&gt;通常来说，Introduction 占整篇论文的 5-10%，包含以下三部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;研究背景</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://artemis727.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>商业分析｜业务模型</title>
    <link href="https://artemis727.github.io/2023/03/13/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B/"/>
    <id>https://artemis727.github.io/2023/03/13/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-03-13T06:07:11.000Z</published>
    <updated>2023-03-13T06:09:11.468Z</updated>
    
    <content type="html"><![CDATA[<p>精通互联网世界中的各种业务模型（如AARRR模型、UE模型、RMF模型、转化漏斗模型、帕累托法则、生命周期理论、营销渠道归因模型）。</p><h1 id="aarrr模型"><a class="markdownIt-Anchor" href="#aarrr模型"></a> AARRR模型</h1><h1 id="漏斗模型"><a class="markdownIt-Anchor" href="#漏斗模型"></a> 漏斗模型</h1><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><ol><li><a class="link" href="https://blog.csdn.net/scut_yfli/article/details/105720876">数据分析商业逻辑模型简介（一）：AARRR模型、漏斗模型<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;精通互联网世界中的各种业务模型（如AARRR模型、UE模型、RMF模型、转化漏斗模型、帕累托法则、生命周期理论、营销渠道归因模型）。&lt;/p&gt;
&lt;h1 id=&quot;aarrr模型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#aarrr模型&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
