<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syaoran :)</title>
  
  
  <link href="https://artemis727.github.io/atom.xml" rel="self"/>
  
  <link href="https://artemis727.github.io/"/>
  <updated>2023-03-12T13:33:37.507Z</updated>
  <id>https://artemis727.github.io/</id>
  
  <author>
    <name>Syaoran Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据分析｜计算月环比 月同比</title>
    <link href="https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E8%AE%A1%E7%AE%97%E6%9C%88%E7%8E%AF%E6%AF%94-%E6%9C%88%E5%90%8C%E6%AF%94/"/>
    <id>https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E8%AE%A1%E7%AE%97%E6%9C%88%E7%8E%AF%E6%AF%94-%E6%9C%88%E5%90%8C%E6%AF%94/</id>
    <published>2023-03-12T11:44:42.000Z</published>
    <updated>2023-03-12T13:33:37.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL计算月环比、月同比"><a href="#SQL计算月环比、月同比" class="headerlink" title="SQL计算月环比、月同比"></a>SQL计算月环比、月同比</h1><h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><p>数据：日期，订单金额</p><p>假设数据是精确到天的</p><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdnimg.cn/20200817173547970.png#pic_center"                      alt="img"                ></p><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><h3 id="月环比：和上个月做比较"><a href="#月环比：和上个月做比较" class="headerlink" title="月环比：和上个月做比较"></a>月环比：和上个月做比较</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 月环比</span></span><br><span class="line"><span class="keyword">select</span> substr(a.d, <span class="number">1</span>, <span class="number">7</span>) <span class="keyword">as</span> <span class="keyword">month</span>, a.d, a.orderpay, b.dd, b.originalday, b.orderpay, (a.orderpay<span class="operator">-</span>b.orderpay)<span class="operator">/</span>b.orderpay <span class="keyword">as</span> month_rate</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">  <span class="keyword">select</span> date_format(datetime, <span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="keyword">as</span> d, orderpay</span><br><span class="line"><span class="keyword">from</span> ordertable</span><br><span class="line">) <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>(</span><br><span class="line">  <span class="keyword">select</span> date_add(date_format(datetiem, <span class="string">&#x27;%Y-%m-%d&#x27;</span>), <span class="type">interval</span> <span class="number">1</span> <span class="keyword">month</span>), date_format(datetime, <span class="string">&#x27;&amp;Y-%m-%d&#x27;</span>) <span class="keyword">as</span> originalday, orderpay</span><br><span class="line">  <span class="keyword">from</span> ordertable</span><br><span class="line">) <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">on</span> a.d <span class="operator">=</span> b.dd</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果是精确到月的数据，就要把 datetime 变成 concat(datetime, &#x27;-01&#x27;)</span></span><br><span class="line"><span class="keyword">select</span> substr(a.d, <span class="number">1</span>, <span class="number">7</span>) <span class="keyword">as</span> <span class="keyword">month</span>, a.d, a.orderpay, b.dd, b.originalday, b.orderpay, (a.orderpay<span class="operator">-</span>b.orderpay)<span class="operator">/</span>b.orderpay <span class="keyword">as</span> month_rate </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">  (<span class="keyword">select</span> DATE_FORMAT(CONCAT(datetime,<span class="string">&#x27;-01&#x27;</span>),<span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="keyword">as</span> d ,orderpay  <span class="keyword">from</span> ordertable) a  </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">  (<span class="keyword">select</span> DATE_ADD(DATE_FORMAT(CONCAT(datetime,<span class="string">&#x27;-01&#x27;</span>),<span class="string">&#x27;%Y-%m-%d&#x27;</span>),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">month</span> )<span class="keyword">as</span> dd </span><br><span class="line">  ,DATE_FORMAT(CONCAT(datetime,<span class="string">&#x27;-01&#x27;</span>),<span class="string">&#x27;%Y-%m-%d&#x27;</span>)<span class="keyword">as</span> originalday,orderpay <span class="keyword">from</span> ordertable) b</span><br><span class="line"><span class="keyword">on</span> a.d<span class="operator">=</span>b.dd</span><br></pre></td></tr></table></figure><p>从结果可以看到，月环比的计算逻辑：在原有的时间加上一个月与原表连接即可得到本月与上个月的信息。结果有几个月份是null，原因是我造的数据没有11月份的，所以才没有计算，这个可忽略。<br><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdnimg.cn/20200817173904907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MjE5Nw==,size_16,color_FFFFFF,t_70#pic_center"                      alt="在这里插入图片描述"                ></p><h3 id="月同比：和去年的这个月做比较"><a href="#月同比：和去年的这个月做比较" class="headerlink" title="月同比：和去年的这个月做比较"></a>月同比：和去年的这个月做比较</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 月同比</span></span><br><span class="line"><span class="keyword">select</span> substr(a.d, <span class="number">1</span>, <span class="number">7</span>) <span class="keyword">as</span> <span class="keyword">month</span>, a.d, a.orderpay, b.dd, b.originalday, b.orderpay, (a.orderpay<span class="operator">-</span>b.orderpay)<span class="operator">/</span>b.orderpay <span class="keyword">as</span> month_rate</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line"><span class="keyword">select</span> date_format(<span class="type">date</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="keyword">as</span> d, orderpay</span><br><span class="line">  <span class="keyword">from</span> ordertable</span><br><span class="line">) <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>(</span><br><span class="line"><span class="keyword">select</span> date_add(date_format(<span class="type">date</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>), <span class="type">interval</span> <span class="number">1</span> <span class="keyword">year</span>) <span class="keyword">as</span> dd, date_format(<span class="type">date</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="keyword">as</span> originalday, orderpay</span><br><span class="line">  <span class="keyword">from</span> ordertable</span><br><span class="line">) <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">on</span> a.d <span class="operator">=</span> b.dd</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果是精确到月的数据，还是要把 datetime 变成 concat(datetime, &#x27;-01&#x27;)</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdnimg.cn/20200817174410687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjY5MjE5Nw==,size_16,color_FFFFFF,t_70#pic_center"                      alt="在这里插入图片描述"                ></p><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><blockquote><p>用python中的pandas模块。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">months = pd.date_range(*start*=<span class="string">&#x27;2010-01-01&#x27;</span>, *end*=<span class="string">&#x27;2020-12-31&#x27;</span>, *freq*=<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">df = pd.DataFrame(&#123;<span class="string">&#x27;month&#x27;</span>: months, <span class="string">&#x27;v&#x27;</span>: <span class="number">100</span>*np.random.rand(months.shape[<span class="number">0</span>], <span class="number">1</span>).reshape(months.shape[<span class="number">0</span>])&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right"></th><th align="right">month</th><th align="right">v</th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td></tr></tbody></table><p>132 rows × 2 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 环比计算</span></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">df[<span class="string">&#x27;v_last&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].shift(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># shift()表示将这列数据整个后移一位</span></span><br><span class="line">df[<span class="string">&#x27;month_earlier_1&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>]/df[<span class="string">&#x27;v_last&#x27;</span>]-<span class="number">1</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right">month</th><th align="right">v</th><th align="right">v_last</th><th align="right">month_earlier_1</th><th></th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">99.934812</td><td>-0.392237</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">60.736689</td><td>-0.888010</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">6.801932</td><td>5.957572</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">47.324930</td><td>-0.918742</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td>…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">68.391408</td><td>-0.709292</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">19.881904</td><td>0.411943</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">28.072124</td><td>-0.328120</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">18.861094</td><td>0.433116</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">27.030143</td><td>1.246361</td></tr></tbody></table><p>132 rows × 4 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">df[<span class="string">&#x27;m_m_diff&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].diff()</span><br><span class="line"><span class="comment"># diff()用于计算相邻两个值的差值</span></span><br><span class="line">df[<span class="string">&#x27;month_earlier_2&#x27;</span>] = df[<span class="string">&#x27;m_m_diff&#x27;</span>]/df[<span class="string">&#x27;v&#x27;</span>].shift(<span class="number">1</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right">month</th><th align="right">v</th><th align="right">v_last</th><th align="right">month_earlier_1</th><th align="right">m_m_diff</th><th align="right">month_earlier_2</th><th></th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">99.934812</td><td align="right">-0.392237</td><td align="right">-39.198123</td><td>-0.392237</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">60.736689</td><td align="right">-0.888010</td><td align="right">-53.934757</td><td>-0.888010</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">6.801932</td><td align="right">5.957572</td><td align="right">40.522998</td><td>5.957572</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">47.324930</td><td align="right">-0.918742</td><td align="right">-43.479383</td><td>-0.918742</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td>…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">68.391408</td><td align="right">-0.709292</td><td align="right">-48.509504</td><td>-0.709292</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">19.881904</td><td align="right">0.411943</td><td align="right">8.190221</td><td>0.411943</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">28.072124</td><td align="right">-0.328120</td><td align="right">-9.211030</td><td>-0.328120</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">18.861094</td><td align="right">0.433116</td><td align="right">8.169049</td><td>0.433116</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">27.030143</td><td align="right">1.246361</td><td align="right">33.689314</td><td>1.246361</td></tr></tbody></table><p>132 rows × 6 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法3</span></span><br><span class="line">df[<span class="string">&#x27;month_earlier_3&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].pct_change()</span><br><span class="line"><span class="comment"># df中的pct_change()表示当前元素与先前元素相差的百分比</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right">month</th><th align="right">v</th><th align="right">v_last</th><th align="right">month_earlier_1</th><th align="right">m_m_diff</th><th align="right">month_earlier_2</th><th align="right">month_earlier_3</th><th></th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">99.934812</td><td align="right">-0.392237</td><td align="right">-39.198123</td><td align="right">-0.392237</td><td>-0.392237</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">60.736689</td><td align="right">-0.888010</td><td align="right">-53.934757</td><td align="right">-0.888010</td><td>-0.888010</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">6.801932</td><td align="right">5.957572</td><td align="right">40.522998</td><td align="right">5.957572</td><td>5.957572</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">47.324930</td><td align="right">-0.918742</td><td align="right">-43.479383</td><td align="right">-0.918742</td><td>-0.918742</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td>…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">68.391408</td><td align="right">-0.709292</td><td align="right">-48.509504</td><td align="right">-0.709292</td><td>-0.709292</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">19.881904</td><td align="right">0.411943</td><td align="right">8.190221</td><td align="right">0.411943</td><td>0.411943</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">28.072124</td><td align="right">-0.328120</td><td align="right">-9.211030</td><td align="right">-0.328120</td><td>-0.328120</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">18.861094</td><td align="right">0.433116</td><td align="right">8.169049</td><td align="right">0.433116</td><td>0.433116</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">27.030143</td><td align="right">1.246361</td><td align="right">33.689314</td><td align="right">1.246361</td><td>1.246361</td></tr></tbody></table><p>132 rows × 7 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df.drop(columns=&#123;<span class="string">&#x27;v_last&#x27;</span>, <span class="string">&#x27;month_earlier_1&#x27;</span>, <span class="string">&#x27;month_earlier_2&#x27;</span>,<span class="string">&#x27;month_earlier_3&#x27;</span>,<span class="string">&#x27;m_m_diff&#x27;</span>&#125;, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 同比计算</span></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">df[<span class="string">&#x27;last_year_v&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].shift(<span class="number">12</span>)</span><br><span class="line">df[<span class="string">&#x27;year_earlier_1&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>]/df[<span class="string">&#x27;last_year_v&#x27;</span>]-<span class="number">1</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right">month</th><th align="right">v</th><th align="right">last_year_v</th><th align="right">year_earlier_1</th><th></th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">NaN</td><td>NaN</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td>…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">61.175829</td><td>-0.675004</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">26.545938</td><td>0.057492</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">64.892849</td><td>-0.709350</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">87.248627</td><td>-0.690194</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">91.586339</td><td>-0.337025</td></tr></tbody></table><p>132 rows × 4 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;year_diff&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].diff(<span class="number">12</span>)</span><br><span class="line">df[<span class="string">&#x27;year_diff&#x27;</span>].fillna(<span class="number">0</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df[<span class="string">&#x27;year_earlier_2&#x27;</span>] = df[<span class="string">&#x27;year_diff&#x27;</span>]/(df[<span class="string">&#x27;v&#x27;</span>]-df[<span class="string">&#x27;year_diff&#x27;</span>])</span><br><span class="line"><span class="comment"># (df[&#x27;v&#x27;]-df[&#x27;year_diff&#x27;])计算的是去年同期的值</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right">month</th><th align="right">v</th><th align="right">last_year_v</th><th align="right">year_earlier_1</th><th align="right">year_diff</th><th align="right">year_earlier_2</th><th></th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td>0.000000</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td>0.000000</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td>0.000000</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td>0.000000</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td>0.000000</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td>…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">61.175829</td><td align="right">-0.675004</td><td align="right">-41.293926</td><td>-0.675004</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">26.545938</td><td align="right">0.057492</td><td align="right">1.526187</td><td>0.057492</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">64.892849</td><td align="right">-0.709350</td><td align="right">-46.031755</td><td>-0.709350</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">87.248627</td><td align="right">-0.690194</td><td align="right">-60.218483</td><td>-0.690194</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">91.586339</td><td align="right">-0.337025</td><td align="right">-30.866882</td><td>-0.337025</td></tr></tbody></table><p>132 rows × 6 columns</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;year_earlier_3&#x27;</span>] = df[<span class="string">&#x27;v&#x27;</span>].pct_change(periods = <span class="number">12</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><table><thead><tr><th align="right"></th><th align="right">month</th><th align="right">v</th><th align="right">last_year_v</th><th align="right">year_earlier_1</th><th align="right">year_diff</th><th align="right">year_earlier_2</th><th align="right">year_earlier_3</th></tr></thead><tbody><tr><td align="right">0</td><td align="right">2010-01-31</td><td align="right">99.934812</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td align="right">0.000000</td><td align="right">NaN</td></tr><tr><td align="right">1</td><td align="right">2010-02-28</td><td align="right">60.736689</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td align="right">0.000000</td><td align="right">NaN</td></tr><tr><td align="right">2</td><td align="right">2010-03-31</td><td align="right">6.801932</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td align="right">0.000000</td><td align="right">NaN</td></tr><tr><td align="right">3</td><td align="right">2010-04-30</td><td align="right">47.324930</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td align="right">0.000000</td><td align="right">NaN</td></tr><tr><td align="right">4</td><td align="right">2010-05-31</td><td align="right">3.845547</td><td align="right">NaN</td><td align="right">NaN</td><td align="right">0.000000</td><td align="right">0.000000</td><td align="right">NaN</td></tr><tr><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td><td align="right">…</td></tr><tr><td align="right">127</td><td align="right">2020-08-31</td><td align="right">19.881904</td><td align="right">61.175829</td><td align="right">-0.675004</td><td align="right">-41.293926</td><td align="right">-0.675004</td><td align="right">-0.675004</td></tr><tr><td align="right">128</td><td align="right">2020-09-30</td><td align="right">28.072124</td><td align="right">26.545938</td><td align="right">0.057492</td><td align="right">1.526187</td><td align="right">0.057492</td><td align="right">0.057492</td></tr><tr><td align="right">129</td><td align="right">2020-10-31</td><td align="right">18.861094</td><td align="right">64.892849</td><td align="right">-0.709350</td><td align="right">-46.031755</td><td align="right">-0.709350</td><td align="right">-0.709350</td></tr><tr><td align="right">130</td><td align="right">2020-11-30</td><td align="right">27.030143</td><td align="right">87.248627</td><td align="right">-0.690194</td><td align="right">-60.218483</td><td align="right">-0.690194</td><td align="right">-0.690194</td></tr><tr><td align="right">131</td><td align="right">2020-12-31</td><td align="right">60.719457</td><td align="right">91.586339</td><td align="right">-0.337025</td><td align="right">-30.866882</td><td align="right">-0.337025</td><td align="right">-0.337025</td></tr></tbody></table><p>132 rows × 7 columns</p><hr><p><strong>关于pct_change()函数：</strong>pct_change主要涉及以下参数，</p><ul><li><p>periods&#x3D;1，用来设置计算的周期。</p></li><li><p>fill_method&#x3D;‘pad’，如何在计算百分比变化之前处理缺失值(NA)。</p></li><li><p>limit&#x3D;None，设置停止填充条件，即当遇到填充的连续缺失值的数量n时，停止此处填充</p></li><li><p>freq&#x3D;None，从时间序列 API 中使用的增量（例如 ‘M’ 或 BDay())</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL计算月环比、月同比&quot;&gt;&lt;a href=&quot;#SQL计算月环比、月同比&quot; class=&quot;headerlink&quot; title=&quot;SQL计算月环比、月同比&quot;&gt;&lt;/a&gt;SQL计算月环比、月同比&lt;/h1&gt;&lt;h2 id=&quot;准备数据&quot;&gt;&lt;a href=&quot;#准备数据&quot; cla</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜统计学</title>
    <link href="https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    <id>https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E7%BB%9F%E8%AE%A1%E5%AD%A6/</id>
    <published>2023-03-12T11:09:27.000Z</published>
    <updated>2023-03-12T11:12:20.401Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>有1000个样本，如何计算总体方差？</strong></p><p>“样本方差的期望等于总体方差。”在这些样本里再进行多次重复抽样，用多次得出的方差来估计总体方差。</p></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;有1000个样本，如何计算总体方差？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“样本方差的期望等于总体方差。”在这些样本里再进行多次重复抽样，用多次得出的方差来估计总体方差。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜逻辑回归</title>
    <link href="https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/"/>
    <id>https://artemis727.github.io/2023/03/12/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</id>
    <published>2023-03-12T01:02:11.000Z</published>
    <updated>2023-03-12T01:46:02.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分类和回归"><a href="#分类和回归" class="headerlink" title="分类和回归"></a>分类和回归</h1><h2 id="Logistic-Regression-和-Linear-Regression"><a href="#Logistic-Regression-和-Linear-Regression" class="headerlink" title="Logistic Regression 和 Linear Regression"></a>Logistic Regression 和 Linear Regression</h2><ul><li>Linear Regression：<strong>输出一个标量wx+b</strong>，是连续值，用以处理回归问题；</li><li>Logistic Regression：<strong>将标量wx+b通过sigmoid函数映射到(0,1)上</strong>，并划分一个<strong>阈值</strong>，大于阈值的分为一类，其他归为另一类，可处理<strong>二分分类问题</strong>；</li><li>对于N分类问题，先得到<strong>N组w值不同的wx+b</strong>，然后<strong>利用softmax函数归一化</strong>，最后得到<strong>N个类上的概率</strong>，可处理<strong>多分类</strong>问题。</li></ul><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-e5118cf19e52cb3ccd832f1f07a1433a_1440w.webp"                      alt="img"                ></p><blockquote><p>因此，逻辑回归属于分类方法，其本质是将回归方程映射到了(0,1)上。</p></blockquote><h2 id="Support-Vector-Regression-和-Support-Vector-Machine"><a href="#Support-Vector-Regression-和-Support-Vector-Machine" class="headerlink" title="Support Vector Regression 和 Support Vector Machine"></a>Support Vector Regression 和 Support Vector Machine</h2><ul><li>SVR：输出wx+b，即某个样本点到分类面的距离，是连续值，用以处理<strong>回归</strong>问题；</li><li>SVM：将该距离通过sign(·)函数映射，距离为正的样本点为一类，为负的是另一类，故为<strong>分类</strong>问题。</li></ul><h2 id="相应有哪些常用方法"><a href="#相应有哪些常用方法" class="headerlink" title="相应有哪些常用方法"></a><strong>相应有哪些常用方法</strong></h2><ul><li><p>常见的<strong>分类方法：</strong>逻辑回归、决策树分类、KNN(K-近邻)分类、贝叶斯分类、人工神经网络、支持向量机(SVM)等</p></li><li><p>常见的<strong>回归方法：</strong>线性回归、多项式回归、逐步回归等</p></li></ul><p>（常见的聚类方法：K-Means(K均值)聚类等）</p><h1 id="逻辑回归分析"><a href="#逻辑回归分析" class="headerlink" title="逻辑回归分析"></a>逻辑回归分析</h1><h2 id="主要思想"><a href="#主要思想" class="headerlink" title="主要思想"></a>主要思想</h2><p>根据现有数据对决策边界建立回归方程，然后将回归方程映射到分类函数上实现分类。</p><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><blockquote><p>具体见参考[1]</p></blockquote><p>Logistic回归的原理可以理解为以下四步：</p><ol><li>利用回归方程表示决策边界</li><li>利用Sigmod函数对回归关系进行映射</li><li>在得到拟合函数后，利用损失函数来评价模型与实际值之间的差异大小</li><li>求出损失函数取得极小值时对应的W，从而得到拟合函数</li></ol><h2 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h2><p>常见的分类模型性能指标有准确率(accuracy)、召回率(recall)、ROC曲线等。</p><h3 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h3><p>包括分类器预测结果：真正TP(true positive)、真负TN(true negative)、假正FP(false positive)、假负FN(false negative)的数量，其中真正和真负均为正确分类的结果。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-7e323dac66fca1f5733c5a417081f436_1440w.webp"                      alt="img"                ></p><p>1代表正类，0代表负类</p><h3 id="准确率ACC、真正率TPR及假正率FPR"><a href="#准确率ACC、真正率TPR及假正率FPR" class="headerlink" title="准确率ACC、真正率TPR及假正率FPR"></a>准确率ACC、真正率TPR及假正率FPR</h3><p><strong>注意区别准确率Accuracy与精确率(查准率)Precision区别</strong>：后者是预测与实际均为正类别样本数量 与 预测正样本数量的比值，即 $TP&#x2F;(TP+FP)$ 。一般而言，回归模型中默认的Score都是Accuracy值。</p><h3 id="ROC曲线"><a href="#ROC曲线" class="headerlink" title="ROC曲线"></a>ROC曲线</h3><p>ROC曲线由变量1-Specificity和Sensitivity绘制，其中横轴1-Specificity&#x3D;假正率(FPR)、纵轴Sensitivity&#x3D;真正率(TPR)，ROC曲线的对角线表示随机猜测，若ROC曲线在对角线下表示分类器性能比随机猜测还差，ROC曲线下的区域面积(area under the curve,AUC)表示分类模型的性能。</p><p><strong>意义：</strong></p><ul><li>有助于选择最佳阈值：ROC曲线越靠近左上角，模型查全率越高，最靠近左上角的ROC曲线上的点是分类错误最少的最好阈值，其假正例和假反例总数最少。</li><li>可以比较不同学习器的性能：将各个学习器的ROC曲线绘制在同一坐标中，直观比较，越靠近左上角的ROC曲线代表的学习器准确性越高。</li><li>AUC同时考虑了学习器对于正例和负例的分类能力，在样本不平衡的情况下，依然能对分类器做出合理评价。</li></ul><h1 id="逻辑回归的Python实现"><a href="#逻辑回归的Python实现" class="headerlink" title="逻辑回归的Python实现"></a>逻辑回归的Python实现</h1><p>利用Python中<strong>sklearn</strong>包进行逻辑回归分析。</p><h2 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a><strong>提出问题</strong></h2><p>根据已有数据探究“学习时长”与“是否通过考试”之间关系，并建立预测模型。</p><h2 id="理解数据"><a href="#理解数据" class="headerlink" title="理解数据"></a><strong>理解数据</strong></h2><p>1、导入包和数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.导入包</span></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建数据（学习时间与是否通过考试）</span></span><br><span class="line">dataDict=&#123;<span class="string">&#x27;学习时间&#x27;</span>:<span class="built_in">list</span>(np.arange(<span class="number">0.50</span>,<span class="number">5.50</span>,<span class="number">0.25</span>)),</span><br><span class="line">        <span class="string">&#x27;考试成绩&#x27;</span>:[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]&#125;</span><br><span class="line">dataOrDict=OrderedDict(dataDict)</span><br><span class="line">dataDf=pd.DataFrame(dataOrDict)</span><br><span class="line">dataDf.head()</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">       学习时间考试成绩</span><br><span class="line"><span class="number">0</span><span class="number">0.50</span><span class="number">0</span></span><br><span class="line"><span class="number">1</span><span class="number">0.75</span><span class="number">0</span></span><br><span class="line"><span class="number">2</span><span class="number">1.00</span><span class="number">0</span></span><br><span class="line"><span class="number">3</span><span class="number">1.25</span><span class="number">0</span></span><br><span class="line"><span class="number">4</span><span class="number">1.50</span><span class="number">0</span></span><br></pre></td></tr></table></figure><p>2、查看数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看数据具体形式</span></span><br><span class="line">dataDf.head()</span><br><span class="line"><span class="comment">#查看数据类型及缺失情况</span></span><br><span class="line">dataDf.info()</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;pandas.core.frame.DataFrame&#x27;</span>&gt;</span><br><span class="line">RangeIndex: <span class="number">20</span> entries, <span class="number">0</span> to <span class="number">19</span></span><br><span class="line">Data columns (total <span class="number">2</span> columns):</span><br><span class="line">学习时间    <span class="number">20</span> non-null float64</span><br><span class="line">考试成绩    <span class="number">20</span> non-null int64</span><br><span class="line">dtypes: float64(<span class="number">1</span>), int64(<span class="number">1</span>)</span><br><span class="line">memory usage: <span class="number">400.0</span> <span class="built_in">bytes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看描述性统计信息</span></span><br><span class="line">dataDf.describe()</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">        学习时间 考试成绩</span><br><span class="line">count<span class="number">20.00000</span> <span class="number">20.000000</span></span><br><span class="line">mean<span class="number">2.87500</span><span class="number">0.500000</span></span><br><span class="line">std<span class="number">1.47902</span><span class="number">0.512989</span></span><br><span class="line"><span class="built_in">min</span><span class="number">0.50000</span><span class="number">0.000000</span></span><br><span class="line"><span class="number">25</span>%<span class="number">1.68750</span><span class="number">0.000000</span></span><br><span class="line"><span class="number">50</span>%<span class="number">2.87500</span><span class="number">0.500000</span></span><br><span class="line"><span class="number">75</span>%<span class="number">4.06250</span><span class="number">1.000000</span></span><br><span class="line"><span class="built_in">max</span><span class="number">5.25000</span><span class="number">1.000000</span></span><br></pre></td></tr></table></figure><p>3、绘制散点图查看数据分布情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#提取特征和标签</span></span><br><span class="line">exam_X=dataDf[<span class="string">&#x27;学习时间&#x27;</span>]</span><br><span class="line">exam_y=dataDf[<span class="string">&#x27;考试成绩&#x27;</span>]</span><br><span class="line"><span class="comment">#绘制散点图</span></span><br><span class="line">plt.scatter(exam_X,exam_y,color=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;考试数据&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;学习时间&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;考试成绩&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-f1d63db4853f166c846626c1bd7b64cd_1440w.webp"                      alt="img"                ></p><p>从图中可以看出当学习时间高于某一阈值时，一般都能够通过考试，因此我们利用逻辑回归方法建立模型。</p><h2 id="构建模型"><a href="#构建模型" class="headerlink" title="构建模型"></a><strong>构建模型</strong></h2><p>1、拆分训练集并利用散点图观察</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.拆分训练集和测试集</span></span><br><span class="line"><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> train_test_split</span><br><span class="line">exam_X=exam_X.values.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">exam_y=exam_y.values.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">train_X,test_X,train_y,test_y=train_test_split(exam_X,exam_y,train_size=<span class="number">0.8</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;训练集数据大小为&#x27;</span>,train_X.size,train_y.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;测试集数据大小为&#x27;</span>,test_X.size,test_y.size)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">训练集数据大小为 <span class="number">16</span> <span class="number">16</span></span><br><span class="line">测试集数据大小为 <span class="number">4</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.散点图观察</span></span><br><span class="line">plt.scatter(train_X,train_y,color=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;train data&#x27;</span>)</span><br><span class="line">plt.scatter(test_X,test_y,color=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;test data&#x27;</span>)</span><br><span class="line"><span class="comment">#plt.plot(test_X,pred_y,color=&#x27;r&#x27;)</span></span><br><span class="line">plt.legend(loc=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Hours&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Scores&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-61117b8b8c172e696692a69fe3ce062d_1440w.webp"                      alt="img"                ></p><p>2、导入模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line">modelLR=LogisticRegression()</span><br></pre></td></tr></table></figure><p>3、训练模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modelLR.fit(train_X,train_y)</span><br></pre></td></tr></table></figure><h2 id="模型评估"><a href="#模型评估" class="headerlink" title="模型评估"></a><strong>模型评估</strong></h2><p>1、模型评分（即准确率）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">modelLR.score(test_X,test_y)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="number">0.75</span></span><br></pre></td></tr></table></figure><p>2、指定某个点的预测情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#学习时间确定时，预测为0和1的概率分别为多少？</span></span><br><span class="line">modelLR.predict_proba(<span class="number">3</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">array([[<span class="number">0.36720478</span>, <span class="number">0.63279522</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">#学习时间确定时，预测能否通过考试？</span></span><br><span class="line">modelLR.predict(<span class="number">3</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">array([<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>3、求出逻辑回归函数并绘制曲线</p><p><em>逻辑回归函数</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先求出回归函数y=a+bx，再代入逻辑函数中pred_y=1/(1+np.exp(-y))</span></span><br><span class="line">b=modelLR.coef_</span><br><span class="line">a=modelLR.intercept_</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;该模型对应的回归函数为:1/(1+exp-(%f+%f*x))&#x27;</span>%(a,b))</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">该模型对应的回归函数为:<span class="number">1</span>/(<span class="number">1</span>+exp-(-<span class="number">1.527106</span>+<span class="number">0.690444</span>*x))</span><br></pre></td></tr></table></figure><p><em>逻辑回归曲线</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#画出相应的逻辑回归曲线</span></span><br><span class="line">plt.scatter(train_X,train_y,color=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;train data&#x27;</span>)</span><br><span class="line">plt.scatter(test_X,test_y,color=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;test data&#x27;</span>)</span><br><span class="line">plt.plot(test_X,<span class="number">1</span>/(<span class="number">1</span>+np.exp(-(a+b*test_X))),color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.plot(exam_X,<span class="number">1</span>/(<span class="number">1</span>+np.exp(-(a+b*exam_X))),color=<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Hours&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Scores&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-247219e9dabefadfeed7933474eaebbb_1440w.webp"                      alt="img"                ></p><p>黄色S形曲线代表利用数据集拟合得到的逻辑回归曲线</p><p>4、得到模型混淆矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"><span class="comment">#数值处理</span></span><br><span class="line">pred_y=<span class="number">1</span>/(<span class="number">1</span>+np.exp(-(a+b*test_X)))</span><br><span class="line">pred_y=pd.DataFrame(pred_y)</span><br><span class="line">pred_y=<span class="built_in">round</span>(pred_y,<span class="number">0</span>).astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="comment">#混淆矩阵</span></span><br><span class="line">confusion_matrix(test_y.astype(<span class="built_in">str</span>),pred_y.astype(<span class="built_in">str</span>))</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">2</span>]])</span><br></pre></td></tr></table></figure><p>从混淆矩阵可以看出：</p><ul><li>该模型的准确率ACC为0.75；</li><li>真正率TPR和假正率FPR分别为0.50和0.00，说明该模型对负例的甄别能力更强（如果数据量更多，该指标更有说服性，而本案例中数据较少，因此受随机影响较大）。</li></ul><p>5、绘制模型ROC曲线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> roc_curve, auc  <span class="comment">###计算roc和auc</span></span><br><span class="line"><span class="comment"># Compute ROC curve and ROC area for each class</span></span><br><span class="line">fpr,tpr,threshold = roc_curve(test_y, pred_y) <span class="comment">###计算真正率和假正率</span></span><br><span class="line">roc_auc = auc(fpr,tpr) <span class="comment">###计算auc的值</span></span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">lw = <span class="number">2</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">plt.plot(fpr, tpr, color=<span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">         lw=lw, label=<span class="string">&#x27;ROC curve (area = %0.2f)&#x27;</span> % roc_auc) <span class="comment">###假正率为横坐标，真正率为纵坐标做曲线</span></span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">1</span>], color=<span class="string">&#x27;navy&#x27;</span>, lw=lw, linestyle=<span class="string">&#x27;--&#x27;</span>)</span><br><span class="line">plt.xlim([<span class="number">0.0</span>, <span class="number">1.0</span>])</span><br><span class="line">plt.ylim([<span class="number">0.0</span>, <span class="number">1.0</span>])</span><br><span class="line">plt.xlabel(<span class="string">&#x27;False Positive Rate&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True Positive Rate&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Receiver operating characteristic example&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&quot;lower right&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-30b960d57411222d79b41842a3529ea2_1440w.webp"                      alt="img"                ></p><p>红线以下部分面积等于0.75，即误将一个反例划分为正例。（此处AUC的面积与模型准确率刚好一致，并非总是相等的）</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>理解回归与分类的关系：两者既有区别（三个维度理解），又有联系（将回归方程映射到分类函数）；</li><li>逻辑回归的参数及其含义：准确率（ACC：模型预测准确度）、真正率（TPR：模型将正例分类正确的能力）、假正率（FPR：模型将负例分类正确的能力）、ROC曲线（可以反映模型正确识别正&#x2F;负例的能力，也可利用AUC反映模型准确度）</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a class="link"   href="https://zhuanlan.zhihu.com/p/48981694" >机器学习之利用Python进行逻辑回归分析<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分类和回归&quot;&gt;&lt;a href=&quot;#分类和回归&quot; class=&quot;headerlink&quot; title=&quot;分类和回归&quot;&gt;&lt;/a&gt;分类和回归&lt;/h1&gt;&lt;h2 id=&quot;Logistic-Regression-和-Linear-Regression&quot;&gt;&lt;a href=&quot;#Lo</summary>
      
    
    
    
    
    <category term="Python" scheme="https://artemis727.github.io/tags/Python/"/>
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>商业分析｜超市分析</title>
    <link href="https://artemis727.github.io/2023/03/12/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E8%B6%85%E5%B8%82%E5%88%86%E6%9E%90/"/>
    <id>https://artemis727.github.io/2023/03/12/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E8%B6%85%E5%B8%82%E5%88%86%E6%9E%90/</id>
    <published>2023-03-12T00:16:14.000Z</published>
    <updated>2023-03-12T00:17:25.521Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如果你是超市老板，发现业绩下滑怎么分析？"><a href="#如果你是超市老板，发现业绩下滑怎么分析？" class="headerlink" title="如果你是超市老板，发现业绩下滑怎么分析？"></a><strong>如果你是超市老板，发现业绩下滑怎么分析？</strong></h1><p><a class="link"   href="https://zhuanlan.zhihu.com/p/438718033" >5W1H法。<i class="fas fa-external-link-alt"></i></a></p><p>![指标下降分析 （5W1H法）](&#x2F;Users&#x2F;xiaoyu&#x2F;Library&#x2F;Mobile Documents&#x2F;iCloud<del>net</del>xmind~brownieapp&#x2F;Documents&#x2F;指标下降分析 （5W1H法）.png)</p><h1 id="你会用哪三个指标来评估超市？"><a href="#你会用哪三个指标来评估超市？" class="headerlink" title="你会用哪三个指标来评估超市？"></a>你会用哪三个指标来评估超市？</h1><p>1、<strong>销售数量——客户消费的商品的数量。<u>销售数代表顾客的支持情况</u>。</strong></p><p>2、销售额——客户购买商品所支付的金额。</p><p><strong>3、周转率——周转率和统计的时间段有关。周转率&#x3D;（销售吊牌额&#x2F;库存金额）×100%。科学的库存管理控制商品库存，使得既不全因库存太多而积压资金，增加营运成本，也不会因缺货而损失销售机会，究竟一家店要有多少商品库存量才算适当呢？一般的方法就是先求出商品的周转率，所谓商品周转率是指库存商品在单位时间里卖出的比率，也就是在一年中库存的商品，可以周转多少次而返回现金。</strong></p><blockquote><p>如何提高商品的周转率？</p><ul><li><p>充分利用电脑资料，运用销售资料的统计方法，可获知畅销品、滞销品及销售正常的商品数据，加强滞销商品的销售或处理滞销品为重点工作之一。</p></li><li><p>有效利用促销活动的力量，增加销售额，来提升商品的周转率。</p></li><li><p>季节性的商品必须加强陈列，此类商品毛利虽低，但业绩多，周转快。</p></li></ul></blockquote><p>4、周转天数——周转天数&#x3D;库存金额&#x2F;销售吊牌额。周转天数越长，表示经营效率越低或存货管理越差； 周转天数越短，表示经营效率越高或存货管理。</p><p>5、退货率——退货率&#x3D;退货金额&#x2F;进货金额（一段时间） ，例：在一段时间内，客户的退货率。公司的退 货率</p><p>6、售罄率——售罄率&#x3D;销售数量&#x2F;进货数量。</p><p>7、库销比——库销比&#x3D;期末库存金额&#x2F;（本期销售牌价额&#x2F;销售天数*30） 。 （只有在单款 SKU 计算中可用 数量替代金额。整体的必须还是看金额）</p><p>8、连带率——连带率&#x3D;销售件数&#x2F;交易次数。 （也叫连单率）</p><p>9、客单价——客户在一次交易中支付的金额总和称为客单价。 客单价&#x3D;销售额&#x2F;交易次数。<br>10、平均单价——平均单价&#x3D;销售金额&#x2F;销售件数。</p><p>11、平均折扣——平均折扣&#x3D;销售金额&#x2F;销售吊牌额。</p><p>12、SKU（深度与宽度）——英文全称为 stock keeping unit, 简称 SKU，定义为保存库存控制的最小 可用单位。</p><p><strong>13、坪效（重点）——就是指终端卖场 1 平米的效率，一般是作为评估卖场实力的一个重要标准，它反映的是卖场的有效利用程度。坪效 &#x3D;销售金额&#x2F;门店营业面积（不包含仓库面积） 。</strong></p><p>14、促销商品——指促销活动期间指定的商品，其价格低于市场同类的商品。不包含正常降价。基本指 公司活动仓货品。</p><p>15、毛利——毛利&#x3D;实际销售额－成本。</p><p>16、净利——净利&#x3D;去税销售额－去税成本。</p><p>17、毛利率——销售毛利率是毛利占销售收入的百分比，也简称为毛利率，其中毛利是销售收入与销售 成本的差。毛利率&#x3D;（毛利&#x2F;实际销售额）×100%。</p><p>18、促销次数——促销次数有宏观概念上的，也有微观概念上的。微观层面上，是表示一个单品在一段 时间内参与促销的次数。</p><p>19、交易次数——客户支付一笔交易记录作为一次交易。</p><p>20、期货——所谓期货，一般指期货合约，就是指由期货交易所统一制定的、规定在将来 某一特定的 时间和地点交割一定数量标的物的标准化合约 。服装行业上具体指订货会上所订购且分期交付的货</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如果你是超市老板，发现业绩下滑怎么分析？&quot;&gt;&lt;a href=&quot;#如果你是超市老板，发现业绩下滑怎么分析？&quot; class=&quot;headerlink&quot; title=&quot;如果你是超市老板，发现业绩下滑怎么分析？&quot;&gt;&lt;/a&gt;&lt;strong&gt;如果你是超市老板，发现业绩下滑怎么分</summary>
      
    
    
    
    
    <category term="商业分析" scheme="https://artemis727.github.io/tags/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析面试题｜字节</title>
    <link href="https://artemis727.github.io/2023/03/11/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BD%9C%E5%AD%97%E8%8A%82/"/>
    <id>https://artemis727.github.io/2023/03/11/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BD%9C%E5%AD%97%E8%8A%82/</id>
    <published>2023-03-11T13:53:07.000Z</published>
    <updated>2023-03-12T11:44:10.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字节商业化战略分析日常实习生"><a href="#字节商业化战略分析日常实习生" class="headerlink" title="字节商业化战略分析日常实习生"></a>字节商业化战略分析日常实习生</h1><p>【一面】</p><ol><li>经历面：框架+做什么+结果&#x2F;收获</li><li>抖音和快手的差异？</li><li>估算抖音电商的GMV？</li><li>抖音和快手电商谁会赢？</li><li>如何判断&#x2F;分析用户对平台的价值？</li><li>抖音做电商的首要考量？要怎么做？</li><li>类似访谈记录，考速记：读一段文字， 记录并整理成文稿，10-15min后提交</li></ol><p>总结：</p><p>一定要对自己的经历非常熟悉，能够结构化地表述同时清楚细节</p><p>需要对平台和行业有一定的了解和思考，尤其是主要的竞品比较</p><p>结合JD可以想象一下工作内容，可能会针对这些能力做测试，这次的访谈记录整理就是我之前没有太训练且忽视了的……</p><p>【二面】</p><ol><li><p>经历面：主要深挖细节，自己做的部分</p></li><li><p>认为直播电商商家成长的痛点在哪</p></li><li><p>头部化对平台来说是好是坏（回答是坏）</p></li><li><p>怎样去头部化</p></li></ol><p>总结：和第一位面试官完全不同的风格，深挖简历，问题会更加具体灵活，会被追问和反问，穿插着小问题，回答问题的分析逻辑和分析结果同样重要</p><p>【三面】HR面，但自己感觉压力最大</p><p>只问了经历，把抠经历细节做到了极致，一定要非常非常熟悉自己的经历，在描述的时候加上相应的具体数据，不要用一些模糊的词……</p><h1 id="字节商业分析实习"><a href="#字节商业分析实习" class="headerlink" title="字节商业分析实习"></a>字节商业分析实习</h1><blockquote><p>Timeline：</p><p>4.13投递，当晚收到面试邀请——4.14一二面——4.15三面——4.16HR面，30分钟左右拿到OC</p></blockquote><p>‼️一面（25分钟）</p><ol><li><p>自我介绍</p></li><li><p>介绍一下你做过的和数据分析相关的大项目</p></li><li><p><strong>如果你是超市老板，发现业绩下滑怎么分析？</strong></p></li><li><p><strong>接3. 你会用哪三个指标来评估超市？</strong></p></li><li><p>你用过SQL吗？</p></li><li><p><strong>接5. LEFT JOIN和INNER JOIN，FULL JOIN什么区别？</strong></p><ul><li><p>都是连接查询；</p></li><li><p>inner join -&gt; 只保留两张表中完全匹配的结果集；</p></li><li><p>left join -&gt; 返回左表中所有的行，即使在右表中没有匹配的记录；</p></li><li><p>right join -&gt; 返回右表中所有的行，即使在左表中没有匹配的记录；</p></li><li><p>full join -&gt; 返回左表和右表中所有的行，左表和右表中没有匹配数据各自单独一行。</p></li></ul></li><li><p><strong>接6. HAVING和WHERE什么区别？</strong></p><ul><li><p>“Where” 是一个约束声明，使用Where来约束来自<a class="link"   href="http://lib.csdn.net/base/mysql" >数据库<i class="fas fa-external-link-alt"></i></a>的数据，Where是在结果返回之前起作用的，且Where中不能使用聚合函数。</p></li><li><p>“Having”是一个过滤声明，是在查询返回结果集以后对查询结果进行的过滤操作，在Having中可以使用聚合函数。</p></li><li><p>HAVING 子句可以让我们筛选成组后的各组数据，WHERE子句在聚合（聚合函数如SUM, COUNT, MAX, AVG等）前先筛选记录．也就是说作用在 GROUP BY 子句和 HAVING 子句前；而  HAVING 子句在聚合后对组记录进行筛选。</p></li><li><p><strong>结论：</strong></p><ol><li><p>当分组筛选的时候 用having</p></li><li><p>其它情况用where</p></li></ol><p>用having就一定要和group by连用，<br>用group by不一有having （它只是一个筛选条件用的）</p><p>只要条件里面的字段, <strong>不是表里面原先有的字段就需要用having</strong>。</p><p>SQL在查询表的时候先把查询的字段放到了内存里，而<strong>where查询的时候是从表里面查的，其余需要用having</strong>。</p></li></ul></li><li><p><strong>接7. 你会窗口函数吗？你能解释一下ROW_NUMBER 和RANK_NUMBER的区别吗？</strong></p></li><li><p><strong>你本科经济学，为什么转商业分析？</strong></p></li><li><p>你这段时间怎么安排，什么时候开学？一周实习几天？</p></li><li><p>反问环节</p></li></ol><p>‼️二面 （45分钟）</p><ol><li>自我介绍</li><li>在过去的经历中，哪个经历给你印象最深刻，简单介绍一下？（我选了ML课程项目）</li><li><strong>接2. 详细问了项目里用的逻辑回归原理，适用性？</strong></li><li><strong>接3. 你用python中的什么包来做逻辑回归？（具体到sklearn里的细节，包括评价指标）</strong></li><li><strong>接4. 你可以举一个逻辑回归作为分类器可行的数据吗？可以用你自己项目中的数据</strong></li><li><strong>接5. 询问项目中用到的平衡数据集的SMOTE方法。</strong></li><li>继续SQL，和一面问的差不多就不详细说了</li><li><strong>你怎么评价淘宝这个平台的好坏？（业务题）—选择指标</strong></li><li><strong>如果淘宝业绩下滑你觉得是什么原因，怎么分析？</strong></li><li><strong>你了解商业分析岗位吗？能仔细和我说说吗？它和数据分析的差别在哪？</strong></li><li><strong>什么契机让你选择商业分析？</strong></li><li>你这段时间怎么安排？（和一面10.差不多）</li><li>反问环节。（这里反复追问你还有什么问题吗让我很慌）</li></ol><p>‼️三面（20分钟）</p><ol><li>自我介绍</li><li>选一个你觉得印象最深刻的项目来介绍？</li><li><strong>你本科经济，为什么硕士读数据分析？之前没有相关经历，为什么转岗？</strong></li><li>你怎么评价自己？</li><li>你的职业规划？</li><li>是哪里人？</li><li>你的兴趣爱好？（因为兴趣爱好很独特被追问了几个问题）</li><li>你有什么想问的？（当时问了怎么评价我，他说不会在这个环节评价应聘者）</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a class="link"   href="https://www.sohu.com/a/334675712_825456" >超市营运指标分析，七个方法任你采用！ <i class="fas fa-external-link-alt"></i></a></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;字节商业化战略分析日常实习生&quot;&gt;&lt;a href=&quot;#字节商业化战略分析日常实习生&quot; class=&quot;headerlink&quot; title=&quot;字节商业化战略分析日常实习生&quot;&gt;&lt;/a&gt;字节商业化战略分析日常实习生&lt;/h1&gt;&lt;p&gt;【一面】&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;经历面：</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>商业分析｜数字化和数字化转型</title>
    <link href="https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E5%AD%97%E5%8C%96%E5%92%8C%E6%95%B0%E5%AD%97%E5%8C%96%E8%BD%AC%E5%9E%8B/"/>
    <id>https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E5%AD%97%E5%8C%96%E5%92%8C%E6%95%B0%E5%AD%97%E5%8C%96%E8%BD%AC%E5%9E%8B/</id>
    <published>2023-03-10T12:51:06.000Z</published>
    <updated>2023-03-10T12:57:27.270Z</updated>
    
    <content type="html"><![CDATA[<p>假设你叫屎蛋，是一个大学生，你生活在2015年，你是一个天才，常常会有一些能赚钱的小点子。暑假有一天，你跟朋友去饭店吃饭，手机没电了。你翻了翻自己的包，发现自己的充电宝也忘记带了。于是你想，要是现在有人能借一个充电宝给自己用，哪怕付给他2块钱或3块钱，只要能让你充半个小时你都愿意。在这一瞬间，这一个小小的想法让你产生了灵感，既然你作为一个普通人有这个需求，那说明还有很多跟你一样的人也会有这个需求。这是一个很好的创业项目啊！</p><p>换成大部分普通人可能想想就算了。可你毕竟不是普通人。你决定立刻动手干。</p><p>首先，你得找一个做生意的地方。你想起来你二大爷开了个火锅店，生意听说还挺火爆的，于是你找二大爷商量，能不能在他的店里做租充电宝的生意。二大爷人很好，夸了句“屎蛋从小就聪明”，就这样同意了。</p><p>你买了10个充电宝，又设计了一个闪闪发光的小牌子，牌子上写着“借充电宝，1元&#x2F;小时”。你把小牌子和充电宝放在了门口的收银台上，这样生意就算开张了。</p><p>你算了笔账，一个充电宝成本是50元，如果每天能借出去3小时，每天就能收入3元，一个月30天就能收入90元，怎么算一个月都肯定回本啊。从第二个月开始，每个充电宝都能给你带来接近100块的收入，10个就是1000块，而成本就是每天给充电宝充满电的电费，几乎可以忽略不计。这只是10个充电宝，如果你买1000个充电宝，在全县多找点饭店都做租充电宝的生意，那一个月的收入就是10万元了。如果再能铺到全国，那还了得！你越想越兴奋。伴着这股兴奋劲，你站到了收银台后面，开始了第一天的尝试。</p><p>陆陆续续开始有人进饭店吃饭，很多人进门时都扫了一眼你立在收银台上的小牌子。你心想，宣传效果算是达到了。不一会儿，果然有人来找你借充电宝了。你在小本子上记下了每一个借充电宝的人吃饭的座位号和开始借用的时间，你告诉他们记得及时还过来，如果超过了一个小时是要收两块钱的。你扫视着每一个借了充电宝的人，心里计算着他们已经借了多久了，一会儿要付你多少钱。同时，你也盯着他们怕他们有心的或无意的把你的充电宝带走了不还给你了。</p><p>墙上时钟的分针在一圈一圈地转着，饭店里吃饭的客人来了一波又一波，你的收银台小摊位前也是不同的客人来来回回，有借有还，倒也热闹。不知不觉，已经晚上十二点了，饭店里面几乎没有客人了，是时候盘点一下今天第一次尝试的战绩了。10个充电宝都还回来了，有5个被借了3次，有3个被借了2次，有2个被借了1次，总共收入了23元。结果比预想的差一点，但也还算不错啊。你觉得这个事可以坚持做下去。</p><p>接下来几天，你还像第一天那样继续站在柜台后面借充电宝给饭店的顾客。每天的收入相对比较平均，饭店生意好的时候，你的借充电宝的生意也会跟着好一点，饭店生意差的时候，你的生意也跟着差一点。这样看来，借充电宝这个需求还是相对普遍的，第一天收入的23元并非是偶然现象。</p><p>这个结果让你胆子肥了起来，你决定涨价。一开始你想要涨成一小时两块钱或者一小时一块五，但你却怕顾客觉得贵。后来聪明的你灵机一动，你要让顾客感觉还是一块钱一次，但是改成每半小时一块钱。真鸡贼。</p><p>涨价以后，屎蛋你继续在二大爷的店里测试效果。又经过了几天的测试，你发现借充电宝的人并没有比以前变少，与此同时收入却有了小幅度的增长。你对自己制定的涨价策略非常满意。</p><p>在过去不到两个星期的时间里，二大爷店里的十个充电宝已经给你带来了300多元的收入，眼看着再用不了几天，你就能收回前期投资的500元了。再往后，每个月一千多元的收入就几乎都是你的纯利润了。此刻，你决定扩大生意规模。</p><p>头疼的事情来了。你一个人只能看着二大爷店里的充电宝生意。如果你再谈好一家饭店愿意放上你的充电宝，谁来帮你看着充电宝不丢，谁来帮你收钱呢。你想到了雇佣一个人，但一个饭店一个月借充电宝的收入也不过1000多元，你自己是因为闲着也是闲着才愿意做这个生意的，这点钱哪里够雇一个人的呢？</p><p>聪明如你，很快就想到了解决方案。二大爷店里有那么多的服务员，而且收银员本来就会一直呆在前台。如果跟二大爷谈一下，把每个月收入的一千多元分一半给二大爷，让二大爷要求店里的员工帮你看着充电宝和帮你收钱，这样你不就不用雇人了嘛。而且这个模式到每个饭店都可以复制了。于是下午二大爷不忙的时候，你就找他谈了。二大爷人很好，依然夸了一句“屎蛋从小就聪明”，就这样又同意了。</p><p>二大爷这边的问题已经解决了，你开始跑其他陌生的饭店，找老板谈合作了。你以为会很顺利呢，可没想到刚开始谈第一家饭店就遇到了困难。人家老板跟你说，我们平时挺忙的，实在没空帮你照看充电宝；就算我们有空帮你照看，你每个月分我这几百块钱，对我们饭店来说实在太少了；退一万步讲，就算我们愿意做这个事情，那我们为什么不自己去买几个充电宝来借给客人呢？</p><p>你觉得老板说的很对呀，你也回答不了老板这些问题。但是好在你是一个很有韧性的人，你不愿意就此放弃，所以你又用了两天时间继续跑了附近几条街上的几十家饭店。也算是功夫不负有心人，又有四家饭店的老板被你说动了，同意试试看。你又买了几十个充电宝提供给了这些饭店。到此为止，已经有五家店同时在帮你运营的借充电宝的生意了。如果还是能达到之前你二大爷店里的收入水平的话，你一个月也会有三千多块钱入账了。这笔钱对于你这样一个大学生来说，算是一笔不少的钱了，每个月是花不完的。</p><p>就在你正开心着的时候，二大爷的店里传来了不好的消息，充电宝丢了一个。二大爷倒也没有显得很抱歉，只是微笑着跟你说店里忙起来的时候实在是看不过来，可能有的客人自己也忘了还了，带回家了，于是就丢了。你的心里也没有怪二大爷，你在想靠人来这么看着的确是看不过来。如果不想个办法，别的饭店的充电宝可能也会陆陆续续开始丢。</p><p>聪明如你，再次灵机一动，想到了收押金。一个充电宝收顾客五十块钱的押金，顾客还充电宝的时候再把押金还给顾客。于是你跟二大爷和其他四个饭店的老板沟通了一下，有两个老板很不开心，觉得又给自己增添了麻烦，但是最后也勉强接受了。</p><p>就这样，你的充电宝生意就继续运转起来了。你每天会到放了充电宝的饭店里面转一转，看看情况。每周你会找饭店老板结账。结账的时候，你发现有的饭店的收入总是会比别的饭店低很多。你怀疑是饭店老板给你报的账目有问题，但是你实在是没有证据，而且你也不想为了这点钱撕破脸皮，也就算了。但是对于这个问题，哪怕聪明如你，也始终没有想到更好的解决办法。这也是你没有尝试把生意扩张到更多的饭店的原因。</p><p>很快暑假就要结束了，你要回学校了。你算了算账，几十个充电宝的本钱基本上快要收回来了。你想着，回学校以后，家里这些饭店的充电宝就让他们继续运营着。你也不会再像之前一样有很多时间去巡店了，每周饭店老板愿意给你算多少收入就多少收入吧。就当个不亏本的小生意这么做着吧，哪怕到最后有的饭店不愿意再跟你合作了，这些饭店的充电宝你还可以再拿回来在二手市场低价处理掉。</p><p>回到学校后，你仔细复盘了一下这个生意。用户的需求是真实存在的，你的解决方案也能满足用户的需求。唯一的不足就是这个生意似乎很难复制，很难扩大规模去做。你自己可以跑几十家店甚至几百家店，但如果要把这个生意做到别的城市做到全国呢？谁去跑饭店呢？如果招销售去跑，那一个销售一个月好几千块钱的底薪，要借多少充电宝才能赚回来啊。而且，这些充电宝放到饭店以后还得有自己的人去巡店看着，不然根本没办法解决饭店老板不出力或做假账的问题。因此，这个项目一旦扩大以后，风险太高了，只能当个小生意来做。</p><p>此后，你就把重心放到了学校的事情上面，充电宝这个事情你就没有多想。</p><p>时间来到了2016年夏天，还有半个月你就要毕业了。一天，你跟同学们到学校附近的饭店聚餐，你突然发现饭店门口的柜台上放了一个叫做“随心充”的小箱子，里面似乎插满了充电宝。你向老板打听了一下，老板说这个共享充电宝是别的公司放在这里的，用手机扫码以后就会弹出来一个充电宝给你拿走用。这是你第一次听到“共享充电宝”这个词，你当时兴奋极了。一方面你觉得找到了知音，另一方面你又在懊悔自己当年怎么没想到这个项目还可以这么玩。</p><p>充电宝有了外面的这个小箱子，当年困扰你的问题全都迎刃而解了。所有的充电宝不再需要人来看着了，也不用担心饭店老板报假账了。箱子里面的每个充电宝，谁借的，借了多久，系统里面都会有记录。用户付的钱也直接通过线上支付到公司的账户了。有了这么个小箱子，共享充电宝这个生意一下子变得可复制、可无限扩大规模了。</p><p>聚餐饭局上，你显得心不在焉。你好奇到底是什么样的公司，什么样的创始人想到了这样的解决方案。同时，你也觉得这个项目一定能做的非常大。带着好奇和对未来的憧憬，聚餐还没结束你就已经决定，毕业后要到这家运营“随心充”的公司应聘。</p><p>你顺利的应聘上了这家公司的销售员岗位。这时你才知道，给充电宝套上小箱子只是这家公司“黑科技”的冰山一角。公司有一支几百人的软硬件研发团队，研发出的“黑科技”很多。<strong>就拿你们销售岗位来说，公司研发了一款APP给你们每一个销售员使用。在这个APP上，你能看到你所负责的区域是哪一片，在这片区域里有哪些饭店还没有部署你们的充电宝，这些饭店就是你的潜在客户了；你也可以看到你已经签约的饭店的充电宝使用情况，包括用户扫码支付的每一笔订单，用户当前使用的时长，每个饭店的借充电宝的销售额排名等；你也能够看到你负责的饭店的总销售额在你的部门的排名，甚至是在全公司的排名；你还可以在APP上远程修改任何一台充电宝机器的单价，对于生意好，充电宝供不应求的饭店，你可以在APP上把单价调整地更高。</strong></p><p><strong>总结来说，通过一个APP，你就能掌控你所负责的所有充电宝机器的运营。</strong>你在想，<strong>作为一个普通的销售员尚且有这么强大的运营工具，那你的销售主管、公司的销售总监、公司的运营部门、公司的董事会，他们的运营工具得强大多少倍啊。</strong>应该说，<strong>全公司的业务运营都是被复杂的系统监控和协调起来的，公司各级人员都可以在线实时查看自己权限范围内的各个维度的业务数据。每个人都能根据这些业务数据做出及时的业务决策。</strong><u>比如从你一个普通销售员的角度来说，你可以及时发现哪家店的销售额总是垫底，继而重点研究这家店的情况，是饭店老板把充电宝放在了比较偏僻的角落，还是充电宝硬件有故障，根据具体原因你就可以给出对应的调整策略。销售主管也可以及时发现手下的哪个销售总是业绩不佳，继而对他重点帮扶。销售总监则可以盯着各个城市的大盘数据，去看每个城市销售额的增长曲线，哪个城市增长乏力，哪个城市已经饱和且稳定，这些都通过屏幕尽收眼底。公司最顶层领导每天晨会也会通过系统来盯数据，今天的数据环比是增了还是减了，增和减的原因是什么，充电箱的故障率是否维持在健康水平，用户的平均租借时长是否稳定等等。你惊叹于公司软件系统的强大。</u></p><p>在公司呆久了，你慢慢知道这样的运营方式也并非你们公司的独创。这种运营方式有一个名称叫做：<strong>数字化</strong>。<strong>公司通过软硬件相结合的技术手段，把有价值的业务数据及时地采集、计算、呈现。每一级的业务负责人都有了自己的数字驾驶舱，可以实时掌握多维度的业务数据、随时分析数据发现问题、尽早介入异常环节；而如果业务数据一切正常，各级负责人则可以放心让业务继续运转，自己则把精力放到与竞争对手竞争策略的调整、新人的培养、新市场的开拓、新业务的创新上面。</strong></p><p>联想到自己一年前完全靠人工来经营充电宝的生意，只经营了5家饭店都困难重重。而现在自己所在的公司通过数字化的方式来运营同样的生意，却每个星期都在开辟新的城市，很快就能占领全国市场。再看看现在公司上下，<strong>从CEO到一线销售员，大家全部都数字导向，用数字说话，很少的主观臆断。公司技术部门不断研发更强大的数字化管理系统。</strong>这短短一年多的两段经历不断在你的脑海里闪过，你似乎一下子就明白了数字化的含义、数字化的意义。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;假设你叫屎蛋，是一个大学生，你生活在2015年，你是一个天才，常常会有一些能赚钱的小点子。暑假有一天，你跟朋友去饭店吃饭，手机没电了。你翻了翻自己的包，发现自己的充电宝也忘记带了。于是你想，要是现在有人能借一个充电宝给自己用，哪怕付给他2块钱或3块钱，只要能让你充半个小时你</summary>
      
    
    
    
    
    <category term="商业分析" scheme="https://artemis727.github.io/tags/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>商业分析｜飞书</title>
    <link href="https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E9%A3%9E%E4%B9%A6/"/>
    <id>https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9C%E9%A3%9E%E4%B9%A6/</id>
    <published>2023-03-10T12:44:40.000Z</published>
    <updated>2023-03-11T06:37:58.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="❓竞品分析：飞书-amp-叮叮-amp-企业微信"><a href="#❓竞品分析：飞书-amp-叮叮-amp-企业微信" class="headerlink" title="❓竞品分析：飞书 &amp; 叮叮 &amp; 企业微信"></a>❓竞品分析：飞书 &amp; 叮叮 &amp; 企业微信</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>钉钉卖的是“云钉一体”的生态，背后有阿里云做撑腰；企微背靠的是微信的强连接能力，在对外连接层面一直有较强的说服力；而“后发者”飞书，只能靠输出“先进管理”的理念和出色的产品力来取胜。</p><h2 id="竞品分析"><a href="#竞品分析" class="headerlink" title="竞品分析"></a>竞品分析</h2><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-6ac2a06e0445f244959c245ae9765018_1440w.webp"                      alt="img"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-b430778bf2e19dee934ed69ad8a8f2d0_1440w.webp"                      alt="img"                ></p><p><strong>总结&amp;建议</strong></p><p>1、<strong>细分行业切入</strong>：通过分析，可以看出钉钉在国内市场中拿下了大部分的中小企业，并且功能齐全，飞书刚刚入局，策略上应该避免正面与钉钉碰撞。字节跳动在内容产品上具备行业领先地位，自媒体背后的组织，可以作为飞书入局的切入点，在一个行业先做深，打造爆点；</p><p>2、<strong>应用平台建设</strong>：基础功能的补全，从海外市场到国内市场，一些习惯需要随着用户改变，在功能上，应该增加补全企业管理类功能，加速应用开放平台建设，吸引ISV（Independent Software Vendors，独立软件开发商）入驻，这里应该给创业型的ISV更多支持；</p><p>3、<strong>由内到外</strong>：字节跳动是近几年国内发展最快速的互联网公司，其公司内部优秀的管理方案和协同办公方案，应该随着飞书的扩展推向市场，推出解决方案的同时输出自身的管理理念。</p><h2 id="飞书-VS-叮叮"><a href="#飞书-VS-叮叮" class="headerlink" title="飞书 VS 叮叮"></a>飞书 VS 叮叮</h2><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-57574bdb15bc666e6468c2c79cb32b86_1440w.webp"                      alt="img"                ></p><p>从两个ToB工具的理念，不妨看出来，钉钉坚持的事是“服务老板、服务企业”，坚持的观念也是“老板在哪里、员工在哪里”，也就是说管理理念是自上而下的。</p><p>而飞书的理念是提高所有人的效率，打工人用也是帮你提高效率，早点完活儿，多点时间思mou考yu，老板用也抓紧时间处理工作，看到大家都干什么呢？老板也放心。透着些许的“前进”的味道，打工人没有蹭公司流量，老板也看到大家都有产出，而解决这些问题的载体就是【飞书】，并且飞书上面的特色功能。<u>迭代本地文档的在线文档，迭代老式会议的飞阅会，帮出输出价值的飞书妙计。本质上都是在创新和引领，用先进更好的，能够真的解决很多问题的方式，变成工具，让大家用工具，顺便解决了很多大家已经不以为然的诟病。</u>因为我们在工作中，有多少次都觉得会议低效，缺只能说一句“都这样”而浪费了一天的宝贵时间呢？</p><h1 id="👩🏻‍💼HR-SaaS：飞书招聘"><a href="#👩🏻‍💼HR-SaaS：飞书招聘" class="headerlink" title="👩🏻‍💼HR SaaS：飞书招聘"></a>👩🏻‍💼HR SaaS：飞书招聘</h1><blockquote><p>据公开资料，尽管遭遇疫情，字节跳动在2020年依然由6万人迅速扩张到近10万人规模，尤其值得注意的是，90%的人都是通过飞书招聘线上面试完成。</p></blockquote><h2 id="打破招聘“伪线上，真线下”"><a href="#打破招聘“伪线上，真线下”" class="headerlink" title="打破招聘“伪线上，真线下”"></a>打破招聘“伪线上，真线下”</h2><p>飞书招聘和其他招聘工具最大不同在于<strong>彻底走向了线上化与智能化，并实现了在统一系统下的无缝体验。</strong>遵循奥卡姆剃刀原则，<strong>飞书招聘去掉了传统招聘中存在的诸多干扰因素（如线下面试的交通时间），将需求复杂的企业人力资源需求体系化，简化了过去繁琐的管理模块，并通过直接调用飞书内的视频功能进行视频面试。</strong></p><ul><li><p><strong>一方面是到面率的大幅提升。</strong>线下面试，往往需要候选人腾出3个小时的时间，但其中很大部分是花在路上的时间，而通过飞书视频面试，省去了三分之二的时间，也解决了因为不可控原因造成了迟到问题。</p></li><li><p><strong>另一方面，围绕沟通中的不同环节提供数字化服务。</strong>飞书招聘一个重要功能在于通过视频录制和语音转文字技术，将面试数据更好以数字化形式沉淀下来，不仅能帮助企业分析面试过程和面试问题，提高面试质量和面试官水平；也能在发生面试争议的时候找到确凿的记录。另一个功能是在面试中通过数据库为面试官提供参考的面试问题，进一步提升双方的沟通效率。</p></li></ul><p>飞书招聘是有“根”的，它<strong>根植于飞书这一办公协作体系之上</strong>，在打通飞书日历、视频、群聊天、搜索功能之后，飞书招聘作为“非主流”的面试方式有了主流平台的硬底子，这是企业管理者希望看到的，因为这不但实现了企业办公、招聘的全面线上化，也<strong>降低了跨平台使用HR SaaS服务的难度</strong>。</p><h2 id="顺趋势而行：智能化、轻量化"><a href="#顺趋势而行：智能化、轻量化" class="headerlink" title="顺趋势而行：智能化、轻量化"></a>顺趋势而行：智能化、轻量化</h2><p>飞书招聘的一大优势在于<strong>使用智能化的数据处理方式，提高了企业制定人才发展战略的效率</strong>。通过AI技术，飞书招聘不仅<u>能自动对简历进行标准化处理，提供一套可以快速查阅的标签标注系统，让HR在招聘时一眼便知应聘者的多种信息</u>。同时，飞书还能<u>自动对应聘者的企业和学校信息进行补充</u>，从而减轻HR和用人部门的<u>查询调研成本</u>。</p><p>此外，为了优化人才选拔环节，飞书招聘还<strong>打造了一个“聪明”的人才库</strong>，这也让传统招聘望尘莫及。这个人才库能够<u>快速解析求职者简历，并自动生成企业所需要的标准简历</u>，即便应聘者没有进入最终环节，也<u>会进入企业历史人才库，并在之后企业有用人需求时进行智能匹配</u>，对于企业来说，这样的<strong>可持续人才战略</strong>是最能帮助其快速发展的方式。</p><p>另外，面试时的一些<strong>细节</strong>也让企业在线上招聘时更加灵活，比如飞书招聘能将<u>面试官可用面试时间进行智能推荐</u>，让候选人直接自助选择面试时间，而这将进一步释放HR面试邀约的工作量。</p><p>随着时间推移，我们看到<strong>当前国内HR SaaS逐渐细化为三类不同服务：</strong></p><ul><li><strong>第一类提供综合类的HCM（人力资源管理系统），主要面向大企业；</strong></li><li><strong>第二类以轻量级HR SaaS为切入，功能覆盖人事管理、考勤、OA等功能；</strong></li><li><strong>第三类是介入薪资计算、灵活用工、聚合招聘、智能排班的人力资源管理机构。</strong></li></ul><p>尽管相较于海外，中国在这三类服务中都还处在发展早期，但不少投资人都认定，<strong>其中都有望诞生SaaS行业的独角兽企业，飞书招聘成长时间不长，但其依托飞书平台进行的轻量化服务显然正在改变SaaS行业生态</strong>。</p><p>疫情之后，远程办公成为常态，而求职者越来越年轻化，互联网原住民越来越多，时间正在证明线上招聘的价值，而飞书招聘的存在，在帮助企业更快适应这种变化。</p><h2 id="一切回归招聘本质"><a href="#一切回归招聘本质" class="headerlink" title="一切回归招聘本质"></a>一切回归招聘本质</h2><ul><li>传统招聘平台：简历等资料虽然集中在线上，<strong>但面试、反馈、内部沟通等依然通过线下进行</strong>，这造成了<strong>招聘效率</strong>较低，并且无论对面试官或者是应聘者，面对临时出现的情况并不能灵活进行调整，因此<strong>沟通成本</strong>也很高。</li><li><strong>飞书招聘能够深入招聘的每一个细微环节，为面试官进行优化</strong>，这不仅让管理者有了更好的产品体验，也为企业节省不少用人成本。如今看来，<strong>能够为企业节省用人成本的HR SaaS服务越来越受到资本青睐</strong>，去年8月，Moka完成B+轮过亿元人民币融资，今年5月，大型一体化HR SaaS及人才管理平台北森更是完成2.6亿美元规模的F轮融资，成为国内HR SaaS领域最大一笔股权融资。</li></ul><p>而这些HR SaaS服务的崛起，也开始影响越来越多求职者的求职方式。如今，中国有超1.38亿人通过互联网寻找就业机会，互联网招聘行业的增长红利仍在释放中。这种情况下，企业如何吸引和留住顶尖人才愈发重要，正如国际猎头顾问协会总裁兼首席执行官Karen Greenbaum所说，<strong>企业“应重视数字转型，即需要改变商业模式以适应数字化发展。”</strong></p><p>飞书招聘的出现印证了这种变化，在融合移动端与PC端，努力提升效率以及面试体验的同时，<strong>招聘成为飞书的一个支撑点，并延伸出飞书绩效这样的产品，以便打通员工从进入公司开始的整个职业生涯，将其工作数据全面数字化。</strong></p><p>而数字化则是许多企业期望实现标准化管理的重点，据了解，目前飞书已经收获了包括<u>理想汽车、元气森林、华住酒店、安克创新</u>等企业客户，<strong>这些企业对于HR SaaS服务也有着极大需求</strong>，飞书招聘的出现，其实正在影响越来越多这样的企业，并有助于其提升企业竞争力，正如字节跳动副总裁谢欣所说：</p><p>“<strong>飞书不仅在于提升效率，更是为提升组织而打造的工具</strong>，在知识经济时代，飞书将帮助企业成为更有竞争力的组织。”</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a class="link"   href="https://www.sohu.com/a/555378371_120440231" >飞书要不要做生态？剖析第一家 All in 飞书的独立 SaaS 案例 <i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://zhuanlan.zhihu.com/p/395599373" >飞书招聘，站在人力资源与SaaS的十字路口<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://zhuanlan.zhihu.com/p/138606957" >你所不知道的飞书，飞书竞品分析报告<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.zhihu.com/question/517791179" >如何看待大量公司用钉钉不用飞书?<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;❓竞品分析：飞书-amp-叮叮-amp-企业微信&quot;&gt;&lt;a href=&quot;#❓竞品分析：飞书-amp-叮叮-amp-企业微信&quot; class=&quot;headerlink&quot; title=&quot;❓竞品分析：飞书 &amp;amp; 叮叮 &amp;amp; 企业微信&quot;&gt;&lt;/a&gt;❓竞品分析：飞书 &amp;</summary>
      
    
    
    
    
    <category term="商业分析" scheme="https://artemis727.github.io/tags/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>商业分析｜SaaS</title>
    <link href="https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9CSaaS/"/>
    <id>https://artemis727.github.io/2023/03/10/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%EF%BD%9CSaaS/</id>
    <published>2023-03-10T09:27:18.000Z</published>
    <updated>2023-03-10T14:45:27.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="❗️什么是SaaS？"><a href="#❗️什么是SaaS？" class="headerlink" title="❗️什么是SaaS？"></a>❗️什么是SaaS？</h1><ul><li><p>SaaS的英文全称是Software as a Service，意思是软件即服务。它是一种通过Internet提供集中托管应用程序的方式，是云计算的一种服务模式。</p></li><li><p>SaaS的本质是一种软件的交付模型，即不向用户交付最终的软件产品，软件作为用户使用的服务而存在。Software as a Service 就相当于软件中的租借模式。</p></li><li><p>SaaS 用户可以进行软件定制化，但并不拥有软件的所有权。SaaS的软件所有权属于软件提供商，软件提供商需要维护系统的正常运行。</p></li></ul><h1 id="🧾SaaS的功能特性"><a href="#🧾SaaS的功能特性" class="headerlink" title="🧾SaaS的功能特性"></a>🧾SaaS的功能特性</h1><ol><li><p>在统一的地方管理</p></li><li><p>托管在远程服务器上</p></li><li><p>可以通过互联网访问</p></li><li><p>用户不负责硬件或者软件更新</p></li></ol><h1 id="✍️Salesforce-SaaS的竞争优势"><a href="#✍️Salesforce-SaaS的竞争优势" class="headerlink" title="✍️Salesforce: SaaS的竞争优势"></a>✍️Salesforce: SaaS的竞争优势</h1><p>在1999年之前，企业如果想要采购一套软件，通常需要花上数百万美元购买，并用数月时间来进行部署。即便是更简单的民用软件，也需要花费几百元购买一张光碟回家安装（还记得当年装在盒子里面卖的瑞星小狮子吗？）。</p><p>Salesforce 主打了软件即服务这个理念，也带来了巨大的竞争优势：</p><ol><li>费用降低，对企业来说支持按月付费，也支持按席位付费。</li><li>部署更快，只需要降低到一两周时间就可以使用，后来的系统更是可以做到打开即用。</li><li>更新更快，以前需要用光碟的形式安装的，现在联网之后可以自动迭代升级。</li></ol><h1 id="💻SaaS的代表性产品"><a href="#💻SaaS的代表性产品" class="headerlink" title="💻SaaS的代表性产品"></a>💻SaaS的代表性产品</h1><h2 id="企业资源计划（ERP）"><a href="#企业资源计划（ERP）" class="headerlink" title="企业资源计划（ERP）"></a>企业资源计划（ERP）</h2><ul><li><p>Enterprise Resource Planning</p></li><li><p>没有ERP的时候，如果客户打来了电话表示对库存当前数据有疑问，要求核查数据，业务人员只能拿着合同到处跑，必须将<a class="link"   href="https://www.zhihu.com/search?q=%E9%87%87%E8%B4%AD%E9%83%A8&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2585923122%7D" >采购部<i class="fas fa-external-link-alt"></i></a>、生产部、销售部调查个遍才能发现问题，搜集数据，解决问题，效率低下。<br><strong>有了ERP后，所有的流程、文档、事务都可以在线上，取代了之前的线下文档，可以直接调取ERP系统中的库存数据与客户及时核对。公司ERP系统贯穿整个<a class="link"   href="https://www.zhihu.com/search?q=%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2585923122%7D" >业务流程<i class="fas fa-external-link-alt"></i></a>，业务人员再也不用东跑西跑，手机或电脑上就能与各部门数据互联互通。</strong></p></li></ul><p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-384b887a6c1cc37715f574897f4099a0_1440w.webp?source=1940ef5c"                      alt="img"                ></p><ul><li><strong>ERP的价值：帮助企业实现信息化。</strong></li></ul><h2 id="客户关系管理（CRM）"><a href="#客户关系管理（CRM）" class="headerlink" title="客户关系管理（CRM）"></a>客户关系管理（CRM）</h2><ul><li>Customer Relationship Management</li></ul><h2 id="协同oa（OA）"><a href="#协同oa（OA）" class="headerlink" title="协同oa（OA）"></a>协同oa（OA）</h2><ul><li>Office Automation</li><li>eg. 钉钉，明道，teambition</li></ul><h2 id="人力资源管理（HRM）"><a href="#人力资源管理（HRM）" class="headerlink" title="人力资源管理（HRM）"></a>人力资源管理（HRM）</h2><ul><li><p>Human Resource Manager</p></li><li><p>主要功能是招聘、培训、员工关系、绩效考核、薪酬福利、继任管理等。</p></li><li><p>核心用户是HR。</p></li><li><p>代表性产品有51社保、薪人薪事、北森等。</p></li></ul><h2 id="财务控制（FICO）"><a href="#财务控制（FICO）" class="headerlink" title="财务控制（FICO）"></a>财务控制（FICO）</h2><ul><li>Fiance + Controlling</li><li>企业财务咨询、核算、报账、预算控制、财务分析等。 -&gt; 云代记账、费控、差旅报销管理。</li><li>核心用户是财务人员。</li><li>代表性产品有云账房、闪电报销、易快报等。</li></ul><h2 id="通信-x2F-即时通讯（IM）"><a href="#通信-x2F-即时通讯（IM）" class="headerlink" title="通信&#x2F;即时通讯（IM）"></a>通信&#x2F;即时通讯（IM）</h2><ul><li>Instant Messaging</li><li>用于办公环境下的即时通讯、软电话、邮箱、会议系统、呼叫中心等。主要细分领域为云客服、云视频会议、云呼叫中心。</li><li>核心用户是全员和客服。</li><li>代表性产品有网易七鱼、环信、智齿客服等。</li></ul><h2 id="网盘-x2F-企业内容管理（ECM）"><a href="#网盘-x2F-企业内容管理（ECM）" class="headerlink" title="网盘&#x2F;企业内容管理（ECM）"></a>网盘&#x2F;企业内容管理（ECM）</h2><ul><li>用于文件的存储、共享、预览、编辑、同步以及写作功能</li><li>代表性产品有<strong>联想企业网盘</strong>、亿云方、坚果云等。</li></ul><h2 id="商业智能（BI）"><a href="#商业智能（BI）" class="headerlink" title="商业智能（BI）"></a>商业智能（BI）</h2><ul><li>用于数据分析、数据可视化，为企业为企业精细化运营和产品优化提供参考。</li><li>核心用户是运营和数据分析人员。</li><li>代表性产品有网易有数、FineBI、DataHunter等。</li></ul><h1 id="📈SaaS-市场的需求背景"><a href="#📈SaaS-市场的需求背景" class="headerlink" title="📈SaaS 市场的需求背景"></a>📈SaaS 市场的需求背景</h1><ol><li>云计算技术的成熟和产业链的扩大推动了SaaS服务的快速发展；</li><li>中小型企业发展迅猛，迎来数字化管理变革。企业急需提高管理效率并控制管理的成本，于是提托于云计算和互联网的SaaS服务的出现，帮助企业成功降低了运营成本，提高运营效率。</li><li>企业信息化与网络化程度不断提高，IT产品走向消费化；</li><li>SaaS行业的融资数量与金额呈爆发式增长。</li></ol><h1 id="💬业界对SaaS企业的评判"><a href="#💬业界对SaaS企业的评判" class="headerlink" title="💬业界对SaaS企业的评判"></a>💬业界对SaaS企业的评判</h1><ul><li><p>$优秀的SaaS企业 &#x3D; 低获客成本 + 高续约率$</p><ul><li>$客户生命周期价值 &gt;&#x3D; 3*获客成本$</li><li>$客单价 &gt; 获客成本$</li><li>$客户流失率 &lt; 5%$</li></ul></li><li><p>除了以上三个原则，SaaS企业自身还应该注重<strong>产品研发 + 运维服务 + 产品销售 -&gt; 提升服务</strong>，了解客户特性，来做好客户流失预警机制。</p></li><li><p>目前我国SaaS公司的业务收入和增长速度和国际水平仍差距较大。目前SaaS行业超过1亿收入的公司只有四五家，但是占领了业界领头羊的地位。</p></li></ul><h2 id="❓为什么巨头科技企业都在布局SaaS生态？"><a href="#❓为什么巨头科技企业都在布局SaaS生态？" class="headerlink" title="❓为什么巨头科技企业都在布局SaaS生态？"></a>❓为什么巨头科技企业都在布局SaaS生态？</h2><blockquote><p>近两年，中国ToB产业从无人问津逐步走向繁荣，而繁荣之下最令人关注的，无疑是阿里、腾讯、华为、字节跳动等C端互联网巨头对SaaS生态的重视。</p><p><u>不管是腾讯提出的SaaS千帆计划，还是阿里所谓的“被集成”，再到华为打造的“耕云”计划，字节跳动高调推出飞书</u>，都被认为是近一年中国SaaS市场最重要的事情。</p><p>尤其是经过疫情洗礼，<u>钉钉、企业微信、飞书、华为WeLink</u>用户量激增，在此基础上，阿里提出“云钉一体”全面发力SaaS市场；腾讯宣布将投入100亿资源打造SaaS生态；华为云紧随其后推出SaaS应用扶持计划；飞书也一直在招兵买马……</p><p><strong>· 为什么巨头都在布局SaaS生态？</strong></p><p><strong>· 中国SaaS生态又与国外有哪些不同？</strong></p><p><strong>· 构建成熟的SaaS生态，中国市场还存在哪些问题呢？</strong></p></blockquote><h3 id="❓巨头布局SaaS生态的原因"><a href="#❓巨头布局SaaS生态的原因" class="headerlink" title="❓巨头布局SaaS生态的原因"></a>❓巨头布局SaaS生态的原因</h3><ul><li>当前中国企业市场面临：C端的发展日趋饱和，B端的发展严重不足。因此<strong>搭建SaaS生态对巨头在B端市场的后续发展起着决定性作用。</strong><ul><li>首先，SaaS生态会直接影响各个巨头的<strong>公有云☁️</strong>市场份额。未来共有云市场发展的关键就是看谁能先建立起成熟的SaaS生态。</li><li>多数B端企业不会也不能直接使用公有云。企业需要一个整体的系统，<strong>将SaaS和公有云打包📦才能真正服务于B端企业。</strong></li></ul></li></ul><h3 id="✈️国外SaaS生态分析"><a href="#✈️国外SaaS生态分析" class="headerlink" title="✈️国外SaaS生态分析"></a>✈️国外SaaS生态分析</h3><ul><li><p>Salesforce（围绕市场和销售，CRM）</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-74b55b3dfd9531b1048641b7bb14e858_1440w.webp"                      alt="img"                ></p><ul><li>个性化功能扩展支撑，拓展模块市场</li><li>AI 支撑，预测销售线索和机会转化，类似客户群体分析</li><li>并购Tableau，Mulesoft，Heroku，Linkedin</li></ul></li><li><p>Slack（围绕协同办公）</p><ul><li>自己的应用市场</li><li>链接外部API，不同SaaS企业之间通过API接口实现互联互通</li></ul></li><li><p>微软</p><ul><li>把自己的优势产品转移到云上</li><li>实现自己的内部产品数据互通</li></ul></li><li><p>其他：Oracle，SAP收购云公司</p></li><li><p><strong>总结：</strong></p><ul><li><p>B端巨头围绕自己的优势产品建立生态，主要方式就是让自己的优势产品上云或者并购相关企业。</p></li><li><p>而Salesforce在CRM领域之所以能击败微软、SAP等传统巨头，就是因为它向用户提供一个<strong>全家桶式的集成化解决方案</strong>，同时优化自己的UI和易用性。Salesforce更为用户考虑，价格也更亲民。<img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-7919e49809867beaaee9bdf27c7b793f_1440w.webp"                      alt="img"                ></p></li><li><p>微软因为自己的产品线独立并且存在竞争，导致自己内部产品都存在信息孤岛问题；SAP最大问题是过于自信，用世界上最复杂的用户界面“恐吓”其用户并忽视了用户对其的讨厌程度。</p></li></ul></li></ul><p></p><h3 id="🚄国内SaaS生态分析"><a href="#🚄国内SaaS生态分析" class="headerlink" title="🚄国内SaaS生态分析"></a>🚄国内SaaS生态分析</h3><ul><li>阿里、腾讯、飞书、华为的SaaS生态与国外的B端企业建立SaaS生态不同，<strong>国内SaaS生态多是由C端的互联网巨头发起的。</strong>（当然，传统B端企业金蝶和用友也在向云端发展，华为也通过WeLink进入SaaS生态竞争，但阿里和腾讯建立生态的声音更大些。）<ul><li>这主要是因为<strong>阿里云和腾讯云的市场份额最大、实力最强。</strong>华为虽然实力也非常强，但更加擅长的是硬件通信部分，上层软件能力偏弱，而且云市场发力也比较晚。</li><li>财务软件方面，腾讯拉金蝶加入，阿里拉用友加入，其它方向也是各自对标：OA，建站服务，aPaaS平台，项目管理等。</li></ul></li><li>从整体看来，<strong>入选两个巨头加速器的SaaS厂商，通用型和无行业属性的的占绝大多数，垂直行业SaaS还非常非常少。</strong>除此之外，二者还依托<strong>微信小程序、支付宝小程序</strong>搭建生态。比如，利用小程序可以使用各类<u>共享文档、健康码</u>等产品。但相比之下微信小程序因为<strong>微信的社交属性</strong>更加容易传播，所以小程序方面，腾讯占优势。其实，微信小程序生态是一个繁荣的生态，企业使用的还是比较多的，但只是局限于前端销售和营销，后端需要对接ERP等线下系统，是一个非常松散的生态。<strong>相比阿里和腾讯，头条正在依托飞书建立自己生态，吸纳SaaS厂商进入飞书的ISV。</strong></li><li><strong>从这些巨头的市场应用和精选应用来看（主要是阿里、腾讯），绝大多数偏向<u>通用化解决方案和多样化需求相对少</u>的领域，在我看来这离成熟的生态的建立还差得很远。</strong></li><li>中国的市场环境和美国差异非常非常大，<strong>如果单纯模仿美国市场依靠通用化SaaS厂商，根本解决不了中国市场比美国更复杂的多样化需求。</strong>中国走美国的路线只能是死路一条，因为<strong>中国的多样化需求比美国多10倍。</strong></li><li>国内SaaS生态要解决的困难：<ul><li>国内的生态多是<strong>弱关联生态</strong>，除了技术问题，还要关心厂商站队、标准太多怎么建立、厂商的忠诚度等人心问题；</li><li>国内的生态内企业<strong>和生态外企业竞争</strong>问题，国内的SaaS企业盈利能力太弱，很难实现产业集中；</li><li>中国SaaS<strong>私有化部署价格太高</strong>，市场最终还是看企业的产品力；</li><li>人才技术问题。中国阿里、腾讯、字节这些互联网巨头的成功多是在C端，需要充分吸纳有丰富B端实战经验的一线技术老兵；（<strong>因为B端就是做好千千万万的小细节，没有长期一线积累是很难具备这些经验的，不深入一线了解客户的真正需求，就做不好B端产品</strong>）</li><li>国内SaaS生态的发展思路不能过度借鉴国外。<strong>中国市场环境特点是<u>需求多样化和支付能力弱</u>，除了不差钱的超大型企业以外，绝大多数企业还是看重实效的。<u>SaaS没有真正带来效果，是很难让企业持续付费的。</u><strong>SaaS企业必须去关注用户的感受，否则无法成功。Zoom在同质化严重的视频会议行业还能脱颖而出，就是因为</strong>创始人善于发现和关注用户感受</strong>。</li><li><strong>提升生态内SaaS企业的技术创新能力是必须的，以低成本满足客户多样化的需求，通过成熟的产品化大大降低成本和提升用户体验，建立集成化的全家桶解决方案，通过真正的产品实力打败生态外的群狼竞争对手，中国SaaS厂商、SaaS生态才有出路。</strong></li><li><strong>B端软件是一个技术密集型和靠持续行业技术积累的行业，和C端完全不同。所以企业的技术创新能力其实比模式创新、市场开拓能力更重要些。</strong></li><li>任何行业如果长期不能产生爆发，一定存在着技术门槛。C端的大爆发，是因为谷歌和开源社区解决了大数据问题，否则今天辉煌的一定是IBM和Oracle这些提供算力的公司。而<strong>B端软件持续发展能力非常重要，因为商业逻辑是持续发展而且多样化的</strong>。</li></ul></li></ul><h1 id="🤔一个有趣的回答：怎样向小白解释什么是SaaS？"><a href="#🤔一个有趣的回答：怎样向小白解释什么是SaaS？" class="headerlink" title="🤔一个有趣的回答：怎样向小白解释什么是SaaS？"></a>🤔一个有趣的回答：怎样向小白解释什么是SaaS？</h1><p>团队正在研发一款SaaS软件。</p><p>项目启动，最痛苦的事情莫过于“起个名字”了。能自然想得到的名字基本上都已经被别人注册商标了。又想不出“饿了么”这样别致的、一般人想不到的名字。</p><p>名字至今还是没有，不过在想名字的过程中，我倒是正儿八经地想了下“什么是SaaS”这个问题。</p><p>SaaS，Software as a service，软件即服务。</p><p>软件很好理解，可是软件为什么是服务呢？如果说“软件即工具”，我倒是很能理解。微信是通讯工具、朋友圈是社交工具、钉钉是企业内协同工具、淘宝是做生意的工具、当年的陌陌是XX的工具。明明是个工具，怎么可能是服务呢？</p><p>服务可以大体分为两种。一种是餐厅服务生提供的这类服务，是由于社会化分工导致的“专业技能输出服务”。澡堂大叔给你搓澡、技师给你按摩、医生给你看病，都属于这类服务。另一种服务是“经验知识传授服务”。这类服务在个人场景上比较少，在企业上比较多。各类咨询公司就在向企业提供这种服务。企业挖角同行大牛，其实也是希望这些人能够将自己积累起来的各种经验用在自己的企业上，帮助企业解决问题。</p><p>软件即服务，这里的服务指的就是上述的第二类服务。</p><p>假设，现在有一对夫妻开了一家中式快餐厅，暂且叫做“麦当鸡”吧。由于用料扎实、口味考究，很快积攒了大量的人气。半年后，餐厅收回成本，夫妻两考虑再开一家。但是，现在的餐厅赚钱是因为夫妻两花费了自己全部的精力，用心在做。如果再开一家店，那么就要分一半的精力到新店上，该如何保证两家店的餐品品质不变样呢？另外，原来两个人管理一家店，原材料自己去采购就好了。开了新店以后，自己采购忙不过来，必然要让员工来做，怎样保证原材料质量和采购方案合理呢？明年再开第三家、第四家店，这些问题会被不断放大，怎么办。</p><p>夫妻两想到，村里老赵家的屎蛋，据说长大毕业以后去了大企业“肯德劳”，现在听说都已经是区域经理了。不如找屎蛋咨询一下，看看怎么办，没准屎蛋愿意加入进来一起干呢。</p><p>趁着假期屎蛋回老家，夫妻两找屎蛋聊了聊，说了下自己的境遇。屎蛋说，自己现在正是事业上升期，而且也还想在大企业里面深入学习更多的东西，暂时不考虑换环境。不过，屎蛋给夫妻俩推荐了一款叫做“连锁通”的软件系统。屎蛋说，他们肯德劳也都是借助软件系统来进行一系列运营管理的。只要跟着软件的步骤去走，基本上日常经营的各个方面都能够通过软件系统进行管理。借助软件系统，员工也能明确的知道自己什么时间该做什么。可以说，这个软件系统基本上就相当于一个非常有经验的区域经理了。事实上，这个软件系统比一个区域经理还要厉害，因为它是大量的行业内专家一起参与设计出来的系统。</p><p>夫妻俩第一次听说软件这么厉害。用一个软件，毫无连锁店管理经验的他们也能把多家店铺管理好。将信将疑，他们使用了屎蛋推荐的这套“连锁通”系统。系统厂家派出了业务员到他们的餐厅对他们进行了两天的培训他们就基本上手了。</p><p>在上面这个场景中，“连锁通”软件不再仅仅是工具，它扮演了一个领域专家的角色。夫妻俩在使用“连锁通”的过程中，就像已经雇佣了屎蛋一样。每一步操作，夫妻俩就像是在问屎蛋：屎蛋，今天，我的各个门店各应该采购哪些原材料，各采购多少？屎蛋，为了减少用户等餐的时间，我是需要再雇一名后厨帮手还是需要再雇一名传菜员？屎蛋，新推出的菜品是否受到了用户的欢迎，需要如何改进？屎蛋，今天的营业额是多少，翻桌率是多少？每个问题，夫妻俩都能得到细致的解答。</p><p>陌陌是工具，一个用户不会因为使用了陌陌而成为XX高手。朋友圈是工具，每个人都用朋友圈，但并不是每个人都成为了社交达人。而上面这个假想的“连锁通”并不是工具，而是服务。夫妻俩因为使用了这个服务而成为了连锁店管理专家。</p><p>从这个角度发散。SaaS的概念其实自古就有。本质上，SaaS源自古时候的JaaS。</p><p>啥叫JaaS？</p><p>Jing as a service。经书即服务。</p><p>武侠小说里，如果想成为绝世高手，并不需要请一个多厉害的师傅。你只要得到一本九阴真经就可以了。</p><p>西游记里，唐三藏也并不需要留在西天学习个一年半载的。他只需要取得真经，便可以得道为高僧，进而成佛。</p><hr><p>2020-4-28补充。</p><p>喜欢我这个回答的人越来越多，这也让我思考我之前的回答是不是还有片面的地方。</p><p>之前是从价值的角度，说了软件是工具和软件是服务的区别。</p><p>最近我又在想，从商业的角度来说，如果软件不是服务，那软件还能是什么呢？</p><p>或者说，SaaS概念提出来之前的时代里面，软件是什么呢？</p><p>是商品。</p><p>之前的时代里，软件制造商把软件当成工业产品在售卖。</p><p>比如微软把Office办公套件软件刻录到光盘里面，多少钱一份往外卖。所有人都在卖软件的拷贝。</p><p>这时候的软件产业是属于第二产业，是工业的范畴。</p><p>而SaaS是属于第三产业，是服务业的范畴。</p><p>啥是工业，生产出来电视机放到商场里，3000块钱一台你买走，用坏了为止。</p><p>啥是服务业呢，你去做足底按摩，按一次给一次钱。技师给你按舒服了，你下次还去找他。你觉着这个技师不行，那大不了也就上这一次当，下次就翻别的牌子去了。</p><p>所以，SaaS就像足疗。</p><p>你不用花二十万去给公司上一套ERP系统，再每年花几万块钱去维护、修补、升级。</p><p>你只需要花几千块钱年费订阅一个类似功能的SaaS软件，用好了明年再续费一年。感觉用的不舒服，明年再找别家的软件来用。而且很多SaaS产品都可以免费试用一段时间呢。</p><p>如果你是客户，你会选择哪种方式呢？</p><p>在大佬们都把软件当成商品在做一锤子买卖的时候，突然有个聪明蛋想到了可以把软件当成服务业来做，按次收费。</p><p>于是软件行业的大佬们醍醐灌顶，惊呼，原来软件不一定TMD非得当成商品来卖。</p><p>软件还可以是服务。。</p><p>软件是服务。。</p><p>软件即服务。。</p><p>SaaS。。</p><p>嗯。于是就有了这个单词。</p><p>于是，微软推出了Office365 ，Saleforce股价逆天，SAP开始转型之路，国内众软件厂商如获至宝，喜迎SaaS春天。</p><p>也许，这个回答才是SaaS之所以叫SaaS的真正原因。</p><p>但是，我还是更喜欢我的上一个回答。</p><p>因为那才是真正有价值SaaS。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><p><a class="link"   href="https://zhuanlan.zhihu.com/p/72032721#:~:text=%EF%BC%88%E4%B8%80%EF%BC%89%20SaaS%E8%A1%8C%E4%B8%9A%E6%A6%82%E8%BF%B0,%20%E7%9B%AE%E5%89%8DSaaS%E6%9C%8D%E5%8A%A1%E5%8F%AF%E6%A0%B9%E6%8D%AE%E6%89%80%E6%9C%8D%E5%8A%A1%E5%AE%A2%E6%88%B7%E7%9A%84%E9%A2%86%E5%9F%9F%E5%88%92%E5%88%86%E4%B8%BA%E4%B8%A4%E7%B1%BB%EF%BC%8C%E4%B8%80%E7%B1%BB%E6%98%AF%E9%80%9A%E7%94%A8%E5%9E%8BSaaS%EF%BC%8C%E4%B8%8D%E5%8C%BA%E5%88%86%E5%AE%A2%E6%88%B7%E6%89%80%E5%9C%A8%E8%A1%8C%E4%B8%9A%E5%B9%B6%E4%B8%BA%E5%85%B6%E6%8F%90%E4%BE%9B%E9%80%9A%E7%94%A8%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%BE%8B%E5%A6%82CRM%E3%80%81HRM%E3%80%81OA%E3%80%81ERP%E5%92%8C%E4%BA%91%E5%AD%98%E5%82%A8%E7%AD%89%EF%BC%9B%E5%8F%A6%E4%B8%80%E7%B1%BB%E6%98%AF%E8%A1%8C%E4%B8%9A%E5%9E%82%E7%9B%B4%E5%9E%8BSaaS%EF%BC%8C%E5%A4%9A%E4%B8%BA%E6%AF%8D%E4%BB%A5%E5%9E%82%E7%9B%B4%E9%A2%86%E5%9F%9F%E4%B8%AD%E7%9A%84%E4%BC%A0%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%95%86%E6%88%96%E8%A1%8C%E4%B8%9A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%9C%8D%E5%8A%A1%E5%95%86%E5%B9%B6%E8%A1%8C%E6%8F%90%E4%BE%9BSaaS%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%BE%8B%E5%A6%82%E9%87%91%E8%9E%8D%E3%80%81%E6%95%99%E8%82%B2%E3%80%81%E5%8C%BB%E7%96%97%E3%80%81%E7%94%B5%E5%95%86%E5%92%8C%E7%89%A9%E6%B5%81%E3%80%82" >SaaS的行业概述及发展现状<i class="fas fa-external-link-alt"></i></a></p></li><li><p><a class="link"   href="https://zhuanlan.zhihu.com/p/266048358" >为什么巨头科技企业都在布局SaaS生态？<i class="fas fa-external-link-alt"></i></a></p></li><li><p><a class="link"   href="https://www.woshipm.com/it/3907048.html" >既然大家都在聊ToB，那到底什么是ToB？<i class="fas fa-external-link-alt"></i></a></p></li><li><p><a class="link"   href="https://zhuanlan.zhihu.com/p/30144769" >ToB与ToC<i class="fas fa-external-link-alt"></i></a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;❗️什么是SaaS？&quot;&gt;&lt;a href=&quot;#❗️什么是SaaS？&quot; class=&quot;headerlink&quot; title=&quot;❗️什么是SaaS？&quot;&gt;&lt;/a&gt;❗️什么是SaaS？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SaaS的英文全称是Software as a Servi</summary>
      
    
    
    
    
    <category term="商业分析" scheme="https://artemis727.github.io/tags/%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>六级作文</title>
    <link href="https://artemis727.github.io/2023/03/10/%E5%85%AD%E7%BA%A7%E4%BD%9C%E6%96%87/"/>
    <id>https://artemis727.github.io/2023/03/10/%E5%85%AD%E7%BA%A7%E4%BD%9C%E6%96%87/</id>
    <published>2023-03-10T05:32:03.000Z</published>
    <updated>2023-03-10T06:38:53.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="✍️-万能模板-写作句型"><a href="#✍️-万能模板-写作句型" class="headerlink" title="✍️ 万能模板 + 写作句型"></a>✍️ 万能模板 + 写作句型</h1><h2 id="名言警句类"><a href="#名言警句类" class="headerlink" title="名言警句类"></a>名言警句类</h2><ul><li>Reading this famous saying, we can naturally perceive its connotation that+名言警句内含的道理</li><li>This famous saying conveys a universal fact&#x2F;phenomenon that+名言警句内含的道理</li></ul><h2 id="漫画类"><a href="#漫画类" class="headerlink" title="漫画类"></a>漫画类</h2><ul><li>It is vividly&#x2F;clearly depicted in the picture that+图画中的人物、话语或事件</li><li>Given is a simple&#x2F;ironical but thought-provoking&#x2F;enlightening picture&#x2F;cartoon, in which+图画中的人物、话语或事件</li><li>What is clearly described in the drawing above is that+图画中的人物、话语或事件</li><li>The cartoon subtly and symbolically depicts a thought-provoking scenario in which+图画中的人物、话语或事件</li></ul><h2 id="不同观点"><a href="#不同观点" class="headerlink" title="不同观点"></a>不同观点</h2><ul><li>People’s views on……vary from person to person. Some hold that……However, others believe that……（人们对……的观点因人而异，有些人认为……然而其他人却认为……</li><li>People may have different opinions on……（人们对……可能会持有不同见解）</li><li>Attitudes towards ……vary from person to person.&#x3D;&#x3D;Different people hold different attitudes towards……（人们对待……的态度因人而异）</li><li>There are different opinions among people as to……（对于……人们的观点大不相同）</li></ul><h2 id="建议句"><a href="#建议句" class="headerlink" title="建议句"></a>建议句</h2><ul><li>It is high time that we put an end to the (trend).（该是我们停止这一趋势的时候了）</li><li>There is no doubt that enough concern must be paid to the problem of……（毫无疑问，对……问题应予以足够重视）</li><li>Obviously ,if we want to do something … it is essential that……（显然，如果我们想要做某事，很重要的是……）</li><li>Only in this way can we ……（只有这样，我们才能……） </li><li>Spare no effort to + V （不遗余力的）</li></ul><h2 id="采取措施"><a href="#采取措施" class="headerlink" title="采取措施"></a>采取措施</h2><ul><li>We should take some effective measures.我们应该采取有效措施</li><li>We should try our best to overcome&#x2F;conquer the difficulties.我们应该尽最大努力去克服困难</li><li>We should do our utmost in doing sth.我们应该尽力去做……</li><li>We should solve the problems that we are confronted&#x2F;faced with.我们应该解决我们面临的困难</li></ul><h2 id="常用英语谚语"><a href="#常用英语谚语" class="headerlink" title="常用英语谚语"></a>常用英语谚语</h2><ol><li><p>Actions speak louder than words.事实胜于雄辩</p></li><li><p>All is not gold that glitters.发光的未必都是金子</p></li><li><p>All roads lead to Rome.条条大路通罗马</p></li><li><p>A good beginning is half done.良好的开端是成功的一半</p></li><li><p>Every advantage has its disadvantage有利必有弊</p></li><li><p>A miss is as good as a mile.失之毫厘，差之千里</p></li><li><p>Failure is the mother of success.失败是成功之母</p></li><li><p><strong>Industry</strong> is the parent of success.勤奋是成功之母</p></li><li><p>It is never too old to learn.活到老，学到老</p></li><li><p>Knowledge is power.知识就是力量</p></li><li><p>Nothing in the world is difficult for one who sets his mind to it.世上无难事，只怕有心人</p></li></ol><h1 id="✍️写作思路技巧"><a href="#✍️写作思路技巧" class="headerlink" title="✍️写作思路技巧"></a>✍️写作思路技巧</h1><ol><li><p>无论是名言警句还是漫画作文都要坚持「由表及里，由浅入深」的原则，将话题和某一社会现象、问题联系，或者论述某一重要素质的重要性（例如坚强意志力、好奇心等）。</p></li><li><p>漫画作文首段描述图画，不做论述；二段从原因、利弊、重要性方面论述，并加以具体例证。尾段重申观点，并提出建议措施。</p></li><li><p><strong>文字形式的作文首段破解文字含义，将抽象的名言或警句具体化。二段是将话题联系现实生活论述相关的社会问题或者能力素质的原因、现象、背景、重要性、利弊等。尾段再次重申观点加上建议措施即可。</strong></p></li></ol><h1 id="✍️真题范文实例"><a href="#✍️真题范文实例" class="headerlink" title="✍️真题范文实例"></a>✍️真题范文实例</h1><p><strong>网络对人际交流的影响&gt;&gt;</strong></p><p>Directions: For this part, you are allowed 30 minutes to write a short essay based on the picture below. You should start your essay with a brief account of <em>the impact of the Internet on the way people communicate and then explain whether electronic communication can replace face-to-face contact</em>. You should write at least 120 words but no more than 180 words.</p><p><strong>首段：图画联系主题&gt;&gt;</strong></p><p>Apparently, this cartoon can be naturally associated with the impact of the Internet on the way people communicate: Internet makes our communication convenient, but if <strong>individuals</strong> intend to <strong>maintain close and harmonious relationship with others,</strong> it is not <strong>advisable</strong> for them to chat <strong>merely</strong> by the Internet.</p><p><strong>二段：现象+危害&gt;&gt;</strong></p><p>In <strong>contemporary</strong> society, it has become a trend for <strong>a host of youngsters</strong> to spend much time in playing PC games, QQ and Wechat. Meanwhile, an increasing number of parents find it rather difficult to have opportunities to chat with teenagers face to face, because of Internet. A case in point is the guy and his parents: he seldom sees his parents, and when his computer crashes, he will come downstairs to see his parents. It is the Internet that does not enable teenagers to spend adequate time in caring about parents and significant things. <strong>As a matter of fact, intelligent people in large numbers have come to realize the negative influences of Internet: cold or indifferent relationship.</strong></p><p><strong>尾段：观点+结论&gt;&gt;</strong></p><p>As a college student, I am <strong>convinced</strong> that it <strong>is of great necessity</strong> for youngsters to strengthen our communication in real life. <strong>Do bear in mind</strong>: electronic communication can never replace face-to-face contact.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;✍️-万能模板-写作句型&quot;&gt;&lt;a href=&quot;#✍️-万能模板-写作句型&quot; class=&quot;headerlink&quot; title=&quot;✍️ 万能模板 + 写作句型&quot;&gt;&lt;/a&gt;✍️ 万能模板 + 写作句型&lt;/h1&gt;&lt;h2 id=&quot;名言警句类&quot;&gt;&lt;a href=&quot;#名言警句</summary>
      
    
    
    
    <category term="六级" scheme="https://artemis727.github.io/categories/%E5%85%AD%E7%BA%A7/"/>
    
    
    <category term="英语" scheme="https://artemis727.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>数据分析面试题｜小米</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BD%9C%E5%B0%8F%E7%B1%B3/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BD%9C%E5%B0%8F%E7%B1%B3/</id>
    <published>2023-03-08T11:10:49.000Z</published>
    <updated>2023-03-11T13:53:32.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小米"><a href="#小米" class="headerlink" title="小米"></a>小米</h1><ol><li><strong>关于视频app（比如爱奇艺）首页推荐的推荐顺序，你会考虑哪些指标？（小米）</strong></li></ol><p><font color = 'red'>推荐类问题有四类指标，分别是用户的行为数据，用户的属性数据，推荐产品的属性数据，上下文数据。</font></p><p>（1）用户行为数据：浏览、点击、播放、搜索、收藏、点赞、转发、滑动、在某个位置的停留时长、快进等等一切操作行为；</p><p>（2）用户属性数据：年龄、性别、地域、学历、家庭组成、职业等；</p><p>（3）视频属性数据：评分、播放量、评论数、出品方、导演、主演、国别、年代、语言、是否获奖、剧情等；</p><p>（4）上下文数据：用户<strong>最近</strong>观看历史记录、<strong>最近</strong>偏好的演员明星、<strong>最近</strong>常看的视频类型等。</p><ol start="2"><li><strong>有20000人的就餐需求，现建了一个新食堂，如何规划食堂的座位数？（小米）</strong></li></ol><p><font color = 'red'>类似费米问题，这里注意时间。</font></p><p>假设食堂就餐时间为2h，则每小时需要为10000人提供就餐服务；假设每人就餐时间为15min，且人员到达食堂的时间点分布均匀，则1h可以服务4批就餐人员，平均每批2500人，意味着将会有这么多人同时就餐，就可以按照上述数据进行座位规划。</p><ol start="3"><li><strong>boss直聘的投递量较低，你会如何提高？从前期调研、方案策划到推广复盘等过程说明一下（小米）</strong></li></ol><p><font color = 'red'>对于这种问题，大步骤有三个，首先进行<strong>市场调研</strong>，分析其他竞品的状况，从多个维度进行比较分析；然后是针对目标问题<strong>设计方案</strong>，例如如果用户少，那么就想如何提升客户数量；最后就是<strong>AB测试</strong>。</font></p><p>1） 前期调研</p><p>进行<strong>竟品分析</strong>，通过调研了解当前各招聘App的现状。从获客、活跃、投递及转化率多维度进行评估比较，了解boss直聘在各维度的能力水平。</p><p>2） 方案策划</p><p>根据待加强的环节制定相应的方案。如果是当前boss直聘的规模小导致投递量较低，那应该多从获客端思考，增加丰富获客渠道或提升各渠道的获客能力。如果其规模已经非常大，但是活跃用户非常少，那应该积极采取营销活动以促活，提升最终的投递量。若规模和留存率已经足够高，问题大概率存在产品上，应充分充分思考漏斗中的每一个环节产生漏损的原因，从用户旅程出发，优化用户体验，提升每一个环节的转化率，最终达到提升投递量的目的。</p><p>3） 推广复盘</p><p>根据策划的方案，进行小规模的测试，在复盘后发现该策略能够有效提升投递量，则可以进行推广。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;小米&quot;&gt;&lt;a href=&quot;#小米&quot; class=&quot;headerlink&quot; title=&quot;小米&quot;&gt;&lt;/a&gt;小米&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;关于视频app（比如爱奇艺）首页推荐的推荐顺序，你会考虑哪些指标？（小米）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜数据看板</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E7%9C%8B%E6%9D%BF/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E7%9C%8B%E6%9D%BF/</id>
    <published>2023-03-08T07:05:02.000Z</published>
    <updated>2023-03-08T07:08:04.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是数据看板"><a href="#什么是数据看板" class="headerlink" title="什么是数据看板"></a>什么是数据看板</h1><p>数据看板一般用作后台系统的首页，主要呈现公司当前<strong>业务相关或运营管理相关数据和图表</strong>，方便公司内部人员实时了解公司内情，掌握业务发展情况，并能够对数据变化做出业务决策。</p><h1 id="谁使用"><a href="#谁使用" class="headerlink" title="谁使用"></a>谁使用</h1><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-2ca69fb1966960592e6a4c95e26093b7_1440w.webp"                      alt="img"                ></p><h1 id="数据看板的应用场景"><a href="#数据看板的应用场景" class="headerlink" title="数据看板的应用场景"></a>数据看板的应用场景</h1><ul><li>应用场景 1：监控</li></ul><p>监控是数据看板主流的应用场景。通过看板大屏，公司可以实时获取数据，了解商业进程，洞察发展趋势，甚至发布业务预警。</p><ul><li>应用场景 2：分析</li></ul><p>数据看板需要具备下沉细节的能力，在实际数据与项目预期不一致时，帮助业务部门分析导致异常的细节点、直击核心问题。</p><ul><li>应用场景 3：协作</li></ul><p>在发现数据问题、找到数据原因后，公司需要采取行动解决问题。</p><h1 id="数据看板的搭建（4）"><a href="#数据看板的搭建（4）" class="headerlink" title="数据看板的搭建（4）"></a>数据看板的搭建（4）</h1><p>主要分为以下四步：</p><p><strong>第一步，明确需求。</strong>搭建看板有三问：一问使用者的业务需求是什么？二问业务目标是什么？三问如何达到业务目标？</p><p>清楚问题答案后，才能明确看板需求，聚焦具体的商业问题。无论是自建看板还是为他人搭建看板，首先需要明确需求。</p><p><strong>第二步，需求分析。</strong>在这一步，我们需要拆解业务需求目标，选择合适的维度将其抽象为数据指标体系，确定看板基础内容。</p><p><strong>第三步，可视化。</strong>可视化是创建过程的核心环节。可视化图表需要准确表达数据信息，并通过有序组合排列清晰传递业务事实。这里建议采用议论文的写作方法：重要信息在前，佐证数据在后。</p><p><strong>第四步，评估效果。</strong>完成基础搭建工作后，我们需要关注如下问题：</p><ul><li>看板是否只有一屏幕（最多不超过 1.5 个屏幕）？</li><li>看板使用者能否通过看板完整讲述业务故事？</li><li>创建的看板能否帮助使用者迅速发现趋势、规律和异常？</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是数据看板&quot;&gt;&lt;a href=&quot;#什么是数据看板&quot; class=&quot;headerlink&quot; title=&quot;什么是数据看板&quot;&gt;&lt;/a&gt;什么是数据看板&lt;/h1&gt;&lt;p&gt;数据看板一般用作后台系统的首页，主要呈现公司当前&lt;strong&gt;业务相关或运营管理相关数据和图表&lt;/</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜需求沟通</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E9%9C%80%E6%B1%82%E6%B2%9F%E9%80%9A/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E9%9C%80%E6%B1%82%E6%B2%9F%E9%80%9A/</id>
    <published>2023-03-08T06:57:38.000Z</published>
    <updated>2023-03-08T07:05:11.507Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考：<a class="link"   href="https://zhuanlan.zhihu.com/p/363896505" >https://zhuanlan.zhihu.com/p/363896505<i class="fas fa-external-link-alt"></i></a></p></blockquote><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-b324a35f8a4b56433b861e95f7ebf62e_1440w.webp"                      alt="img"                ></p><h1 id="需求沟通"><a href="#需求沟通" class="headerlink" title="需求沟通"></a>需求沟通</h1><ol><li><p><strong>需求收集（5+2）</strong></p><p>明确：为什么、做什么、谁做、何时、何地、如何、多少。</p></li><li><p><strong>需求分析（8）</strong></p><ul><li>需求产生的背景和原因</li><li>需求的目的和程度（最好可以量化）</li><li>使用人员和场景</li><li>会影响到哪些业务领域</li><li>统计指标和维度</li><li>展现形式</li><li>数据源</li><li>交付形式和标准</li></ul></li><li><p><strong>目标对齐</strong></p><p>梳理整个流程，把整个流程中的关键环节都列出来，这是其实运用了MVC（最小可行性成品）的思想，<strong>每个环节都和业务同学碰一下，保持信息共享，确保需求的进行没有跑偏就好</strong>，即使有问题影响也不大，及时发现进行调整。</p></li><li><p><strong>信息同步</strong></p><p>整个流程一定要数字化，保持信息畅通无阻。<strong>信息共享</strong>真的很重要，让业务同学清晰看见自己需求的进度，进行得如何了，会让业务同学具有安全感。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考：&lt;a class=&quot;link&quot;   href=&quot;https://zhuanlan.zhihu.com/p/363896505&quot; &gt;https://zhuanlan.zhihu.com/p/363896505&lt;i class=&quot;fas fa-e</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜AB实验</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CAB%E5%AE%9E%E9%AA%8C/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CAB%E5%AE%9E%E9%AA%8C/</id>
    <published>2023-03-08T03:51:34.000Z</published>
    <updated>2023-03-08T04:17:42.985Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>面试官:“你有没有想过用AB实验来优化项目？”</p><p>​    瑟瑟发抖的我：“<strong>不好意思，我在做项目的时候想过用AB实验，但由于XXXX的原因无法落实。不过我自己构思了比较完整的实验思路……（此处省略若干字），如果有机会让我实施AB实验，我相信能够让项目表现更好。</strong>”</p><p>​    其实这是一个很加分的回答。在面试官看来，眼前的候选人虽然没有参与AB实验，但自己琢磨思考了项目优化方案，应该有不错的自我学习和自我驱动能力 （给自己鼓掌撒花ing）。</p><p>作者：阿狸和小兔<br>链接：<a class="link"   href="https://www.jianshu.com/p/0b54dc8b0880" >https://www.jianshu.com/p/0b54dc8b0880<i class="fas fa-external-link-alt"></i></a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h1 id="什么是A-x2F-B测试"><a href="#什么是A-x2F-B测试" class="headerlink" title="什么是A&#x2F;B测试"></a>什么是A&#x2F;B测试</h1><p>简单来讲，A&#x2F;B测试是一种比较手段：通过分析<strong>同一总体</strong>下，由于<strong>某些不同的策略</strong>导致<strong>样本数据</strong>表现出的差异，来推断某些<strong>策略的效果</strong>。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-b549c6116b2323ee91d92c1d4b03598d_1440w.webp"                      alt="img"                ></p><p>几个核心概念：<strong>同一总体，不同策略，不同样本，差异及效果</strong></p><p>本质上来说，<strong>A&#x2F;B测试就是假设检验理论的一个实际应用而已</strong>，所以想了解A&#x2F;B测试的理论，只需要了解假设检验的理论即可。</p><h1 id="A-x2F-B测试流程"><a href="#A-x2F-B测试流程" class="headerlink" title="A&#x2F;B测试流程"></a>A&#x2F;B测试流程</h1><p>一个完整的A&#x2F;B test主要包括如下几部分：</p><p>1、<strong>分析现状，建立假设</strong>：分析业务，确定最高优先级的改进点，作出假设，提出优化建议。</p><p>2、<strong>设定指标</strong>：设置主要指标来衡量版本的优劣；设置辅助指标来评估其他影响。</p><p>3、<strong>设计与开发</strong>：设计优化版本的原型并完成开发。</p><p>4、<strong>确定测试时长</strong>：确定测试进行的时长。</p><p>5、<strong>确定分流方案</strong>：确定每个测试版本的分流比例及其他分流细节。</p><p>6、<strong>采集并分析数据</strong>：收集实验数据，进行有效性和效果判断。</p><p>7、<strong>给出结论</strong>：①确定发布新版本；②调整分流比例继续测试；③优化迭代方案重新开发，回到步骤1。</p><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a><strong>注意点：</strong></h3><p><strong>1. 测试时长：</strong>测试的时长不宜过短，否则参与试验的用户几乎都是产品的高频用户。</p><p><strong>2. 分流（或者说抽样）：</strong>应该保证同时性、同质性、唯一性、均匀性。</p><p><strong>①同时性：</strong>分流应该是同时的，测试的进行也应该是同时的。</p><p><strong>②同质性：</strong>也可以说是相似性，是要求<u>分出的用户群，在各维度的特征都相似</u>。<u>可以基于用户的设备特征（例如手机机型、操作系统版本号、手机语言等）和用户的其他标签（例如性别、年龄、新老用户、会员等级等）</u>进行分群，每一个A&#x2F;B测试试验都可以选定特定的用户群进行试验。</p><p><strong>思考：如何判断是不是真的同质？</strong>可以采用<u>AAB测试</u>。抽出两份流量进行A版本的测试，进行AA测试，并分别与B版本进行AB测试。<u>通过考察A1和A2组是否存在显著性差异，就可以确定试验的分流是否同质了。</u></p><p><strong>③唯一性：</strong>即要求用户不被重复计入测试。</p><p><strong>④均匀性：</strong>要求各组<u>流量是均匀的</u>。Hash算法。现在一般由专用的A&#x2F;B测试工具负责。也有看到一篇文章写了python实现，大体的思路是对用户id添加Salt值，对其散列，并据此算出一个0-1之间的浮点数，同设定好的阈值比大小，从而分组。有兴趣的可以看看，该作者的思路很清晰： <a class="link"   href="https://zhuanlan.zhihu.com/p/34301270" >随机分配里的Why and How<i class="fas fa-external-link-alt"></i></a>。（统计学原理上，我没有找到均匀性这一要求的依据，其实双样本的假设检验并不要求两个样本的数量相等或相近。当然从直观上是可以理解，希望分出的用户组越相近越好，包括人数的相近。）</p><p><strong>3. A&#x2F;B测试只能有两个版本么？</strong></p><p>A&#x2F;B test不是只能A方案和B方案，实际上一个测试可以包含A&#x2F;B&#x2F;C&#x2F;D&#x2F;E&#x2F;……多个版本，但是要保证单变量，比如按钮的颜色赤&#x2F;橙&#x2F;黄&#x2F;绿&#x2F;青&#x2F;蓝&#x2F;紫，那么这七个方案是可以做A&#x2F;B测试的；但如果某方案在旁边新增了另一个按钮，即便实验结果产生了显著差异，我们也无法判断这种差异的成因究竟是谁。</p><p><strong>4. 同一段时间内可以做不同的A&#x2F;B测试么？</strong></p><p>比如一个test抽取总体20%的流量做按钮颜色的实验，另一个test也抽取总体20%的流量做布局样式的实验。是否可行？</p><p>我认为是可行的。但要求多个方案<u>并行测试</u>，同层互斥。如果从总体里，先后两次随机抽取20%流量，则很有可能会有重叠的用户，既无法满足控制单变量，又影响了用户的使用体验。</p><ul><li>同层指的是在同一流量层中创建实验，在此层中创建的实验共享此层中的100%流量。</li><li>互斥指的是在此层中，一个设备有且只能分配到此层多个实验中的某一个实验。</li></ul><h1 id="A-x2F-B测试原理：假设检验"><a href="#A-x2F-B测试原理：假设检验" class="headerlink" title="A&#x2F;B测试原理：假设检验"></a>A&#x2F;B测试原理：假设检验</h1><blockquote><p>参考：<a class="link"   href="https://zhuanlan.zhihu.com/p/68019926" >https://zhuanlan.zhihu.com/p/68019926<i class="fas fa-external-link-alt"></i></a></p></blockquote><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-9f80526142e214556bef2a19f8e00c9e_1440w.webp"                      alt="img"                ></p><blockquote><p>参考：<a class="link"   href="https://www.jianshu.com/p/0b54dc8b0880" >https://www.jianshu.com/p/0b54dc8b0880<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>AB实验是数据分析、产品运营、算法开发在工作中都时常接触到的工作。按钮颜色、广告算法、标签排序，这些互联网产品里常见的功能与展示都是在一次次AB实验中得到优化。</p><p>   在实习中，并不是每一个实习生都能接触到AB实验，这也让很多没有相关经历的人误认为AB实验是一项高大上的工作任务。但其实——</p><p>   许多公司搭建了可(sha)视(gua)化的AB实验平台，业务、运营以及产品都一眼看出AB实验的结果……不过，由于企业搭建的AB实验平台在权限、监控上有诸多限制，加上很多Leader出于实习生实习期短、留用概率小的顾虑，大部分实习生都不会参与完整的AB项目。</p><p>​    可是——</p><p>​    尽管在实习中没有接触过AB实验，在简历中也没提到丝毫，这不代表在面试中就能逃过一劫……</p><img                       lazyload                     alt="image"                     data-src="https:////upload-images.jianshu.io/upload_images/22555708-a505fad6af9035fc?imageMogr2/auto-orient/strip|imageView2/2/w/424/format/webp"                      alt="img" style="zoom: 25%;"                 ><p>​    我在实习中就没有接触过AB实验，但面试官仍然对我抛出来的项目分析过程饶有兴趣，也会问我有没有使用AB实验作出优化。得益于面试前全方位的准备，我的面试回（tao）答（lu）往往是:</p><p>​    面试官:“你有没有想过用AB实验来优化项目？”</p><p>​    瑟瑟发抖的我：<strong>“不好意思，我在做项目的时候想过用AB实验，但由于XXXX的原因无法落实。不过我自己构思了比较完整的实验思路……（此处省略若干字），如果有机会让我实施AB实验，我相信能够让项目表现更好。”</strong></p><p>​    其实这是一个很加分的回答。在面试官看来，眼前的候选人虽然没有参与AB实验，但自己琢磨思考了项目优化方案，应该有不错的自我学习和自我驱动能力 （给自己鼓掌撒花ing）。</p><p>   引申一步，当你对自己的项目足够熟悉时，哪怕没有机会开展AB实验，仍然可以和我一样，在回答项目相关问题时，代入自己对AB实验的思考。</p><p>   好了，言归正传，进入今天的正题。</p><p><strong>01</strong> <strong>我们先介绍统计检验</strong></p><p>​    在统计学中，想要证明一个命题是正确的，只能通过证明其否命题是错误的来达到目的。假设检验是用统计数据来判断命题真伪的方式。我们常常会假设两个命题：</p><p>​    <strong>H0：备受质疑的命题</strong></p><p>​    <strong>H1：有待验证的问题</strong></p><p>   那如何来证明H0和H1孰对孰错呢？这时候我们需要用到P值。</p><p>   P值是什么？<strong>P值就是在H0假设成立的情况下，得到样本观察结果或更极端的观察结果出现的概率。</strong></p><p>   这句话好绕口，我们可以简单的理解成<strong>P代表了对H0命题的支持程度。所以P值越小，H0命题正确的概率就越小，H1命题正确的概率越大。</strong>我们有常常会指定显著性水平α&#x3D;0.05，当P&lt;α时，H0命题成立的概率&lt;0.05，这是一个受到统计学支持的假命题。</p><p>   在学习统计学时，我们接触了一大堆显著性水平，显著区间的概念；在考完统计学后，统统还给了大学老师……如果是面试数据分析相关的岗位，强烈建议复习一下，再总结成方便自己记忆的文字，存入<strong>面试文档</strong>（插播一句，后台好多人私信我面试文档里准备了哪些内容……按当前进度，一只伪装加班狗表示写到这一块预计应该要4月了吧emmmm）。</p><p>   若是有面试官问我：<strong>“置信区间和置信度你了解吗？”</strong></p><p>   根据准备在面试文档中的内容，我能够脱口而出：<strong>“在假设检验的过程中，我们往往采用样本数据特征来估计整体的数据特征。在中心极限定理里，我们知道从总体中进行N次样本抽取，N次样本的均值会围绕总体均值上下波动。因此，置信区间就是为总体的均值提供了一个可波动的范围，置信区间与置信度是相对应的。例如，在95%的置信度下，置信区间为【a,b】，也就是说，抽取100次样本，其中有95次样本的均值能够落在【a,b】范围内。”</strong></p><p>   可惜我做了充分的准备，并没有面试官问我这个问题（哭）</p><p>   也有人问，面试中面试官会以什么形式来问假设检验的知识点呢？举一个栗子 ：</p><p>   面试VIVO的时候面试官随口提问：<strong>“你会怎么证明中医的有效性？”</strong></p><p>   我当时的回答是：</p><p>   <strong>“我会用假设检验来做证明。</strong></p><p>   <strong>第一步，提出两个命题。H0命题是中医无效；H1命题是中医有效。在这里，H0命题是我希望被推翻的命题，而H1命题是我希望被证实的命题。</strong></p><p>   <strong>第二步，随机选择两组生理特征、疾病状况一致的人。一组人不给予治疗；另一组人给予中药治疗，持续观测两拨人生理状况。</strong></p><p>   <strong>第三步，对两组人的生理数据进行独立样本t检验，观测统计结果P值。</strong></p><p>   <strong>第四步：设定显著性水平α&#x3D;0.05，如果统计结果P≤0.05，则推翻了H0假设，证明在该显著性水平下，中医是有效的。”</strong></p><p>  所以我们简化一下，回答假设检验相关题目的时候，<strong>遵循“提出命题-选择实验对象-检验-输出结论”的流程即可</strong>。只是有一点，<strong>建议多使用“第一第二第三”、“首先其次最后”这些次序词，用以展示相对流畅的思考逻辑。</strong></p><p>   不知道我讲清楚了没有……如果没有，建议结合《商务经济统计》再继续理解几遍，自我感觉以上内容应该可以应付绝大多数面试过程中的假设检验问题。</p><p>   好了……不管了，我要强行进入第二个话题了……</p><p><strong>02</strong> <strong>工作中的AB实验是如何开展的？</strong></p><p>   再举一个简单的栗子。过去在对首页产品进行排序时，往往是运营人员结合自己工作经验进行人工排序，现在算法小哥更新了产品排序的逻辑，希望通过AB实验证明自己的算法优于运营人工推荐，提高转化效果。</p><p>   算法小哥和开发沟通好上线AB实验，用转化率(CR)来评估不同排序方式的效果，并设定显著性水平α&#x3D;0.05。在这场AB实验中，用到的两个假设分别是：</p><p>   <strong>H0：运营的人工排序效果好（备受质疑、希望被推翻的命题）</strong></p><p>   <strong>H1：算法的推荐算法效果好（有待验证，希望被证实的命题）</strong></p><p>   在AB平台观察今天的实验效果，数据结果显示P&#x3D;0.003，可以理解成数据统计结果对H0的支持力度只有0.003，小于显著性水平0.05，这时候H1命题成立，相比运营的手工排序，算法工程师的推荐算法取得了更好的效果。</p><p>   那在这个实验里，有什么要注意的点吗？</p><p>  ——嗯，AB实验有很多需要注意的问题。</p><p> <strong>（1）AB组是否真的只有一个变量</strong></p><p>   这场AB实验的变量是产品排序的逻辑，但大家都想开展AB实验，在首页上同期开展的AB实验有几十个，UI想测试筛选框的颜色、产品想测试标签的文案……。这种背景下，我们AB实验里被划分为A群体和B群体的用户往往同时参与了N多实验，不能绝对保证变量的唯一性。一般而言认为流量足够大，其AB实验和我们观测的AB实验没有直接交集，可以忽略其影响。</p><p><strong>（2）新策略是否真的上线了</strong></p><p>   因为研发每天都有很多AB实验，而且AB实验平台出错也是常有的事情。所以我们要在别人告诉我们AB实验上线了以后，自己验证实验策略是否真的上线了。</p><p><strong>（3）在实验前确定评估指标</strong></p><p>   我们的实验评估指标是CR转化率。这一点在实验上线前就要沟通好。</p><p><strong>（4）多观察几天数据</strong></p><p>   很多AB实验上线后前几天数据表现是不稳定的，最好持续观察半个月再给出结论。</p><p><strong>（5）存档AB测试的结果</strong></p><p>   对于数据分析师来说，每一个项目、每一个分析都需要做复盘和存档。比如AB实验项目，可以用一个标准化的模板来记录测试内容，为什么测试，测试对接人，测试效果等等，在年终的时候可以更好的汇报和复盘。</p><p>   在大半年的工作中，终于有机会接触到诸多的AB实验，慢慢感知到各种AB实验原来殊途同归。但不可置否，它仍然是互联网产品迭代的利器，仍然是分析师证明自身价值的手段之一。想来这也是为什么诸多的面试官喜欢在面试中询问AB实验、假设检验的原因。</p><p>作者：阿狸和小兔<br>链接：<a class="link"   href="https://www.jianshu.com/p/0b54dc8b0880" >https://www.jianshu.com/p/0b54dc8b0880<i class="fas fa-external-link-alt"></i></a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;面试官:“你有没有想过用AB实验来优化项目？”&lt;/p&gt;
&lt;p&gt;​    瑟瑟发抖的我：“&lt;strong&gt;不好意思，我在做项目的时候想过用AB实验，但由于XXXX的原因无法落实。不过我自己构思了比较完整的实验思路……（此处省略若干字），如果有机会让我</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜BI搭建</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CBI%E6%90%AD%E5%BB%BA/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CBI%E6%90%AD%E5%BB%BA/</id>
    <published>2023-03-08T03:04:34.000Z</published>
    <updated>2023-03-08T03:28:51.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BI搭建流程"><a href="#BI搭建流程" class="headerlink" title="BI搭建流程"></a>BI搭建流程</h1><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-deb474c492e7ab32fecb258313c0184f_1440w.webp"                      alt="img"                ></p><p>此阶段不可小觑，做好项目规划才能站在项目的高处掌控项目全局。在此阶段需要<strong>组建项目团队、确定项目目标以及项目里程碑</strong>。项目目标是项目的魂，后续工作都需要围绕目标展开，为工作指明方向，防止在项目执行过程中迷失。此阶段需要进行的工作内容是<strong>项目资料的交接与收集、组建项目团队以及组织项目启动会</strong>。</p><p><strong>1.方案阶段：方案设计</strong></p><p>BI项目都是由企业需求驱动的，<strong>项目方案也只有和企业的需求契合才能产生价值</strong>。所以在方案输出之前，要摸清楚<strong>需求、背景、客观条件、可投入资源</strong>等，最好要具体到<strong>业务、数据、技术等</strong>层面的需求，这关乎项目的落地和项目交付验收，同时也支撑BI项目工具选型。</p><p>从启动阶段确认好项目何时开始后，便可以进入<strong>项目方案阶段</strong>，此阶段的目标为：调研相关需求内容及期望；收敛需求范围，统一交付目标；确认项目实施&amp;研发计划；确认项目解决方案。方案阶段主要是确认“做多少”以及“怎么做”，所以这一阶段主要的工作为：<strong>业务需求调研，项目需求说明书，原型设计、方案输出及确认</strong>。</p><p><strong>2.实施阶段：系统建设</strong></p><p>搭建一个合理的BI系统是BI项目成功的关键。在项目实施阶段，主要工作内容为监督项目成员按BI项目计划及解决方案内容，准时保质保量开发完成各项功能，并可以交付使用。BI项目实施可用三步曲进行概括。</p><p><strong>第一步：环境搭建。</strong>根据企业的实际使用人数、并发人数等指标，来确定正式<u>环境服务器配置、带宽配置、是否需要集群部署以及数据库、中间件类型等</u>，然后制定环境搭建方案。</p><p><strong>第二步：数仓建设。</strong>数仓建设是数据分析及应用的基础，我们可以采取<u>从上至下的搭建方法</u>，根据已经确定的BI分析主题构建合适的数仓模型，从而逐步整合企业的业务数据。此种搭建方式针对性强，目标明确，聚焦于所需的源数据整理，缩小数据整理的范围，有效地避免了资源浪费。</p><p><strong>第三步：BI开发。</strong>此阶段主要完成<u>前端可视化的工作</u>，<u>可采取代码开发，也可以借助成熟的可视化工具进行开发。</u>一般包含<u>常规报表、可视化图表、分析报告、大屏展示、移动应用</u>这几种展现形式。</p><p><strong>3.上线阶段：上线与验收</strong></p><p>到了上线阶段，可先在小范围试运行系统，从业务满足性方面检验BI系统试运行效果，重点是业务流程满足度和业务场景满足度。同时要做好用户操作培训和运维培训，保障BI系统后续独立使用。</p><p>此阶段所要做的事归结起来就是一个词——“<strong>查漏补缺</strong>”，主要的工作内容有：核查并完成未完成事项、 用户操作培训、系统运维培训、交付文档整理、项目总结与验收。</p><p><strong>4.优化阶段：升级迭代</strong></p><p>一个好的BI项目要注重持续建设，不断完善与扩展。在实际使用中，通过用户的反馈不断的打磨和完善系统，让BI系统更加贴合实际使用场景。</p><p><strong>二、法 · 如何快速落地BI建设</strong></p><p>现在有很多企业不断尝试落地BI系统，那么如何高效地并有价值地建设BI系统呢？</p><p><strong>首先要选择一个合适的建设路径，有两种方法：一个是按KPI驱动，另外一个是按角色和场景搭建体系模型。</strong></p><p><strong>1、从KPI管控出发，监控问题的角度，提炼KPI库</strong></p><p><u>每个企业的侧重KPI不一样，我们要结合各个主题，提炼适合客户的运营KPI。</u>对它进行提炼、分析、预警，以及后续采取动作，并根据一些核心指标进行驱动和预警。通过KPI来驱动企业人员，调用企业所有人员一起共同建设BI平台，助力BI平台快速落地。</p><p><strong>2、以不同角色的视角、场景化搭建</strong></p><p><strong>不同的角色关注</strong>的分析指标会不同，看指标的维度也会不同，比如高层领导对所负责的整体业务、运营情况要有宏观的掌控，需要满足其日常管理、经营分析、专项业务分析的需要。部门经理除了关注部门的核心绩效指标之外，还需要深入探究现象发生的原因，沿着数据的脉络去找寻问题，解决问题。所以我们需要结合不同角色视角，按照日常管理的场景合理化搭建BI平台，这样BI平台才能快速的落地。</p><p>再者，我们还可以借鉴行业应用模板，快速导入复用。现在各行业更新换代特别快，产品周期短，可以借鉴一些成型的模板快速导入。</p><p>除此之外，工具的灵活应用，也能很好加快平台建设，大大提高搭建效率，减少人力成本的投入。接下来小编来告诉大家如何挑选BI工具。</p><p><strong>三、器 · BI工具哪家强</strong></p><p>工欲善其事，必先利其器。BI工具是BI项目的核心，选对工具，BI项目就成功了一半。面对市场上鱼龙混杂的BI工具，不少企业眼花缭乱，无从下手。如果将需求和产品功能进行匹配和梳理，总结下来，无非四大方面：</p><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-23a7cd3e3e9ab2d5a5498ec0446fb3fd_1440w.webp"                      alt="img"                ></p><p>BI不断地迭代，亿信华辰就有这样一款功能全面而又可靠的工具。深耕大数据领域15年，连续多年荣登商务智能应用榜首，在成千上万个项目中不断打磨产品和服务，形成从数据填报、ETL数据处理、数据建模到数据分析、数据可视化、移动应用等一整套企业级商业智能产品方案——<strong>亿信ABI</strong>，实现多维度的数据分析应用，让数据发挥价值，驱动业务运营。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-5c9c6645e3b5e8435c0669950d2571b5_1440w.webp"                      alt="img"                ></p><ul><li>你可以把它当作<strong>数据处理工具</strong>，通过拖拽式的流程设计，实现数据的抽取、清洗、转换、装载与调度，面向业务分析构建数据仓库，实现数据融合，提升数据分析效率。</li><li>你可以把它视作<strong>报表工具</strong>，因为它能接入各种ERP、OA、CRM等系统数据，不写代码不写SQL就能批量化做报表。</li><li>你也可以把它当作<strong>可视化工具</strong>，因为它自带上百种可视化图表以及动态效果，拖拽即可生成，制作领导驾驶舱、大屏可视化不在话下，更是结合全景3D建模和数据分析引擎实现酷炫3D效果。</li><li>你还可以把它看作<strong>数据分析工具</strong>，因为从数据采集、数据处理、数据应用全流程完整覆盖，一个工具搞定数据生命周期的各个环节，实现数据填报、处理、分析一体化。</li></ul><p><strong>结语：</strong>BI项目的建设是一个不断的实践、循环迭代的过程。多年项目经验总结了八个字：明道、优法、利器、践行。当然，选择合适且强大的“利器”，可让你在工作中变得更加的从容，亿信ABI提供一站式数据分析服务，助你达成所愿。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BI搭建流程&quot;&gt;&lt;a href=&quot;#BI搭建流程&quot; class=&quot;headerlink&quot; title=&quot;BI搭建流程&quot;&gt;&lt;/a&gt;BI搭建流程&lt;/h1&gt;&lt;p&gt;&lt;img  
                     lazyload
                 </summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜DAU预测</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CDAU%E9%A2%84%E6%B5%8B/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CDAU%E9%A2%84%E6%B5%8B/</id>
    <published>2023-03-08T02:53:40.000Z</published>
    <updated>2023-03-08T03:04:41.864Z</updated>
    
    <content type="html"><![CDATA[<p>日活会受到很多因素的影响，产品迭代，运营活动，推广的变化等等都会影响到日活。当然这些因素中，有的影响较小，有的暂时无法预估。因此<strong>在预测的过程中，我们可以将一些影响不大的因素，剔除出去，从而简化得到一个可计算的状态</strong>。（这个简化到可计算的过程中，其实就叫<strong>数学建模</strong>。）</p><p>因此为了计算，我们首先构建日活的一个简单数学模型。</p><h2 id="建立日活的数学模型"><a href="#建立日活的数学模型" class="headerlink" title="建立日活的数学模型"></a>建立日活的数学模型</h2><p>影响日活的因素中，最本质的其实是两个，一个是每日新增用户数，一个是新增用户的留存率。</p><p>某一天的日活，我们可以看作是，当天的新增，加上前一天的新增的次日留存用户，再加上大前天的新增的二日留存用户……</p><p>以此类推，我们可以认为日活是<strong>“当天的新增用户和此前每一天新增用户在当天的留存用户之和”</strong>，基于此，我们可以用一个很简单的公式表达日活。</p><p>$DAU(n)&#x3D;A(n)+A(n-1)R(1)+A(n-2)R(2)+… …+A(1)R(n-1)$</p><p>其中，DAU(n)为第n天的日活，A(n)为第n天的新增，R(n-1)为新增用户在第n-1天后的留存率。<strong>如果我们假设，每日用户的新增是一个固定的数值A，</strong>则公式可简写为：</p><p>$DAU(n)&#x3D;A(1+R(1)+R(2)+… …+R(n-1))$</p><p>上述公式可以看成是日活的一个简单的数学模型。从这个模型中，我们可以看出，新增A是一个较为确定的数值，另一部分：</p><p>$1+R(1)+R(2)+… …+R(n-1)$</p><p><strong>留存之和的确定稍微有些麻烦</strong>。可以用下述的方法，预估留存。</p><h2 id="如何预估留存"><a href="#如何预估留存" class="headerlink" title="如何预估留存"></a>如何预估留存</h2><p>留存率是一个产品最为核心的指标了，下图是一个产品的留存率衰减曲线：</p><p><img                       lazyload                     alt="image"                     data-src="https://image.woshipm.com/wp-files/2019/06/YaM9IL72ftSBP0BVoNNp.png"                      alt="如何预估一个产品的日活（DAU）？"                ></p><p>（1-30日留存率衰减曲线）</p><p>由图中，我们可以看出：留存率的衰减曲线，非常类似幂函数的曲线，<strong>其实，在业内绝大部分产品的留存衰减曲线，基本都是符合幂函数曲线。</strong></p><p>基于此，我们<strong>可以通过幂函数来近似拟合留存率的衰减曲线</strong>，也就可以顺利的预估出日活模型中需要的留存之和。</p><p>一般在预估一个产品的留存之前，我们会有一些先验的数据基础，<strong>如果你的产品已经上线来一段时间，可以使用历史数据作为基础。如果产品还未上线，没有历史的数据，因为不同类型产品的留存和衰减速度都不太一样，因此可以用业内同类型的产品的大概留存数据作为拟合预测的参考。</strong></p><p><font color = 'red'>因此，留存曲线拟合基本会遇到两种情况：</font></p><ol><li>已经知道了若干天的留存，预估后续的留存？</li><li>不知道具体每天的留存，只知道次留，周留，月留存等数据，预估每一天的留存。</li></ol><p>这两个情况本质上属于同一个问题，这里以第二种情况为例，简单说下如何操作。曲线拟合的方法有很多，这里我介绍一个最为简单的方式，就是<strong>利用excel来做一个简单的拟合计算</strong>，具体步骤如下：</p><h3 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h3><p>假设我们知道了一个产品次日留存，7日留存，30留存如下：</p><p><img                       lazyload                     alt="image"                     data-src="https://image.woshipm.com/wp-files/2019/06/uWZ4ziw01zwS6MVAfJus.png"                      alt="如何预估一个产品的日活（DAU）？"                ></p><p>（某产品若干日留存）</p><h3 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h3><p>在excel中按照对应留存天数，写出留存率，并画出散点图：</p><p><img                       lazyload                     alt="image"                     data-src="https://image.woshipm.com/wp-files/2019/06/60NceIZrTA2IYMuGOjUs.png"                      alt="如何预估一个产品的日活（DAU）？"                ></p><p>（留存散点图）</p><h3 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h3><p>在excel图表对上述散点添加趋势线，并在趋势线选项中，选择幂函数，并选择显示幂函数公式</p><p><img                       lazyload                     alt="image"                     data-src="https://image.woshipm.com/wp-files/2019/06/BXLzOPqVHKCoIHTJ0A92.png"                      alt="如何预估一个产品的日活（DAU）？"                ></p><p>（基于散点拟合曲线）</p><p>得到的幂函数为：</p><p>$y&#x3D;0.4861*x^(-0.435)$，其中x为对应的天数，y为对应天数的留存率。</p><h3 id="step4"><a href="#step4" class="headerlink" title="step4"></a>step4</h3><p>基于得到的幂函数公式，可以求的所有对应天数的留存率。</p><h2 id="计算得到预估的日活"><a href="#计算得到预估的日活" class="headerlink" title="计算得到预估的日活"></a>计算得到预估的日活</h2><p>基于得到的幂函数，算出对应的留存率之后，就可以简单求和得到，带入日活公式中：</p><p>$DAU(n)&#x3D;A(1+R(1)+R(2)+… …+R(n-1))$</p><p>这样就可以通过预估的每日新增，得到在未来第n天日活所处的水平。</p><h2 id="总结-amp-后记"><a href="#总结-amp-后记" class="headerlink" title="总结&amp;后记"></a>总结&amp;后记</h2><p>以上通过简化日活模型，仅考虑新增和留存对于日活的影响（其它影响，也都是通过新增和留存间接对日活产生影响的），可以粗略的估算出未来一段时间的产品日活规模。</p><p>进而通过日活的规模，再去估算一些潜在收益，以及运营成本等等数据。上述计算一定存在误差，并且不能满足所有的场景，但整体的思路可以作为参考，应该能搞解决大部分相关问题了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;日活会受到很多因素的影响，产品迭代，运营活动，推广的变化等等都会影响到日活。当然这些因素中，有的影响较小，有的暂时无法预估。因此&lt;strong&gt;在预测的过程中，我们可以将一些影响不大的因素，剔除出去，从而简化得到一个可计算的状态&lt;/strong&gt;。（这个简化到可计算的过程中</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜指标体系搭建</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%E6%90%AD%E5%BB%BA/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%E6%90%AD%E5%BB%BA/</id>
    <published>2023-03-08T02:07:00.000Z</published>
    <updated>2023-03-08T06:08:04.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是指标体系"><a href="#什么是指标体系" class="headerlink" title="什么是指标体系"></a>什么是指标体系</h1><p>当我们把多个不同的指标有规律，有体系的组织在一起共同去量化人口现状时，它们就成了一套指标体系。</p><p>指标体系是指标与体系的结合体，是一套从<strong>多个维度</strong>拆解业务现状并<strong>有系统有规律的组合起来</strong>的<strong>多个指标</strong>。也就是说单个指标只能叫指标，<strong>多个有一定规律，内部有一定关联的指标的组合才能叫做指标体系</strong>。</p><h1 id="指标体系的作用"><a href="#指标体系的作用" class="headerlink" title="指标体系的作用"></a>指标体系的作用</h1><p>指标体系的功能大致可以分为三点，监控-效率-应急</p><p>第一，指标体系是一套标准化的衡量指标，可以<strong>监控业务的发展情况</strong>；</p><p>第二，指标体系可以形成标准化的体系模版，并且可以<strong>固化下来以减少重复的工作</strong>；</p><p>第三，如果业务出现问题，我们可以<strong>通过指标拆解，迅速定位业务问题</strong>，给出业务优化方向。</p><p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-a75c3c68cd8225c91a662a5a4f35dc86_1440w.webp?source=1940ef5c"                      alt="img"                ></p><h1 id="构建一套指标体系需要注意的问题"><a href="#构建一套指标体系需要注意的问题" class="headerlink" title="构建一套指标体系需要注意的问题"></a>构建一套指标体系需要注意的问题</h1><p><strong>（1）数据提前埋点</strong></p><p>对于互联网公司而言，数据产生于用户行为，用户行为都是通过埋点促发而记录，所以要获得相应的用户数据就得先埋好点。</p><p><strong>（2）统一指标口径</strong></p><p>统一指标计算口径也是很重要的步骤，统一的计算口径可以使得业务具有横向和纵向的可比性，所以需要在统一整套指标体系的最小计算单位，不同的计算口径计算出的数据也会略有差异。</p><p><strong>（3）指标穷尽且相互独立，遵循MCEC原则</strong></p><p>对于某一块业务我们需要下钻和拆解，下钻维度和<a class="link"   href="https://www.zhihu.com/search?q=%E6%8B%86%E8%A7%A3%E7%BB%B4%E5%BA%A6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1979721081%7D" >拆解维度<i class="fas fa-external-link-alt"></i></a>需要相互穷尽且完全独立，也就是麦肯锡提出的MCEC原则，样才能更好的暴露业务存在问题。MCEC原则也会在指标体系构建方法中详细介绍。</p><h1 id="如何构建一套指标体系"><a href="#如何构建一套指标体系" class="headerlink" title="如何构建一套指标体系"></a>如何构建一套指标体系</h1><p>数据指标体系建设的方法可以总结为三个步骤，即<strong>明确业务目标</strong>，<strong>梳理产品生命周期及用户行为路径</strong>以及<strong>指标分层治理</strong>，在这三个步骤当中又涉及到 <u>OSM(Object,Strategy,Measure), AARRR(Acquisition,Activation,Retention,Revenue,Referral), UJM(User, Journey, Map), MECE (Mutually Exclusive, Collectively Exhaustive)</u> 四个模型，这四个模型是指导我们构建完整而清晰的指标体系的方法论。<img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-22acacdf88e6bb2d3f542398609be69e_1440w.webp?source=1940ef5c"                      alt="img"                ></p><h2 id="明确业务目标：OSM模型"><a href="#明确业务目标：OSM模型" class="headerlink" title="明确业务目标：OSM模型"></a>明确业务目标：OSM模型</h2><p>OSM模型是 <strong>Object, Strategy, Measure</strong>的缩写。</p><p><strong>1. 在建立数据指标体系之前，一定要清晰的了解<u>业务目标</u>，也就是模型中的O,Object。</strong>换句话说，业务的目标也就是业务的<strong>核心KPI</strong>，了解业务的核心KPI能够帮助我们快速理清指标体系的方向。</p><p><strong>2. 了解业务目标方向之后，就需要制定相应的<u>行动策略</u>，也就是模型中的S,Strategy。</strong>行动策略的制定可以根据产品生命周期或者用户行为路径进行拆解，也就是<strong>把业务的核心KPI拆解到产品生命周期(AARRR)或者<a class="link"   href="https://www.zhihu.com/search?q=%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E8%B7%AF%E5%BE%84&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1979721081%7D" >用户行为路径<i class="fas fa-external-link-alt"></i></a>(UJM)<strong>当中，在整条链路当中分析</strong>可以提升核心KPI的点</strong>。</p><p><strong>3. 最后，就需要制定较细的<u>评估指标</u>，也就是模型中的M,Measure。</strong>评估指标的制定是将产品链路或者行为路径中的<strong>各个核心KPI进行下钻细分</strong>，这里用到的方法就是麦肯锡著名的MECE模型，需保证<strong>每个细分指标是完全独立且相互穷尽的</strong>。</p><p><font color = 'red'>总结一下OSM模型的内容及其与AARRR,UJM,MECE模型之间的关系，OSM模型是指标体系建设的指导思想，<strong>理解业务KPI是OSM模型的核心</strong>；制定行动策略是实现业务KPI的手段，而AARRR和UJM模型是实现策略制定的方法论；制定细分指标是评估业务策略优劣的方法，而MECE模型制定细分指标的方法论。</font></p><p><img                       lazyload                     alt="image"                     data-src="https://pica.zhimg.com/80/v2-83a953b994d95cb26bef7d9568fb4760_1440w.webp?source=1940ef5c"                      alt="img"                ></p><h2 id="清理产品生命周期及用户行为路径：AARRR-x2F-UJM"><a href="#清理产品生命周期及用户行为路径：AARRR-x2F-UJM" class="headerlink" title="清理产品生命周期及用户行为路径：AARRR&#x2F;UJM"></a>清理产品生命周期及用户行为路径：AARRR&#x2F;UJM</h2><p>AARRR和UJM模型都是<a class="link"   href="https://www.zhihu.com/search?q=%E8%B7%AF%E5%BE%84%E6%A8%A1%E5%9E%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1979721081%7D" >路径模型<i class="fas fa-external-link-alt"></i></a>，二者原理相似，只是它们出发的角度不一样。AARRR模型是从<strong>产品</strong>角度出发，揭示产品的整个生命周期；而UJM模型是从<strong>用户</strong>出发，揭示用户的行为路径。</p><p>AARRR模型是基于产品角度，简单地来说就是<strong>拉新，促活，留存，付费，推广</strong>。对于一款产品来说，我们首先要从各个渠道获取用户；其次需要激活这些用户并让他们留存下来；对于留存下来的用户引导他们付费以及推广产品。</p><p>UJM模型则是从用户角度出发，描述了用户进入产品的整个路径流程，即<strong>注册，登陆，加购，购买，复购</strong>链路流程。</p><p>无论是产品角度还是用户角度进行链路流程，核心KPI都可以下钻到相应的节点，这样我们就在整条链路流程当中<strong>拆解了业务的核心KPI</strong>。这样的好处是，我们可以从更多的角度和维度监控和分析业务问题。</p><p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-bae1e41ebbf3e8a631ca1c3ebfa3cee7_1440w.webp?source=1940ef5c"                      alt="img"                ></p><h2 id="指标体系分层治理：MECE"><a href="#指标体系分层治理：MECE" class="headerlink" title="指标体系分层治理：MECE"></a>指标体系分层治理：MECE</h2><p>前面两个步骤，首先我们明确了业务核心目标；其次，我们将业务核心的KPI下钻到产品生命周期或者用户路径行为中；接下来我们需要对这些核心KPI向下进行三到五层的拆解，这个过程我们称为指标体系分级治理，用到的模型是MECE模型。</p><p>MECE模型的指导思想是<strong>完全独立，相互穷尽</strong>，根据这个原则拆分可以暴露业务最本质的问题，帮助数据分析师们快速地定位业务问题。例如，<u>客户总成交额GMV进行以及拆解可以是付费用户数与平均客单价的乘积</u>。</p><p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-b378f33955e37390d45d3d685d9d412f_1440w.webp?source=1940ef5c"                      alt="img"                ></p><h3 id="以GMV为例，用三个步骤，四个模型教会你搭建指标体系的方法"><a href="#以GMV为例，用三个步骤，四个模型教会你搭建指标体系的方法" class="headerlink" title="以GMV为例，用三个步骤，四个模型教会你搭建指标体系的方法"></a>以GMV为例，用三个步骤，四个模型教会你搭建指标体系的方法</h3><blockquote><p>如果你的老板给出你一个很大的业务问题，他说，“我们现在做一套GMV相关的指标体系，你出一个方案吧！”面对这么大的一个命题，我们就需要对命题进行分解，将其分解成若干个子问题并找到各个子问题之间的联系，做成一套业务监控指标体系，帮助数据分析师快速定义业务问题。在这里，我们就通过上面提到的三个步骤，四个模型去搭建GMV相关的指标体系。</p></blockquote><p><img                       lazyload                     alt="image"                     data-src="https://pica.zhimg.com/80/v2-fe7ca5a8e1a75153bebdeb76bb55ee11_1440w.webp?source=1940ef5c"                      alt="img"                ></p><p>第一步，根据OSM模型构建整体框架，明确业务目标。</p><p>为什么业务会关注GMV？当然这是业务的核心KPI，关系到自己的饭碗，GMV当然越高越年终奖越高。所以，作为数据分析师我们提炼出业务目标——<u>提升用户总成交量GMV</u>。</p><p>第二步，根据AARRR或UJM模型拆解用户达成GMV的路径，<u>将业务目标转换为提升用户路径转化率</u>。</p><p>用户达成GMV需要通过六个步骤，即<u>注册-登录-曝光-点击-加购-成交</u>。到目前为止，我们已经将提升GMV这个目标转换为提升用户付费路径的转化率，<u>只要我们提升用户每一步的基数，使得每一步的转化率变高就可以达成提高GMV的目标</u>。</p><p>将提升GMV转化为提高用户达成GMV路径转化率还有另外一个好处，即通过<a class="link"   href="https://www.zhihu.com/search?q=%E8%B7%AF%E5%BE%84%E6%8B%86%E8%A7%A3&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1979721081%7D" >路径拆解<i class="fas fa-external-link-alt"></i></a>能够暴露业务更多的问题，同时，分析师可以根据暴露的业务问题提出相应的建议方案，这也是数据分析师的价值所在。</p><p><strong>第三步，根据MECE模型对GMV达成路径的每一个指标进行拆解，实现指标分级治理。</strong></p><p>有了GMV达成路径之后，我们就可以将这个路径的核心步骤抽象成GMV的分级指标并进行回溯下钻。同时，找出影响每一个步骤的关键因素作为二级指标，每一个关键因素之间需要完全独立，相互穷尽。</p><p>我们先根据公式1：</p><p>$GMV&#x3D;成交用户数*平均客单价$</p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-7784967226692e2757192208404bcaef_1440w.webp?source=1940ef5c"                      alt="img" style="zoom:50%;"                 ><p>这里将核心KPI用户总成交量GMV进行了一级拆解。</p><p>又有公式2：</p><p>$成交用户数&#x3D;点击UV*访购率$</p><p>将公式2带入公式1得到：</p><p>$GMV&#x3D;点击UV<em>访购率</em>平均客单价$</p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-4d0be105d38607ab35eee03fe7854519_1440w.webp?source=1940ef5c"                      alt="img" style="zoom:50%;"                 ><p>又有公式3：</p><p>$点击UV&#x3D;曝光UV*转化率$</p><p>将公式3带入公式1得到：</p><p>$GMV&#x3D;曝光UV<em>转化率</em>访购率*平均客单价$</p><img                       lazyload                     alt="image"                     data-src="https://pica.zhimg.com/80/v2-4249f99f58791d16147f6dd62a4dc7e8_1440w.webp?source=1940ef5c"                      alt="img" style="zoom:50%;"                 ><p>到这里呢，我们已经将核心KPI用户总成交量GMV进行三级回溯拆解，形成了分级治理的指标体系。到这里并没有结束，<u>像曝光UV等着指标还可以继续向下拆解，例如，谷歌渠道曝光UV，华为渠道曝光UV等等，可以根据具体的工作场景进行适当的调整和向下拆解</u>。</p><p>讲到这里你可能会有几个问题。</p><p><font color = 'red'>问题1：指标分级治理拆这么细有什么用？</font></p><p><strong>正向作用：分解核心KPI，明确每一个步骤的行动计算和每个行动考核指标。</strong></p><p><u>例如，老板让你估算明年GMV，就可以根据历史数据运用这套指标体系对明年的GMV进行估算。</u></p><p>再例如，<u>老板让你下个月做到1个亿的GMV，让你出个方案。这是就可以再对曝光UV进行细分，把量拆解到每一个渠道上去。</u></p><p><strong>反向作用：当业务出现问题，可以通过指标体系反向排查业务问题。</strong></p><p>例如，<u>这个月的GMV下降了10%，老板让你排查下问题在哪里。这时候就可以根据这套指标体系逐一排查问题，定位到是哪个步骤，哪个环节出现问题，并提出相应的解决策略。</u></p><p>问题2：在运用MECE模型进行指标体系分级治理时，是不是拆的越细越好，越全越好？</p><p>当然不是，在进行MECE拆解时，<u>需要找到与核心指标有重要关联关系的子集进行拆解分类</u>，这样才能保证指套指标体系能够指导业务进行决策分析，帮助数分定位业务问题！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是指标体系&quot;&gt;&lt;a href=&quot;#什么是指标体系&quot; class=&quot;headerlink&quot; title=&quot;什么是指标体系&quot;&gt;&lt;/a&gt;什么是指标体系&lt;/h1&gt;&lt;p&gt;当我们把多个不同的指标有规律，有体系的组织在一起共同去量化人口现状时，它们就成了一套指标体系。&lt;/p</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜数据埋点设计</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E5%9F%8B%E7%82%B9%E8%AE%BE%E8%AE%A1/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E5%9F%8B%E7%82%B9%E8%AE%BE%E8%AE%A1/</id>
    <published>2023-03-08T01:32:24.000Z</published>
    <updated>2023-03-08T02:05:11.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="六个步骤实现数据埋点设计"><a href="#六个步骤实现数据埋点设计" class="headerlink" title="六个步骤实现数据埋点设计"></a>六个步骤实现数据埋点设计</h1><p><strong>1.确认事件与变量</strong></p><p>这里的<strong>事件指产品中的功能或者用户的操作，而变量是指描述事件的属性或者关键指标</strong>。确认事件与变量可以通过<strong>AARRR模型或者UJM模型</strong>进行逐步拆解，理清用户生命周期和行为路径，抽象出每一个步骤的关键指标。</p><p>Tips：AARRR模型和UJM模型会在之前的文章中有讲过，点击阅读原文即可跳转。</p><ul><li><p>AARRR 模型<img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/v2-caf3ea7bae280944457fcd076dced07f_720w.jpg?source=172ae18b"                      alt="重要的产品分析模型：AARRR模型"                ></p></li><li><p>UJM 模型</p></li></ul><p><strong>2.明确事件的触发时机</strong></p><p>不同的触发时机代表不同的计算口径，因此触发时机是影响数据准确的重要因素。以用户付款为例，是以用户点击付款界面作为触发条件，还是以付款成功作为触发条件进行埋点呢？二者口径不同，数据肯定会有一定差异，因此明确事件触发条件非常重要。</p><p>而在用户付款这个例子中，我们建议使用两个字段记录用户付款行为，一个字段记录点击付款界面这个行为，另一个字段记录是否付款成功。</p><p><strong>3.明确事件的上报机制</strong></p><p>不同的上报机制也是数据准确性的重要影响因素之一，客户端上报数据可能会由于网络原因出现丢包的情况，前面章节已经详细介绍过，这里就不在赘述上报机制之间的异同。而作为数据分析师，<strong>在完成埋点工作的时候也需要确定数据是实时上报还是异步上报</strong>，以确定埋点是否合理，并及时调整数据埋点方案。</p><p><strong>4.设计数据表结构</strong></p><p>统一的数据表结构，方便团队内部进行数据的管理和复用，建议<strong>团队内部形成一套统一的数据结构规范</strong>。例如，<strong>将表分为不同的层级，第一层记录用户的基础信息，包括id,地区,昵称等；第二层记录玩家行为信息</strong>。</p><p><strong>5.统一字段命名规范</strong></p><p>有了统一的数据表结构档案还是不够的，统一数据命名规范数据埋点工作的重要一环。<strong>确保同一变量在所有的数据表当中都用统一的字段</strong>，比如消费金额这个字段，我们希望所有的表只要出现消费金额都用Amount字段，不要出现money,pay等其他字段。</p><p>建立公司内部或者团队内部的命名规范是非常必要的，<strong>可以采用「动词+名词」或者「名词+动词」的规则来命名</strong>，比如「加入购物车」事件，就可以命名为：addToCart。</p><p><strong>6.明确优先级</strong></p><p>数据埋点都是为数据应用做铺排，埋点之后分析师可能面临着搭建指标体系和数据报表体系的工作，<strong>可以根据报表的优先级、埋点的技术实现成本以及资源有限性为数据埋点确定优先级</strong>。</p><h1 id="以电商购物成交转化为例实现数据埋点设计"><a href="#以电商购物成交转化为例实现数据埋点设计" class="headerlink" title="以电商购物成交转化为例实现数据埋点设计"></a>以电商购物成交转化为例实现数据埋点设计</h1><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-35d0220539559da807f851b3059896b5_1440w.webp?source=1940ef5c"                      alt="img"                ></p><p><strong>（1）通过UJM模型拆分用户购买商品的路径</strong>：将用户购买路径拆解为<u>注册-登录-商品曝光-商品点击-浏览页面详情-加入购物车-生成订单-订单支付</u>步骤，根据产品或策划提的数据需求，<u>确定每一个步骤学要看哪些字段才能实现数据需求</u>。</p><p><strong>（2）确认触发机制</strong>：明确是在<u>点击按钮时记录行为还是在用户完成该步骤时</u>记录行为。</p><p><strong>（3）确认上报机制</strong>：明确数据上报机制，是<u>实时上报还是异步上报</u>，不同的上报机制采集到的字段可能不一样，或者说需要将字段拆分到不同表进行记录。</p><p><strong>（4）统一字段名</strong>：业务内同一变量在所有的数据表当中都用统一的字段，例如，用户编号用account_id,用户所属国家用region,用户所属地区用ip_region等等。</p><p><strong>（5）统一表层级结构</strong>：我们这里采用两层数据表结构，<u>第一层存放用户基信息，第二层存放用户行为信息</u>。这个根据团队内部的数据接入规范进行调整，只要是统一的结构，对于数据分析师的分析都是有利的。</p><p><strong>（6）明确数据优先级</strong>：根据<u>埋点需求的紧急程度</u>，给每一个买埋点任务标上优先级。</p><p>根据上面的六个步骤，将每一个步骤需要记录的字段按照标准格式<strong>汇总到文档</strong>，即可完成初步的埋点设计。当然完成初版埋点设计之后，还需要与<strong>产品、策划、程序</strong>一遍一遍过文档内容，不断修改完善，直至三方会谈达成统一意见。</p><p><img                       lazyload                     alt="image"                     data-src="https://picx.zhimg.com/80/v2-d33bda07fa0a48858fbf98a396530e90_1440w.webp?source=1940ef5c"                      alt="img"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;六个步骤实现数据埋点设计&quot;&gt;&lt;a href=&quot;#六个步骤实现数据埋点设计&quot; class=&quot;headerlink&quot; title=&quot;六个步骤实现数据埋点设计&quot;&gt;&lt;/a&gt;六个步骤实现数据埋点设计&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.确认事件与变量&lt;/strong&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析｜数据指标口径不统一</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E6%8C%87%E6%A0%87%E5%8F%A3%E5%BE%84%E4%B8%8D%E7%BB%9F%E4%B8%80/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9C%E6%95%B0%E6%8D%AE%E6%8C%87%E6%A0%87%E5%8F%A3%E5%BE%84%E4%B8%8D%E7%BB%9F%E4%B8%80/</id>
    <published>2023-03-08T00:55:55.000Z</published>
    <updated>2023-03-08T01:23:49.754Z</updated>
    
    <content type="html"><![CDATA[<p><img                       lazyload                     alt="image"                     data-src="http://img.pmcaff.com/9e2f3796fc0662953a71edd6a76592b9-picture?imageView2/0/format/jpg"                      alt="图片"                ></p><h1 id="Case1-统一指标在不同系统之间标口径不一致"><a href="#Case1-统一指标在不同系统之间标口径不一致" class="headerlink" title="Case1: 统一指标在不同系统之间标口径不一致"></a>Case1: 统一指标在不同系统之间标口径不一致</h1><p>改进方方案是<strong>将各个系统都需要用的复合指标，统一由数据中台进行加工，并统一向外提供消费</strong>，同时数据中台需要确保指标的<strong>准确性、及时性</strong>，最好能提供<strong>自我质量检查机制</strong>，无需消费者自己再检查。</p><h1 id="Case2-中间表的建立和维护"><a href="#Case2-中间表的建立和维护" class="headerlink" title="Case2: 中间表的建立和维护"></a>Case2: 中间表的建立和维护</h1><ul><li>目的：依托于基础的<strong>埋点表&#x2F;业务明细表&#x2F;用户明细表</strong>等，来提高<strong>数据提取与输出</strong>的效率。</li><li>作用：在[<strong>dws层</strong> (data warehouse service，汇总层，按照业务划分来提供后续的业务查询、数据分发等) ][<a class="link"   href="https://blog.csdn.net/pmdream/article/details/113601956]%EF%BC%8C%E5%B0%86**%E5%9F%BA%E7%A1%80%E4%BA%8B%E5%AE%9E%E5%B1%82**%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E9%80%9A%E8%BF%87**%E4%B8%8E%E4%BA%A7%E5%93%81%E4%BA%BA%E5%91%98%E6%97%A2%E5%AE%9A%E7%9A%84%E8%A7%84%E5%88%99**%E7%BC%96%E5%86%99%EF%BC%8C%E7%94%A8%E2%80%9Dcase" >https://blog.csdn.net/pmdream/article/details/113601956]，将**基础事实层**的数据，通过**与产品人员既定的规则**编写，用”case<i class="fas fa-external-link-alt"></i></a> when”或syscode系统码表来<strong>将业务口径标签化</strong>，将数据<strong>固定在对应主题域</strong>中，方便日常的汇报或者用户分析使用。</li></ul><blockquote><p>引自：<a class="link"   href="https://zhuanlan.zhihu.com/p/145226500" >https://zhuanlan.zhihu.com/p/145226500<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="供给端"><a href="#供给端" class="headerlink" title="供给端"></a>供给端</h2><p>创建一张中间表，将所有功能数据存储，对于有关需求可以随取随用。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-7589a707dbcb40bddd1d36577b8a250c_1440w.webp"                      alt="img"                ></p><h2 id="消耗端"><a href="#消耗端" class="headerlink" title="消耗端"></a>消耗端</h2><p>运营人员除了关注整体的文章阅读外，还会关注各个入口的转化情况，数据如下：</p><p><img                       lazyload                     alt="image"                     data-src="https://pic4.zhimg.com/80/v2-c9a75c4aaf73c79c9e2760754722c0eb_1440w.webp"                      alt="img"                ></p><p><strong>与产品&#x2F;运营人员，开会商议，确定每个来源入口的规则，对埋点表进行处理，用case when使不同的来源入口标签化</strong>：</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-c14e8c8aa14ce726c0044756eb35aaf4_1440w.webp"                      alt="img"                ></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过建立中间表，确实可以提高数据的输出效率，但是<strong>光建立是远远不够的，后期的维护也同样重要</strong>。</p><p>由于规则是与产品&#x2F;运营商定的，<strong>必须形成规范的数据字典文档，存储在公共平台上</strong>（wiki、SVN等），有改动或者新增，需及时调整。</p><p>有新增的业务时，也要在发版之后，添加至中间表中，避免数据遗漏或者重跑。</p><h1 id="Case3-可以彻底解决数据指标口径不统一的问题吗？"><a href="#Case3-可以彻底解决数据指标口径不统一的问题吗？" class="headerlink" title="Case3: 可以彻底解决数据指标口径不统一的问题吗？"></a>Case3: 可以彻底解决数据指标口径不统一的问题吗？</h1><blockquote><p>参考：<a class="link"   href="https://coffee.pmcaff.com/article/3203006749265024?newwindow=1#:~:text=%E6%8C%87%E6%A0%87%E5%8F%A3%E5%BE%84%E4%B8%8D%E7%BB%9F%E4%B8%80%E7%9A%84,%E7%9A%84%E6%8A%8A%E6%95%B0%E6%8D%AE%E7%94%A8%E8%B5%B7%E6%9D%A5%E3%80%82" >https://coffee.pmcaff.com/article/3203006749265024?newwindow=1#:~:text=指标口径不统一的,的把数据用起来%E3%80%82<i class="fas fa-external-link-alt"></i></a></p></blockquote><h1 id="Case4-如何在公司内部统一数据指标口径"><a href="#Case4-如何在公司内部统一数据指标口径" class="headerlink" title="Case4: 如何在公司内部统一数据指标口径"></a>Case4: 如何在公司内部统一数据指标口径</h1><p>第一，<strong>规范数据埋点</strong>，先统一数据埋点的<u>最小维度记录方式</u>等，做好这一步是统一数据口径的基础，会为之后口径的统一提供极大便利；其次是，<strong>构建数据字典</strong>，定义每一个指标的<u>最小维度和统计口径</u>；然后就是通过<strong>数据指标体系</strong>等进行数据指标的展示。</p><p>当然这只是数据层面的，对口径的统一还需要和各方沟通达成统一的认知。</p><h2 id="制定数据埋点规范"><a href="#制定数据埋点规范" class="headerlink" title="制定数据埋点规范"></a>制定数据埋点规范</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img  
                     lazyload
                     alt=&quot;image&quot;
                     data-src=&quot;http://img.pmcaff.com/9e2f3796fc0662</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>数据分析|DAU下降分析</title>
    <link href="https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CDAU%E4%B8%8B%E9%99%8D%E5%88%86%E6%9E%90/"/>
    <id>https://artemis727.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%EF%BD%9CDAU%E4%B8%8B%E9%99%8D%E5%88%86%E6%9E%90/</id>
    <published>2023-03-08T00:17:09.000Z</published>
    <updated>2023-03-08T06:02:53.733Z</updated>
    
    <content type="html"><![CDATA[<h1 id="产品日活-DAU-下降，该如何分析"><a href="#产品日活-DAU-下降，该如何分析" class="headerlink" title="产品日活(DAU)下降，该如何分析"></a>产品日活(DAU)下降，该如何分析</h1><blockquote><p>案例：例如网易新闻APP日活突然下降5%，需要尽快排查一下数据下跌的原因。</p></blockquote><h2 id="分析框架和逻辑思维"><a href="#分析框架和逻辑思维" class="headerlink" title="分析框架和逻辑思维"></a>分析框架和逻辑思维</h2><p>![image-20230308082432891](&#x2F;Users&#x2F;xiaoyu&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230308082432891.png)</p><p>可以分为五个步骤。</p><p><strong>第一，结合以往经验及各种信息，对数据的异常作出假设。</strong>比如假期效应、热点事件、活动影响、政策影响和统计口径变化等。</p><p><strong>第二，确认数据的真实性。</strong>可以将时间轴拉长至3个月，做同比和环比，看是近期异常还是历史异常；还需要看与该指标关联的其他指标是否异常，并找关键人员比如产品和研发确认数据的真实性。</p><p><strong>第三，对数据从不同的维度进行拆分来验证假设。</strong>比如从新用户&#x2F;老用户、新版本&#x2F;老版本、登录渠道和入口等维度。</p><p><strong>第四，分析外部原因和内部原因。</strong>外部原因考虑政治、经济和社会因素，比如政策、竞品APP数据和社会事件影响；内部影响从产品、研发和运营入手，并注意统计口径是发生了变化，比如业务逻辑的改变和指标计算方式的变化。</p><p><strong>第五，需要将当前的结论文档化，并持续跟踪后期的数据是否再次异常。</strong>确认无误之后给相关人员发邮件输出影响范围和分析的结论等等。</p><h2 id="1-对数据异常原因做出假设，利用数据验证"><a href="#1-对数据异常原因做出假设，利用数据验证" class="headerlink" title="1. 对数据异常原因做出假设，利用数据验证"></a>1. 对数据异常原因做出假设，利用数据验证</h2><p>影响DAU因素较多，对所有维度直接拆解耗时耗力。所以需要<strong>结合以往经验及各种信息，对数据异常的原因做出假设</strong>，然后对数据<strong>从不同维度拆分来验证假设</strong>。可能随着之前的假设的验证不断进行新的假设，直到<strong>定位原因</strong>。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic3.zhimg.com/80/v2-22a204d699aa50233b3dee6f2264545e_1440w.jpg"                      alt="img"                ></p><h2 id="2-确认数据真实性"><a href="#2-确认数据真实性" class="headerlink" title="2. 确认数据真实性"></a>2. 确认数据真实性</h2><ul><li>将时间轴拉长(3个月)，做同比和环比，看近期异常还是历史异常；</li><li>查看与该指标关联的其他指标是否异常；</li><li>找数据流相关产品和研发确实数据真实性。</li></ul><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-9244e21224593a51db9eefab77969a2c_1440w.webp"                      alt="img"                ></p><h2 id="3-常见拆分维度"><a href="#3-常见拆分维度" class="headerlink" title="3. 常见拆分维度"></a>3. 常见拆分维度</h2><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-86283af0164e49c1459e33431baa3c65_1440w.webp"                      alt="img"                ></p><p><strong>根据以上维度拆分之后，每项数据都需要和历史数据做对比，计算影响系数。</strong></p><p>影响系数&#x3D;(今日数据−昨日数据)&#x2F;(今日总量−昨日总量)</p><p><strong>影响系数越大，说明此处为主要原因所在。</strong></p><p>通过上述维度进行初步拆分，可以<strong>大致定位数据异常范围</strong>。</p><h2 id="4-外部原因分析"><a href="#4-外部原因分析" class="headerlink" title="4. 外部原因分析"></a>4. 外部原因分析</h2><p>外部：外部原因分析可以根据<strong>PEST（政治、经济、社会、技术）模型</strong>进行分析。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-cc5ad446c4efa076975b2fbaafb3ea54_1440w.webp"                      alt="img"                ></p><h2 id="5-内部原因分析"><a href="#5-内部原因分析" class="headerlink" title="5. 内部原因分析"></a>5. 内部原因分析</h2><p>通过初步分析定位范围之后，需要进行进一步的排查，一般从三个维度来分析：<strong>产品、技术、运营</strong>；<strong>可以和这几个人一起拉一个会讨论一下</strong>。同时应注意<strong>数据统计口径</strong>是否发生变化。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-c820282ce239ee9ae366cabcb5cc950c_1440w.webp"                      alt="img"                ></p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>所以我们整个的分析流程大致为：</p><p><strong>先结合以往数据异常进行假设 —— 在一个假设得到验证之后 —— 从不同维度进行拆解，确定异常范围 —— 从产品、运营、技术侧逐一排查，最终找到原因。</strong></p><p>以上分析框架不仅局限于DAU波动，对于数据异常类问题即可根据以上模型进行分析。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;产品日活-DAU-下降，该如何分析&quot;&gt;&lt;a href=&quot;#产品日活-DAU-下降，该如何分析&quot; class=&quot;headerlink&quot; title=&quot;产品日活(DAU)下降，该如何分析&quot;&gt;&lt;/a&gt;产品日活(DAU)下降，该如何分析&lt;/h1&gt;&lt;blockquote&gt;
</summary>
      
    
    
    
    
    <category term="数据分析" scheme="https://artemis727.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>SQL 复习1</title>
    <link href="https://artemis727.github.io/2023/03/06/SQL-%E5%A4%8D%E4%B9%A01/"/>
    <id>https://artemis727.github.io/2023/03/06/SQL-%E5%A4%8D%E4%B9%A01/</id>
    <published>2023-03-06T12:38:18.000Z</published>
    <updated>2023-03-12T00:20:26.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL语句顺序"><a href="#SQL语句顺序" class="headerlink" title="SQL语句顺序"></a>SQL语句顺序</h1><p>sql语句的书写顺序:<br><strong>select &gt;&gt; from &gt;&gt; where &gt;&gt; group by &gt;&gt; having &gt;&gt; order by &gt;&gt; limit</strong><br>注意：</p><ol><li>select和from是必须的；</li><li>where和having不能同时使用;</li><li>having和group by联合使用；</li></ol><p>sql语句的解析顺序 :<br>from &gt;&gt; on&gt;&gt; join &gt;&gt; where &gt;&gt; group by &gt;&gt; having &gt;&gt; select &gt;&gt; distinct &gt;&gt; order by &gt;&gt; limit<br>注意：虽然select在having后执行，但是mysql中仍然可以在having中使用select语句定义的别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">ALL</span> <span class="operator">|</span> <span class="keyword">DISTINCT</span> <span class="operator">|</span> DISTINCTROW <span class="operator">|</span> TOP] 字段</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line">[<span class="keyword">inner</span> <span class="keyword">join</span>  <span class="keyword">right</span> <span class="keyword">join</span> <span class="operator">|</span> <span class="keyword">left</span> <span class="keyword">join</span> 表<span class="number">2</span>]</span><br><span class="line">[<span class="keyword">on</span> 连接条件]</span><br><span class="line">[<span class="keyword">where</span> 条件]</span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> 分组规则]</span><br><span class="line">[<span class="keyword">having</span> 分组条件]</span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> 排序规则]</span><br><span class="line">[limit 分页规则]</span><br></pre></td></tr></table></figure><h1 id="对于-join，如果不写-left-inner-right-，默认是什么联接呢？"><a href="#对于-join，如果不写-left-inner-right-，默认是什么联接呢？" class="headerlink" title="对于 join，如果不写 left, inner, right ，默认是什么联接呢？"></a>对于 join，如果不写 left, inner, right ，默认是什么联接呢？</h1><p>是<code>inner join</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a <span class="keyword">join</span> b <span class="keyword">on</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a <span class="keyword">inner</span> <span class="keyword">join</span> b <span class="keyword">on</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a, b <span class="keyword">where</span> a.id <span class="operator">=</span> b.id</span><br><span class="line"># 上面的三个是相等的.</span><br><span class="line"></span><br><span class="line"># 剩下的<span class="keyword">join</span>类型有:</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">cross</span> <span class="keyword">join</span></span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span></span><br><span class="line"></span><br><span class="line"># <span class="number">2005</span>新加</span><br><span class="line"><span class="keyword">cross</span> apply</span><br><span class="line"><span class="keyword">outer</span> apply</span><br></pre></td></tr></table></figure><p> <strong>各种连接方式的区别？</strong></p><p><strong>inner_join：</strong>  内连接，根据两个表共有的列来匹配其中的行，强调只有两个表共有的列值对应的行才能匹配出来。</p><p><strong>left join&#x2F;right join&#x2F;all join：</strong> （左，右，全）外连接，以left join 为例，如果指定了需要匹配的列名，无论右表对应行是否包含满足连接条件的数据，左表的数据都会提取出来，则结果会将右表的这些值以空值的形式匹配进来。</p><p><strong>cross join：</strong>  交叉连接，结果是笛卡尔积，就是第一个表符合查询条件的行数乘以第二个表符合查询条件的行数。</p><h1 id="SQL窗口函数"><a href="#SQL窗口函数" class="headerlink" title="SQL窗口函数"></a>SQL窗口函数</h1><p>窗口函数原则上只能写在select语句中，对where或group by子句处理后的结果进行操作，可以分为以下两种函数：</p><p>1） 专用窗口函数，包括后面要讲到的rank, dense_rank, row_number等专用窗口函数。</p><p>2） 聚合函数，如sum. avg, count, max, min等</p><p>窗口函数的基本语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>窗口函数<span class="operator">&gt;</span> <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> <span class="operator">&lt;</span>用于分组的列名<span class="operator">&gt;</span></span><br><span class="line">                <span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>用于排序的列名<span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure><h2 id="窗口函数使用"><a href="#窗口函数使用" class="headerlink" title="窗口函数使用"></a>窗口函数使用</h2><blockquote><p>转自：<a class="link"   href="https://zhuanlan.zhihu.com/p/92654574" >https://zhuanlan.zhihu.com/p/92654574<i class="fas fa-external-link-alt"></i></a></p></blockquote><h3 id="rank"><a href="#rank" class="headerlink" title="rank"></a>rank</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>, <span class="built_in">rank</span>() <span class="keyword">over</span>(</span><br><span class="line"><span class="keyword">partition</span> <span class="keyword">by</span> class</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> grade <span class="keyword">desc</span>) <span class="keyword">as</span> ranking</span><br><span class="line"><span class="keyword">from</span> classtable</span><br></pre></td></tr></table></figure><p>1）每个班级内：按班级分组</p><p><strong>partition by用来对表分组</strong>。在这个例子中，所以我们指定了按“班级”分组（partition by 班级）<br>2）按成绩排名</p><p><strong>order by子句的功能是对分组后的结果进行排序</strong>，默认是按照升序（asc）排列。在本例中（order by 成绩 desc）是按成绩这一列排序，加了desc关键词表示降序排列。</p><p><font color = 'red'>窗口函数具备了我们之前学过的group by子句分组的功能和order by子句排序的功能。那么，为什么还要用窗口函数呢？</font></p><p>这是因为，<strong>group by分组汇总后改变了表的行数，一行只有一个类别。而partiition by和rank函数不会减少原表中的行数</strong>。例如下面统计每个班级的人数。</p><p><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-a9342df7f64ec7d9a52b42adcdb48341_1440w.webp"                      alt="img"                ></p><p>现在我们说回来，为什么叫“窗口”函数呢？这是因为<strong>partition by分组后的结果称为“窗口”，这里的窗口不是我们家里的门窗，而是表示“范围”的意思</strong>。</p><p><strong>简单来说，窗口函数有以下功能：</strong></p><p><strong>1）同时具有分组和排序的功能</strong></p><p><strong>2）不减少原表的行数</strong></p><h3 id="其他窗口函数"><a href="#其他窗口函数" class="headerlink" title="其他窗口函数"></a>其他窗口函数</h3><p>专用窗口函数<strong>rank, dense_rank, row_number</strong>有什么区别呢？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">   <span class="built_in">rank</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span>) <span class="keyword">as</span> ranking,</span><br><span class="line">   <span class="built_in">dense_rank</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span>) <span class="keyword">as</span> dese_rank,</span><br><span class="line">   <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span>) <span class="keyword">as</span> row_num</span><br><span class="line"><span class="keyword">from</span> 班级表</span><br></pre></td></tr></table></figure><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-ad1d86f5a5b9f0ef684907b20b341099_1440w.webp"                      alt="img" style="zoom:50%;"                 ><p>rank函数：这个例子中是5位，5位，5位，8位，也就是<strong>如果有并列名次的行，会占用下一名次的位置</strong>。比如正常排名是1，2，3，4，但是现在前3名是并列的名次，结果是：1，1，1，4。</p><p>dense_rank函数：这个例子中是5位，5位，5位，6位，也就是<strong>如果有并列名次的行，不占用下一名次的位置</strong>。比如正常排名是1，2，3，4，但是现在前3名是并列的名次，结果是：1，1，1，2。</p><p>row_number函数：这个例子中是5位，6位，7位，8位，也就是<strong>不考虑并列名次的情况</strong>。比如前3名是并列的名次，排名是正常的1，2，3，4。</p><p>在上述的这三个专用窗口函数中，函数后面的括号不需要任何参数，保持()空着就可以。</p><h3 id="聚合函数作为窗口函数"><a href="#聚合函数作为窗口函数" class="headerlink" title="聚合函数作为窗口函数"></a>聚合函数作为窗口函数</h3><p>聚和窗口函数和上面提到的专用窗口函数用法完全相同，只需要把聚合函数写在窗口函数的位置即可，<strong>但是函数后面括号里面不能为空，需要指定聚合的列名</strong>。</p><p>我们来看一下窗口函数是聚合函数时，会出来什么结果：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">   <span class="built_in">sum</span>(成绩) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 学号) <span class="keyword">as</span> current_sum,</span><br><span class="line">   <span class="built_in">avg</span>(成绩) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 学号) <span class="keyword">as</span> current_avg,</span><br><span class="line">   <span class="built_in">count</span>(成绩) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 学号) <span class="keyword">as</span> current_count,</span><br><span class="line">   <span class="built_in">max</span>(成绩) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 学号) <span class="keyword">as</span> current_max,</span><br><span class="line">   <span class="built_in">min</span>(成绩) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 学号) <span class="keyword">as</span> current_min</span><br><span class="line"><span class="keyword">from</span> 班级表</span><br></pre></td></tr></table></figure><img                       lazyload                     alt="image"                     data-src="https://pic2.zhimg.com/80/v2-c48f0218306f65049fcf9f98c184226d_1440w.webp"                      alt="img" style="zoom:67%;"                 ><p>有发现什么吗？我单独用sum举个例子：</p><p>如上图，<strong>聚合函数sum在窗口函数中，是对自身记录、及位于自身记录以上的数据进行求和的结果</strong>。比如0004号，在使用sum窗口函数后的结果，是对0001，0002，0003，0004号的成绩求和，若是0005号，则结果是0001号~0005号成绩的求和，以此类推。</p><p>不仅是sum求和，平均、计数、最大最小值，也是同理，<strong>都是针对自身记录、以及自身记录之上的所有数据进行计算</strong>，现在再结合刚才得到的结果（下图），是不是理解起来容易多了？</p><p>如果想要知道所有人成绩的总和、平均等聚合结果，看最后一行即可。</p><p><strong>这样使用窗口函数有什么用呢？</strong></p><p>聚合函数作为窗口函数，<strong>可以在每一行的数据里直观的看到，截止到本行数据，统计数据是多少（最大值、最小值等）</strong>。同时可以看出<strong>每一行数据，对整体统计数据的影响</strong>。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>partition子句可省略，<strong>省略就是不指定分组</strong>，结果如下，只是按成绩由高到低进行了排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">   <span class="built_in">rank</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span>) <span class="keyword">as</span> ranking</span><br><span class="line"><span class="keyword">from</span> 班级表</span><br></pre></td></tr></table></figure><p>得到结果：</p><img                       lazyload                     alt="image"                     data-src="https://pic1.zhimg.com/80/v2-c589fe21dd785ff5996174684cc4de84_1440w.webp"                      alt="img" style="zoom:50%;"                 ><p>但是，这就失去了窗口函数的功能，所以一般不要这么使用。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>1.窗口函数语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>窗口函数<span class="operator">&gt;</span> <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> <span class="operator">&lt;</span>用于分组的列名<span class="operator">&gt;</span></span><br><span class="line">                <span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>用于排序的列名<span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure><p>&lt;窗口函数&gt;的位置，可以放以下两种函数：</p><p>1） 专用窗口函数，比如rank, dense_rank, row_number等</p><p>2） 聚合函数，如sum. avg, count, max, min等</p><p><strong>2.窗口函数有以下功能：</strong></p><p>1）同时具有分组（partition by）和排序（order by）的功能</p><p>2）不减少原表的行数，所以经常用来在每组内排名</p><p><strong>3.注意事项</strong></p><p>窗口函数原则上只能写在select子句中</p><p><strong>4.窗口函数使用场景</strong></p><p>1）业务需求“<strong>在每组内排名”</strong>，比如：</p><blockquote><p>排名问题：每个部门按业绩来排名<br>topN问题：找出每个部门排名前N的员工进行奖励</p></blockquote><h1 id="on和where的区别"><a href="#on和where的区别" class="headerlink" title="on和where的区别"></a>on和where的区别</h1><blockquote><p>参考：<a class="link"   href="https://blog.csdn.net/tayngh/article/details/99684035" >https://blog.csdn.net/tayngh/article/details/99684035<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>前提：数据库在连接多张表返回记录时，都会生成一个中间临时表。</p><p>在多表查询时，ON和where都表示筛选条件，<strong>on先执行，where后执行</strong>。<br><u>区别：</u><br><strong>外连接时，on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。而where条件是在临时表生成好后，再对临时表进行过滤的条件。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> emp e </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d </span><br><span class="line"><span class="keyword">ON</span> e.deptno<span class="operator">=</span>d.`deptno` <span class="keyword">AND</span> e.`deptno`<span class="operator">=</span><span class="number">40</span>;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdnimg.cn/20190816192208899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RheW5naA==,size_16,color_FFFFFF,t_70"                      alt="on查询结果"                ></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> emp e </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d </span><br><span class="line"><span class="keyword">ON</span> e.deptno<span class="operator">=</span>d.`deptno` </span><br><span class="line"><span class="keyword">WHERE</span> e.`deptno`<span class="operator">=</span><span class="number">40</span>;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://img-blog.csdnimg.cn/20190816192248562.png"                      alt="where查询图片"                ></p><p>来我们分析一下为什么会造成以上两种不同的结果。</p><ul><li>on是生成临时表时使用的条件，上面我们采用的是左外连接，左外连接是以左表为基础的，<strong>左表的记录将会全部表示出来，而右表只会显示符合搜索条件的记录</strong>。也就是说emp是左表，dept是右表，条件是emp的deptno与dept中的deptno相等且为40时才连接，<strong>但emp表中不存在deptno为40的记录，也就是右表没有符合条件的记录，而记录不足的地方均用NULL来补充。</strong></li><li>而where是在临时表生成好后，再对临时表进行过滤。也就是说emp表与dept的连接条件只是emp的deptno与dept中的deptno相等，<strong>然后在对生成的临时表进行筛选，由于emp表中不存在deptno为40的记录，所以未找到符合条件的记录。</strong></li></ul><p>由于<strong>内连接是从结果表中删除与其他被连接表中没有匹配行的所有行</strong>，所以<strong>在内连接时on和where的结果是相同的</strong>。而左外、右外与全连接由于它的特殊性，on和where造成的差别大小取决于表达式和表中的数据。</p><blockquote><p>参考：<a class="link"   href="https://www.runoob.com/w3cnote/sql-different-on-and-where.html" >https://www.runoob.com/w3cnote/sql-different-on-and-where.html<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的临时表，然后再将这张临时表返回给用户。</p><p>在使用 <strong>left join</strong> 时，<strong>on</strong> 和 <strong>where</strong> 条件的区别如下：</p><p>1、<strong>on</strong> 条件是在生成临时表时使用的条件，它不管 <strong>on</strong> 中的条件是否为真，都会返回左边表中的记录。</p><p>2、where 条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有 <strong>left join</strong> 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</p><p>假设有两张表：</p><p>表1：tab1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id size</span><br><span class="line"><span class="number">1</span>  <span class="number">10</span></span><br><span class="line"><span class="number">2</span>  <span class="number">20</span></span><br><span class="line"><span class="number">3</span>  <span class="number">30</span></span><br></pre></td></tr></table></figure><p>表2：tab2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">size name</span><br><span class="line"><span class="number">10</span>   AAA</span><br><span class="line"><span class="number">20</span>   BBB</span><br><span class="line"><span class="number">20</span>   CCC</span><br></pre></td></tr></table></figure><p>两条SQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tab1 <span class="keyword">left</span> <span class="keyword">join</span> tab2 <span class="keyword">on</span> tab1.size <span class="operator">=</span> tab2.size <span class="keyword">where</span> tab2.name<span class="operator">=</span><span class="string">&#x27;AAA&#x27;</span></span><br><span class="line"><span class="number">2</span>、<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tab1 <span class="keyword">left</span> <span class="keyword">join</span> tab2 <span class="keyword">on</span> tab1.size <span class="operator">=</span> tab2.size <span class="keyword">and</span> tab2.name<span class="operator">=</span><span class="string">&#x27;AAA&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>第一条SQL的过程：</strong></p><p>1、中间表</p><p>on 条件:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tab1.size <span class="operator">=</span> tab2.size</span><br><span class="line">tab1.id tab1.size tab2.size tab2.name</span><br><span class="line"><span class="number">1</span> <span class="number">10</span> <span class="number">10</span> AAA</span><br><span class="line"><span class="number">2</span> <span class="number">20</span> <span class="number">20</span> BBB</span><br><span class="line"><span class="number">2</span> <span class="number">20</span> <span class="number">20</span> CCC</span><br><span class="line"><span class="number">3</span> <span class="number">30</span> (<span class="keyword">null</span>) (<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p>2、再对中间表过滤</p><p>where 条件：</p><p>tab2.name&#x3D;’AAA’</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tab1.id tab1.size tab2.size tab2.name</span><br><span class="line"><span class="number">1</span> <span class="number">10</span> <span class="number">10</span> AAA</span><br></pre></td></tr></table></figure><p><strong>第二条SQL的过程：</strong></p><p>1、中间表</p><p>on 条件:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tab1.size <span class="operator">=</span> tab2.size <span class="keyword">and</span> tab2.name<span class="operator">=</span><span class="string">&#x27;AAA&#x27;</span></span><br><span class="line">(条件不为真也会返回左表中的记录) tab1.id tab1.size tab2.size tab2.name</span><br><span class="line"><span class="number">1</span> <span class="number">10</span> <span class="number">10</span> AAA</span><br><span class="line"><span class="number">2</span> <span class="number">20</span> (<span class="keyword">null</span>) (<span class="keyword">null</span>)</span><br><span class="line"><span class="number">3</span> <span class="number">30</span> (<span class="keyword">null</span>) (<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p>其实以上结果的关键原因就是 <strong>left join,right join,full join</strong> 的特殊性。</p><p>不管 on 上的条件是否为真都会返回 left 或 right 表中的记录，full 则具有 left 和 right 的特性的并集。</p><p>而 inner jion 没这个特殊性，则条件放在 on 中和 where 中，返回的结果集是相同的。</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>前提：数据库在连接多张表返回记录时，都会生成一个中间临时表。</p><p>在内连接中，使用on或者where没有区别。</p><p>在外连接里，例如使用left join时：</p><p><strong>on是在生成临时表时使用的条件</strong>，不管on的条件是否为真，都会返回左边表中的全部记录。</p><p><strong>where条件是在临时表生成好后，再对临时表进行过滤的条件</strong>。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</p><h1 id="SQL行列转换"><a href="#SQL行列转换" class="headerlink" title="SQL行列转换"></a>SQL行列转换</h1><blockquote><p>参考：<a class="link"   href="https://www.jianshu.com/p/1c6fb0df9f58" >https://www.jianshu.com/p/1c6fb0df9f58<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h2><p>假如我们有下表：</p><p><img                       lazyload                     alt="image"                     data-src="https://upload-images.jianshu.io/upload_images/1691280-fe651b7989ee5052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/267/format/webp"                      alt="img"                ></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line">PIVOT (</span><br><span class="line">    <span class="built_in">SUM</span>(score) <span class="keyword">FOR</span> subject <span class="keyword">IN</span> (语文, 数学, 英语)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>通过上面 SQL 语句即可得到下面的结果</p><p><img                       lazyload                     alt="image"                     data-src="https://upload-images.jianshu.io/upload_images/1691280-e82d6a40909b732f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/354/format/webp"                      alt="img"                ></p><p>PIVOT 后跟一个聚合函数来拿到结果，FOR 后面跟的科目是我们要转换的列，这样的话科目中的语文、数学、英语就就被转换为列。IN 后面跟的就是具体的科目值。</p><p><strong>pivot将原来表中 课程字段中的 数据行 语文，数学，英语 转换为列，并用sum取对应列的值。</strong></p><p>当然我们也可以用 CASE WHEN 得到同样的结果，就是写起来麻烦一点。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,</span><br><span class="line">  <span class="built_in">MAX</span>(</span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;语文&#x27;</span></span><br><span class="line">    <span class="keyword">THEN</span> score</span><br><span class="line">    <span class="keyword">ELSE</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;语文&quot;,</span><br><span class="line">  <span class="built_in">MAX</span>(</span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;数学&#x27;</span></span><br><span class="line">    <span class="keyword">THEN</span> score</span><br><span class="line">    <span class="keyword">ELSE</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;数学&quot;,</span><br><span class="line">  <span class="built_in">MAX</span>(</span><br><span class="line">  <span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> subject<span class="operator">=</span><span class="string">&#x27;英语&#x27;</span></span><br><span class="line">    <span class="keyword">THEN</span> score</span><br><span class="line">    <span class="keyword">ELSE</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;英语&quot;</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> name</span><br></pre></td></tr></table></figure><p>使用 CASE WHEN 可以得到和 PIVOT 同样的结果，没有 PIVOT 简单直观。</p><h2 id="列转行"><a href="#列转行" class="headerlink" title="列转行"></a>列转行</h2><p>假设我们有下表 student1</p><p><img                       lazyload                     alt="image"                     data-src="https://upload-images.jianshu.io/upload_images/1691280-e82d6a40909b732f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/354/format/webp"                      alt="img"                ></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> student1</span><br><span class="line">UNPIVOT (</span><br><span class="line">    score <span class="keyword">FOR</span> subject <span class="keyword">IN</span> (&quot;语文&quot;,&quot;数学&quot;,&quot;英语&quot;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>通过 UNPIVOT 即可得到如下结果：</p><p><img                       lazyload                     alt="image"                     data-src="https://upload-images.jianshu.io/upload_images/1691280-fe651b7989ee5052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/267/format/webp"                      alt="img"                ></p><p>我们也可以使用下面方法得到同样结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    NAME,</span><br><span class="line">    <span class="string">&#x27;语文&#x27;</span> <span class="keyword">AS</span> subject ,</span><br><span class="line">    <span class="built_in">MAX</span>(&quot;语文&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    NAME,</span><br><span class="line">    <span class="string">&#x27;数学&#x27;</span> <span class="keyword">AS</span> subject ,</span><br><span class="line">    <span class="built_in">MAX</span>(&quot;数学&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    NAME,</span><br><span class="line">    <span class="string">&#x27;英语&#x27;</span> <span class="keyword">AS</span> subject ,</span><br><span class="line">    <span class="built_in">MAX</span>(&quot;英语&quot;) <span class="keyword">AS</span> score</span><br><span class="line"><span class="keyword">FROM</span> student1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> NAME</span><br></pre></td></tr></table></figure><h1 id="索引的作用"><a href="#索引的作用" class="headerlink" title="索引的作用"></a>索引的作用</h1><p>索引是为了<strong>提高数据库查询数据的速度</strong>而增加的标志符号（通过创建<strong>唯一性索引，可以保证表中每一行数据的唯一性</strong>）。索引主要建立在<strong>①经常搜索的列；②主键所在列；③外键所在列</strong></p><p>索引包括聚集索引与非聚集索引，它们的区别在于<strong>索引记录的顺序与表记录的顺序是否一致</strong>。</p><p>聚集索引:  可以理解为<strong>索引记录的顺序与表记录的顺序一致</strong>，SQL默认在依次递增的主键上建立聚集索引，例如，id为1的数据在第一条，id为2的数据在第二条。聚集索引会按照主键的顺序来排序。（例如，用字典找字，对于认识的字可以通过拼音排序对应正文找到页码）</p><p>非聚集索引:  可以理解<strong>数据存储在一个地方，索引指向数据存储的位置，索引的顺序与表中数据记录的顺序不一定一致</strong>。例如说，建立数据表登记学生考试成绩，字段包括姓名，学号与分数。假定该表按照成绩排序、学号信息错乱，可以考虑构建非聚集索引，第一名对应1，第二名对应2……，想要提取第10个学生的学号，查找索引10指向的数据即可。（用字典找字，不认识的字可以采用部首结合笔画等信息在检字表中搜索，找到页码。比如查”张”字，检字表中”张”的页码是60页，检字表中”张”的上面是”驰”字，但页码却是100页，”张”的下面是”弩”字，页面是200页。很显然，在正文里面这些字并不是真正的分别位于”张”字的上下方，而检字表中连续的”驰、张、弩”三字实际上就是他们在非聚集索引中的排序）</p><p>（关于聚集索引和非聚集索引的区别可以百度学习下，我记得好几家面试都直接问了……）</p><h1 id="排名函数与排序函数"><a href="#排名函数与排序函数" class="headerlink" title="排名函数与排序函数"></a>排名函数与排序函数</h1><p>排序函数：<strong>order by</strong> （默认asc升序，指定desc降序），例如将表格数据按照考试成绩从低到高排序。</p><p>排名函数：<strong>rank, dense rank, row number</strong> ，得到的成绩的排序后，根据成绩的高低对学生排名，100分对应第一名，99分第二名。它们的区别在于：</p><p><strong>rank</strong>函数：如果有并列名次的行，会占用下一名次的位置。1，1，1，4。</p><p><strong>dense_rank</strong>函数：如果有并列名次的行，不占用下一名次的位置。1，1，1，2。</p><p><strong>row_number</strong>函数：不考虑并列名次的情况。1，2，3，4。</p><h1 id="连接多个select？"><a href="#连接多个select？" class="headerlink" title="连接多个select？"></a>连接多个select？</h1><p>**union:**连接select，不允许重复值，而且select的对象要有相同的列以及数据类型；(例如A表中某字段的数据是1,1,2,3,4，B表中对应的数据是（0,0,0,0,0），则提取的数据是（1,0；2,0；3,0；4,0），也就是说（1,0）这个组合只会出现一次。)</p><p>**union all:**作用同union,但是允许重复值（也就是说，与上面一样的操作里，(1,0)这个组合会出现2次）</p><p>一般来说如果select 字段大于1个，用union all比用union速度快，因为union 会将多个结果中重复的数据合并，union all则是直接合并</p><p><strong>Intersect:</strong> 和 union指令类似，intersect也是合并两个select语句结果的函数。不同的地方是， union的处理结果类似于全集 (如果这个值存在于第一个select或者第二个select，它就会被选出)，而intersect则比较像取出交集 ( 值要同时存在于第一个select和第二个select)。</p><p>**minus:**先找出第一个 select 语句所产生的结果，然后看这些结果有没有在第二个 select语句的结果中。最后会输出<u>第一个select中没有，但是第二个select中有的数据</u></p><h1 id="主键和外建？"><a href="#主键和外建？" class="headerlink" title="主键和外建？"></a>主键和外建？</h1><p>主键是一张表中能够确定一条记录的<strong>唯一</strong>标志(数据库中的一条记录中有若干个属性，若其中某一个属性组(注意是组)能唯一标识一条记录，该属性组就可以成为一个主键 )，比如身份证号。</p><p>外键用于和另一张表进行关联。例如，A字段是A表的主键，那么出现在B表中的A字段能够作为B表的外键，实现A,B表的连接查询。</p><h1 id="向表中插入数据"><a href="#向表中插入数据" class="headerlink" title="向表中插入数据"></a>向表中插入数据</h1><p><strong>insert into tablename values:</strong>  普通插入数据模式</p><p><strong>insert or ignore into:</strong> 如果没有则插入数据，如果有则忽略</p><p><strong>insert or replace into:</strong> 如果不存在就插入，存在就更新</p><h1 id="删除表中数据"><a href="#删除表中数据" class="headerlink" title="删除表中数据"></a>删除表中数据</h1><p><strong>delete  :</strong> 删除表中数据，可以指定具体数据（where）</p><p><strong>drop column&#x2F; drop table</strong> :  删除列数据，与delete 不同，drop函数会将数据以及表的结构全部删除。</p><p>**truncate:**仅删除数据，且默认删除所有数据。和delete不同，truncate不能用where进行筛选，但删除速度比delete快</p><h1 id="字符串常见操作函数"><a href="#字符串常见操作函数" class="headerlink" title="字符串常见操作函数"></a>字符串常见操作函数</h1><p><strong>concat():</strong>  将多个字符串连接成一个字符串，连接符用“”包起来</p><p>**concat_ws()**； 将多个字符串连接成一个字符串，在最开始的位置指定连接符（指定一次即可）</p><p><strong>group concat():</strong>  将group by产生的同一个分组中的值连接起来，返回一个字符串。</p><p><strong>like():</strong>   需要与通配符一起使用（’%’代表任意字符出现任意次数；’_’仅能匹配单个字符）</p><p><strong>substr():</strong>   用于从字段中提取相应位置的字符。</p><p><strong>regexp()</strong> :  正则表达式匹配函数</p><h1 id="in-x2F-exist-的关系和区别"><a href="#in-x2F-exist-的关系和区别" class="headerlink" title="in&#x2F;exist 的关系和区别"></a>in&#x2F;exist 的关系和区别</h1><p><strong>子查询过程中，In和exist函数效率比较：</strong></p><p>当进行连接的两个表大小相似，效率差不多；</p><p>如果子查询的内表更大，则exist的效率更高（exist先查询外表，然后根据外表中的每一个记录，分别执行exist语句判断子查询的内表是否满足条件，满足条件就返回ture）。</p><p>如果子查询的内表小，则in的效率高（in在查询的时候，首先查询子查询的表，然后将内表和外表做一个笛卡尔积 (表中的每一行数据都能够任意组合A表有a行，B表有b行，最后会输出a*b行)，然后按照条件进行筛选。所以相对内表比较小的时候，in的速度较快）。</p><p><strong>Exist的原理:</strong> 使用exist时，若子查询能够找到匹配的记录，则返回true，外表能够提取查询数据；使用 not exist 时，若子查询找不到匹配记录，则返回true，外表能够提取查询数据。</p><h1 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h1><p>笛卡尔乘积简单来说，就是两个集合中的每一个成员，都与对方集合中的任意一个成员有关联。开发人员在写代码时,往往因为遗漏了join条件,而触发了集合A中的一条数据能与集合B的另一个元素发生关联后呈现出在一行数据,并且无错误的显现出来,形成强制关系;所以查询俩表,要么对联立的俩字段进行严格筛选得出独一值的列项,要么对这俩表的字段的数据进行唯一约束,防止此类情况发生,以避开此类堆积无名义的数据的出现。</p><h1 id="LEFT-JOIN和INNER-JOIN，FULL-JOIN什么区别？"><a href="#LEFT-JOIN和INNER-JOIN，FULL-JOIN什么区别？" class="headerlink" title="LEFT JOIN和INNER JOIN，FULL JOIN什么区别？"></a>LEFT JOIN和INNER JOIN，FULL JOIN什么区别？</h1><ul><li><p>都是连接查询；</p></li><li><p>inner join -&gt; 只保留两张表中完全匹配的结果集；</p></li><li><p>left join -&gt; 返回左表中所有的行，即使在右表中没有匹配的记录；</p></li><li><p>right join -&gt; 返回右表中所有的行，即使在左表中没有匹配的记录；</p></li><li><p>full join -&gt; 返回左表和右表中所有的行，左表和右表中没有匹配数据各自单独一行。</p></li></ul><h1 id="HAVING和WHERE什么区别？"><a href="#HAVING和WHERE什么区别？" class="headerlink" title="HAVING和WHERE什么区别？"></a><strong>HAVING和WHERE什么区别？</strong></h1><ul><li><p>“Where” 是一个约束声明，使用Where来约束来自<a class="link"   href="http://lib.csdn.net/base/mysql" >数据库<i class="fas fa-external-link-alt"></i></a>的数据，Where是在结果返回之前起作用的，且Where中不能使用聚合函数。</p></li><li><p>“Having”是一个过滤声明，是在查询返回结果集以后对查询结果进行的过滤操作，在Having中可以使用聚合函数。</p></li><li><p>HAVING 子句可以让我们筛选成组后的各组数据，WHERE子句在聚合（聚合函数如SUM, COUNT, MAX, AVG等）前先筛选记录．也就是说作用在 GROUP BY 子句和 HAVING 子句前；而  HAVING 子句在聚合后对组记录进行筛选。</p></li><li><p><strong>结论：</strong></p><ol><li><p>当分组筛选的时候 用having</p></li><li><p>其它情况用where</p></li></ol><p>用having就一定要和group by连用，<br>用group by不一有having （它只是一个筛选条件用的）</p><p>只要条件里面的字段, <strong>不是表里面原先有的字段就需要用having</strong>。</p><p>SQL在查询表的时候先把查询的字段放到了内存里，而<strong>where查询的时候是从表里面查的，其余需要用having</strong>。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL语句顺序&quot;&gt;&lt;a href=&quot;#SQL语句顺序&quot; class=&quot;headerlink&quot; title=&quot;SQL语句顺序&quot;&gt;&lt;/a&gt;SQL语句顺序&lt;/h1&gt;&lt;p&gt;sql语句的书写顺序:&lt;br&gt;&lt;strong&gt;select &amp;gt;&amp;gt; from &amp;gt;&amp;g</summary>
      
    
    
    
    
    <category term="SQL" scheme="https://artemis727.github.io/tags/SQL/"/>
    
  </entry>
  
</feed>
